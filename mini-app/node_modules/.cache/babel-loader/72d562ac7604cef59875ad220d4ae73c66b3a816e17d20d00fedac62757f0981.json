{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"badgeBeforeTitle\", \"badgeAfterTitle\", \"badgeBeforeSubtitle\", \"badgeAfterSubtitle\", \"before\", \"indicator\", \"children\", \"after\", \"expandable\", \"multiline\", \"subhead\", \"subtitle\", \"extraSubtitle\", \"className\"];\nimport * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { getPlatformClassName } from '../../helpers/getPlatformClassName';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Icon24Chevron } from '@vkontakte/icons';\nimport { Platform } from '../../lib/platform';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\n/**\n * @see https://vkcom.github.io/VKUI/#/SimpleCell\n */\nexport var SimpleCell = function SimpleCell(_ref) {\n  var badgeBeforeTitle = _ref.badgeBeforeTitle,\n    badgeAfterTitle = _ref.badgeAfterTitle,\n    badgeBeforeSubtitle = _ref.badgeBeforeSubtitle,\n    badgeAfterSubtitle = _ref.badgeAfterSubtitle,\n    before = _ref.before,\n    indicator = _ref.indicator,\n    children = _ref.children,\n    after = _ref.after,\n    expandable = _ref.expandable,\n    multiline = _ref.multiline,\n    subhead = _ref.subhead,\n    subtitle = _ref.subtitle,\n    extraSubtitle = _ref.extraSubtitle,\n    className = _ref.className,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var platform = usePlatform();\n  var hasAfter = hasReactNode(after) || expandable && platform === Platform.IOS;\n  var _useAdaptivity = useAdaptivity(),\n    sizeY = _useAdaptivity.sizeY;\n  return /*#__PURE__*/React.createElement(Tappable, _extends({}, restProps, {\n    className: classNames(\"vkuiSimpleCell\", getPlatformClassName(\"vkuiSimpleCell\", platform), getSizeYClassName(\"vkuiSimpleCell\", sizeY), expandable && \"vkuiSimpleCell--exp\", multiline && \"vkuiSimpleCell--mult\", className)\n  }), before, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSimpleCell__main\"\n  }, subhead && /*#__PURE__*/React.createElement(Subhead, {\n    Component: \"span\",\n    className: classNames(\"vkuiSimpleCell__text\", \"vkuiSimpleCell__subhead\")\n  }, subhead), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSimpleCell__content\"\n  }, badgeBeforeTitle && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSimpleCell__badge\"\n  }, badgeBeforeTitle), /*#__PURE__*/React.createElement(Headline, {\n    Component: \"span\",\n    className: \"vkuiSimpleCell__children\",\n    weight: \"3\"\n  }, children), hasReactNode(badgeAfterTitle) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSimpleCell__badge\"\n  }, badgeAfterTitle)), subtitle && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSimpleCell__content\"\n  }, badgeBeforeSubtitle && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSimpleCell__badge\"\n  }, badgeBeforeSubtitle), /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"vkuiSimpleCell__typography\", \"vkuiSimpleCell__text\", \"vkuiSimpleCell__subtitle\")\n  }, subtitle), badgeAfterSubtitle && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSimpleCell__badge\"\n  }, badgeAfterSubtitle)), extraSubtitle && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"vkuiSimpleCell__typography\", \"vkuiSimpleCell__text\", \"vkuiSimpleCell__extraSubtitle\")\n  }, extraSubtitle)), hasReactNode(indicator) && /*#__PURE__*/React.createElement(Headline, {\n    Component: \"span\",\n    weight: \"3\",\n    className: \"vkuiSimpleCell__indicator\"\n  }, indicator), hasAfter && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSimpleCell__after\"\n  }, after, expandable && platform === Platform.IOS && /*#__PURE__*/React.createElement(Icon24Chevron, null)));\n};","map":{"version":3,"names":["React","classNames","hasReactNode","getPlatformClassName","Tappable","Icon24Chevron","Platform","usePlatform","useAdaptivity","Headline","Subhead","getSizeYClassName","SimpleCell","_ref","badgeBeforeTitle","badgeAfterTitle","badgeBeforeSubtitle","badgeAfterSubtitle","before","indicator","children","after","expandable","multiline","subhead","subtitle","extraSubtitle","className","restProps","_objectWithoutProperties","_excluded","platform","hasAfter","IOS","_useAdaptivity","sizeY","createElement","_extends","Component","weight"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\SimpleCell\\SimpleCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { HasComponent } from '../../types';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { getPlatformClassName } from '../../helpers/getPlatformClassName';\nimport { TappableProps, Tappable } from '../Tappable/Tappable';\nimport { Icon24Chevron } from '@vkontakte/icons';\nimport { Platform } from '../../lib/platform';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport styles from './SimpleCell.module.css';\n\nexport interface SimpleCellOwnProps extends HasComponent {\n  /**\n   * Иконка 28 или `<Avatar size={28|32|40|48|72} />`\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится слева от текста `children`.\n   */\n  badgeBeforeTitle?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится справа от текста `children`.\n   */\n  badgeAfterTitle?: React.ReactNode;\n  /**\n   * Иконка 12. Добавится слева от текста `subtitle`.\n   */\n  badgeBeforeSubtitle?: React.ReactNode;\n  /**\n   * Иконка 12. Добавится справа от текста `subtitle`.\n   */\n  badgeAfterSubtitle?: React.ReactNode;\n  /**\n   * Контейнер для текста справа от `children`.\n   */\n  indicator?: React.ReactNode;\n  /**\n   * Дополнительная строка текста над `children`.\n   */\n  subhead?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children`.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children` и `subtitle`.\n   */\n  extraSubtitle?: React.ReactNode;\n  /**\n   * Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.\n   */\n  after?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  /**\n   * В iOS добавляет chevron справа. Передавать `true`, если предполагается переход при клике по ячейке.\n   */\n  expandable?: boolean;\n  /**\n   * Включает многострочный режим для отображения текста\n   */\n  multiline?: boolean;\n}\n\nexport interface SimpleCellProps extends SimpleCellOwnProps, TappableProps {}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SimpleCell\n */\nexport const SimpleCell = ({\n  badgeBeforeTitle,\n  badgeAfterTitle,\n  badgeBeforeSubtitle,\n  badgeAfterSubtitle,\n  before,\n  indicator,\n  children,\n  after,\n  expandable,\n  multiline,\n  subhead,\n  subtitle,\n  extraSubtitle,\n  className,\n  ...restProps\n}: SimpleCellProps) => {\n  const platform = usePlatform();\n  const hasAfter = hasReactNode(after) || (expandable && platform === Platform.IOS);\n  const { sizeY } = useAdaptivity();\n\n  return (\n    <Tappable\n      {...restProps}\n      className={classNames(\n        styles['SimpleCell'],\n        getPlatformClassName(styles['SimpleCell'], platform),\n        getSizeYClassName(styles['SimpleCell'], sizeY),\n        expandable && styles['SimpleCell--exp'],\n        multiline && styles['SimpleCell--mult'],\n        className,\n      )}\n    >\n      {before}\n      <div className={styles['SimpleCell__main']}>\n        {subhead && (\n          <Subhead\n            Component=\"span\"\n            className={classNames(styles['SimpleCell__text'], styles['SimpleCell__subhead'])}\n          >\n            {subhead}\n          </Subhead>\n        )}\n        <div className={styles['SimpleCell__content']}>\n          {badgeBeforeTitle && (\n            <span className={styles['SimpleCell__badge']}>{badgeBeforeTitle}</span>\n          )}\n          <Headline Component=\"span\" className={styles['SimpleCell__children']} weight=\"3\">\n            {children}\n          </Headline>\n          {hasReactNode(badgeAfterTitle) && (\n            <span className={styles['SimpleCell__badge']}>{badgeAfterTitle}</span>\n          )}\n        </div>\n        {subtitle && (\n          <div className={styles['SimpleCell__content']}>\n            {badgeBeforeSubtitle && (\n              <span className={styles['SimpleCell__badge']}>{badgeBeforeSubtitle}</span>\n            )}\n            <span\n              className={classNames(\n                styles['SimpleCell__typography'],\n                styles['SimpleCell__text'],\n                styles['SimpleCell__subtitle'],\n              )}\n            >\n              {subtitle}\n            </span>\n            {badgeAfterSubtitle && (\n              <span className={styles['SimpleCell__badge']}>{badgeAfterSubtitle}</span>\n            )}\n          </div>\n        )}\n        {extraSubtitle && (\n          <span\n            className={classNames(\n              styles['SimpleCell__typography'],\n              styles['SimpleCell__text'],\n              styles['SimpleCell__extraSubtitle'],\n            )}\n          >\n            {extraSubtitle}\n          </span>\n        )}\n      </div>\n      {hasReactNode(indicator) && (\n        <Headline Component=\"span\" weight=\"3\" className={styles['SimpleCell__indicator']}>\n          {indicator}\n        </Headline>\n      )}\n      {hasAfter && (\n        <div className={styles['SimpleCell__after']}>\n          {after}\n          {expandable && platform === Platform.IOS && <Icon24Chevron />}\n        </div>\n      )}\n    </Tappable>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}