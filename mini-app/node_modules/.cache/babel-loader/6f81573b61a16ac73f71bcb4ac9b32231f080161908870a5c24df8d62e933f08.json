{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nvar _excluded = [\"option\"],\n  _excluded2 = [\"before\", \"name\", \"className\", \"getRef\", \"getRootRef\", \"popupDirection\", \"style\", \"onChange\", \"children\", \"onInputChange\", \"renderDropdown\", \"onOpen\", \"onClose\", \"fetching\", \"forceDropdownPortal\", \"selectType\", \"autoHideScrollbar\", \"autoHideScrollbarDelay\", \"searchable\", \"renderOption\", \"options\", \"emptyText\", \"filterFn\", \"icon\", \"dropdownOffsetDistance\", \"fixDropdownWidth\"];\nimport * as React from 'react';\nimport { SelectMimicry } from '../SelectMimicry/SelectMimicry';\nimport { debounce, multiRef, getTitleFromChildren } from '../../lib/utils';\nimport { classNames } from '@vkontakte/vkjs';\nimport { CustomSelectOption } from '../CustomSelectOption/CustomSelectOption';\nimport { Input } from '../Input/Input';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { defaultFilterFn, getFormFieldModeFromSelectType } from '../../lib/select';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nvar findIndexAfter = function findIndexAfter() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex(function (option, i) {\n    return i > startIndex && !option.disabled;\n  });\n};\nvar findIndexBefore = function findIndexBefore() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var endIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : options.length;\n  var result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (var i = endIndex - 1; i >= 0; i--) {\n    var _option = options[i];\n    if (!_option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\nvar warn = warnOnce('CustomSelect');\nvar checkOptionsValueType = function checkOptionsValueType(options) {\n  if (new Set(options.map(function (item) {\n    return _typeof(item.value);\n  })).size > 1) {\n    warn('Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.', 'error');\n  }\n};\nfunction defaultRenderOptionFn(_ref) {\n  var option = _ref.option,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(CustomSelectOption, props);\n}\nvar handleOptionDown = function handleOptionDown(e) {\n  e.preventDefault();\n};\nfunction findSelectedIndex(options, value) {\n  var _options$findIndex;\n  return (_options$findIndex = options.findIndex(function (item) {\n    value = typeof item.value === 'number' ? Number(value) : value;\n    return item.value === value;\n  })) !== null && _options$findIndex !== void 0 ? _options$findIndex : -1;\n}\nvar filter = function filter(options, inputValue, filterFn) {\n  return typeof filterFn === 'function' ? options.filter(function (option) {\n    return filterFn(inputValue, option);\n  }) : options;\n};\nvar defaultOptions = [];\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport function CustomSelect(props) {\n  var _props$value, _props$value2;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    opened = _React$useState2[0],\n    setOpened = _React$useState2[1];\n  var before = props.before,\n    name = props.name,\n    className = props.className,\n    getRef = props.getRef,\n    getRootRef = props.getRootRef,\n    popupDirection = props.popupDirection,\n    style = props.style,\n    onChange = props.onChange,\n    children = props.children,\n    onInputChangeProp = props.onInputChange,\n    renderDropdown = props.renderDropdown,\n    onOpen = props.onOpen,\n    onClose = props.onClose,\n    fetching = props.fetching,\n    forceDropdownPortal = props.forceDropdownPortal,\n    _props$selectType = props.selectType,\n    selectType = _props$selectType === void 0 ? 'default' : _props$selectType,\n    autoHideScrollbar = props.autoHideScrollbar,\n    autoHideScrollbarDelay = props.autoHideScrollbarDelay,\n    _props$searchable = props.searchable,\n    searchable = _props$searchable === void 0 ? false : _props$searchable,\n    _props$renderOption = props.renderOption,\n    renderOptionProp = _props$renderOption === void 0 ? defaultRenderOptionFn : _props$renderOption,\n    _props$options = props.options,\n    optionsProp = _props$options === void 0 ? defaultOptions : _props$options,\n    _props$emptyText = props.emptyText,\n    emptyText = _props$emptyText === void 0 ? 'Ничего не найдено' : _props$emptyText,\n    _props$filterFn = props.filterFn,\n    filterFn = _props$filterFn === void 0 ? defaultFilterFn : _props$filterFn,\n    _props$icon = props.icon,\n    icon = _props$icon === void 0 ? /*#__PURE__*/React.createElement(DropdownIcon, {\n      opened: opened\n    }) : _props$icon,\n    _props$dropdownOffset = props.dropdownOffsetDistance,\n    dropdownOffsetDistance = _props$dropdownOffset === void 0 ? 0 : _props$dropdownOffset,\n    _props$fixDropdownWid = props.fixDropdownWidth,\n    fixDropdownWidth = _props$fixDropdownWid === void 0 ? true : _props$fixDropdownWid,\n    restProps = _objectWithoutProperties(props, _excluded2);\n  if (process.env.NODE_ENV === 'development') {\n    checkOptionsValueType(optionsProp);\n  }\n  var containerRef = React.useRef(null);\n  var scrollBoxRef = React.useRef(null);\n  var selectElRef = React.useRef(null);\n  var _React$useState3 = React.useState(-1),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    focusedOptionIndex = _React$useState4[0],\n    setFocusedOptionIndex = _React$useState4[1];\n  var _React$useState5 = React.useState(props.value !== undefined),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isControlledOutside = _React$useState6[0],\n    setIsControlledOutside = _React$useState6[1];\n  var _React$useState7 = React.useState(''),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    inputValue = _React$useState8[0],\n    setInputValue = _React$useState8[1];\n  var _React$useState9 = React.useState((_props$value = props.value) !== null && _props$value !== void 0 ? _props$value : props.defaultValue),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    nativeSelectValue = _React$useState10[0],\n    setNativeSelectValue = _React$useState10[1];\n  var _React$useState11 = React.useState(''),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    keyboardInput = _React$useState12[0],\n    setKeyboardInput = _React$useState12[1];\n  var _React$useState13 = React.useState(undefined),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    popperPlacement = _React$useState14[0],\n    setPopperPlacement = _React$useState14[1];\n  var _React$useState15 = React.useState(optionsProp),\n    _React$useState16 = _slicedToArray(_React$useState15, 2),\n    options = _React$useState16[0],\n    setOptions = _React$useState16[1];\n  var _React$useState17 = React.useState(findSelectedIndex(optionsProp, (_props$value2 = props.value) !== null && _props$value2 !== void 0 ? _props$value2 : props.defaultValue)),\n    _React$useState18 = _slicedToArray(_React$useState17, 2),\n    selectedOptionIndex = _React$useState18[0],\n    setSelectedOptionIndex = _React$useState18[1];\n  React.useEffect(function () {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue(function (nativeSelectValue) {\n      var _props$value3;\n      return (_props$value3 = props.value) !== null && _props$value3 !== void 0 ? _props$value3 : nativeSelectValue;\n    });\n  }, [props.value]);\n  useIsomorphicLayoutEffect(function () {\n    if (nativeSelectValue !== undefined) {\n      var _selectElRef$current;\n      var _event = new Event('change', {\n        bubbles: true\n      });\n      (_selectElRef$current = selectElRef.current) === null || _selectElRef$current === void 0 ? void 0 : _selectElRef$current.dispatchEvent(_event);\n    }\n  }, [nativeSelectValue]);\n  var selected = React.useMemo(function () {\n    if (!options.length) {\n      return null;\n    }\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n  var openedClassNames = React.useMemo(function () {\n    return classNames(opened && dropdownOffsetDistance === 0 && (popperPlacement !== null && popperPlacement !== void 0 && popperPlacement.includes('top') ? \"vkuiCustomSelect--pop-up\" : \"vkuiCustomSelect--pop-down\"));\n  }, [dropdownOffsetDistance, opened, popperPlacement]);\n  var resetKeyboardInput = React.useCallback(function () {\n    setKeyboardInput('');\n  }, []);\n  var scrollToElement = React.useCallback(function (index) {\n    var center = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var dropdown = scrollBoxRef.current;\n    var item = dropdown ? dropdown.children[index] : null;\n    if (!item || !dropdown) {\n      return;\n    }\n    var dropdownHeight = dropdown.offsetHeight;\n    var scrollTop = dropdown.scrollTop;\n    var itemTop = item.offsetTop;\n    var itemHeight = item.offsetHeight;\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n  var isValidIndex = React.useCallback(function (index) {\n    var _options$length;\n    return index >= 0 && index < ((_options$length = options.length) !== null && _options$length !== void 0 ? _options$length : 0);\n  }, [options.length]);\n  var focusOptionByIndex = React.useCallback(function (index) {\n    var _options$length2;\n    var scrollTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (index === undefined || index < 0 || index > ((_options$length2 = options.length) !== null && _options$length2 !== void 0 ? _options$length2 : 0) - 1) {\n      return;\n    }\n    var option = options[index];\n    if (option !== null && option !== void 0 && option.disabled) {\n      return;\n    }\n    if (scrollTo) {\n      scrollToElement(index);\n    }\n\n    // Это оптимизация, прежде всего, под `onMouseOver`\n    setFocusedOptionIndex(function (focusedOptionIndex) {\n      return focusedOptionIndex !== index ? index : focusedOptionIndex;\n    });\n  }, [options, scrollToElement]);\n  var areOptionsShown = React.useCallback(function () {\n    return scrollBoxRef.current !== null;\n  }, []);\n  var setScrollBoxRef = React.useCallback(function (ref) {\n    scrollBoxRef.current = ref;\n    if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n      {\n        scrollToElement(selectedOptionIndex, true);\n      }\n    }\n  }, [isValidIndex, scrollToElement, selectedOptionIndex]);\n  var onKeyboardInput = React.useCallback(function (key) {\n    var fullInput = keyboardInput + key;\n    var optionIndex = options.findIndex(function (option) {\n      return getTitleFromChildren(option.label).toLowerCase().includes(fullInput);\n    });\n    if (optionIndex !== undefined && optionIndex > -1) {\n      focusOptionByIndex(optionIndex);\n    }\n    setKeyboardInput(fullInput);\n  }, [focusOptionByIndex, keyboardInput, options]);\n\n  /**\n   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n   */\n  var close = React.useCallback(function () {\n    resetKeyboardInput();\n    setInputValue('');\n    setOpened(false);\n    setFocusedOptionIndex(-1);\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  }, [onClose, resetKeyboardInput]);\n  var selectFocused = React.useCallback(function () {\n    if (focusedOptionIndex !== undefined && isValidIndex(focusedOptionIndex)) {\n      var item = options[focusedOptionIndex];\n      setNativeSelectValue(item === null || item === void 0 ? void 0 : item.value);\n      close();\n    }\n  }, [close, focusedOptionIndex, isValidIndex, options]);\n  var open = React.useCallback(function () {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n    if (typeof onOpen === 'function') {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n  var onBlur = React.useCallback(function () {\n    var _selectElRef$current2;\n    close();\n    var event = new Event('blur');\n    (_selectElRef$current2 = selectElRef.current) === null || _selectElRef$current2 === void 0 ? void 0 : _selectElRef$current2.dispatchEvent(event);\n  }, [close]);\n  var resetFocusedOption = React.useCallback(function () {\n    setFocusedOptionIndex(-1);\n  }, []);\n  var onFocus = React.useCallback(function () {\n    var _selectElRef$current3;\n    var event = new Event('focus');\n    (_selectElRef$current3 = selectElRef.current) === null || _selectElRef$current3 === void 0 ? void 0 : _selectElRef$current3.dispatchEvent(event);\n  }, []);\n  var onClick = React.useCallback(function () {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n  var handleKeyUp = React.useMemo(function () {\n    return debounce(resetKeyboardInput, 1000);\n  }, [resetKeyboardInput]);\n  var focusOption = React.useCallback(function (type) {\n    var index = focusedOptionIndex;\n    if (type === 'next') {\n      var nextIndex = findIndexAfter(options, index);\n      index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n    } else if (type === 'prev') {\n      var beforeIndex = findIndexBefore(options, index);\n      index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n    }\n\n    focusOptionByIndex(index);\n  }, [focusOptionByIndex, focusedOptionIndex, options]);\n  React.useEffect(function updateOptionsAndSelectedOptionIndex() {\n    var _ref2, _props$value4;\n    var value = (_ref2 = (_props$value4 = props.value) !== null && _props$value4 !== void 0 ? _props$value4 : nativeSelectValue) !== null && _ref2 !== void 0 ? _ref2 : props.defaultValue;\n    var options = searchable && inputValue !== undefined ? filter(optionsProp, inputValue, filterFn) : optionsProp;\n    setOptions(options);\n    setSelectedOptionIndex(findSelectedIndex(options, value));\n  }, [filterFn, inputValue, nativeSelectValue, optionsProp, props.defaultValue, props.value, searchable]);\n\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n  var onLabelClick = React.useCallback(function (e) {\n    var _scrollBoxRef$current;\n    if ((_scrollBoxRef$current = scrollBoxRef.current) !== null && _scrollBoxRef$current !== void 0 && _scrollBoxRef$current.contains(e.target)) {\n      e.preventDefault();\n    }\n  }, []);\n  var onNativeSelectChange = function onNativeSelectChange(e) {\n    var newSelectedOptionIndex = findSelectedIndex(options, e.currentTarget.value);\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n      onChange === null || onChange === void 0 ? void 0 : onChange(e);\n    }\n  };\n  var onInputKeyDown = React.useCallback(function (event) {\n    ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) && areOptionsShown() && event.preventDefault();\n    switch (event.key) {\n      case 'ArrowUp':\n        areOptionsShown() && focusOption('prev');\n        break;\n      case 'ArrowDown':\n        areOptionsShown() && focusOption('next');\n        break;\n      case 'Escape':\n        close();\n        break;\n      case 'Enter':\n        areOptionsShown() && selectFocused();\n        break;\n    }\n  }, [areOptionsShown, close, focusOption, selectFocused]);\n  var onInputChange = React.useCallback(function (e) {\n    // TODO v6 удалить `onInputChangeProp`.\n    if (onInputChangeProp) {\n      var _options = onInputChangeProp(e, optionsProp);\n      if (_options) {\n        if (process.env.NODE_ENV === 'development') {\n          warn('Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет ' + 'проигнорировано в v6.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.');\n        }\n        setOptions(_options);\n        setSelectedOptionIndex(findSelectedIndex(_options, nativeSelectValue));\n      }\n    } else {\n      var _options2 = filter(optionsProp, e.target.value, filterFn);\n      setOptions(_options2);\n      setSelectedOptionIndex(findSelectedIndex(_options2, nativeSelectValue));\n    }\n    setInputValue(e.target.value);\n  }, [filterFn, nativeSelectValue, onInputChangeProp, optionsProp]);\n  var handleKeyDownSelect = React.useCallback(function (event) {\n    if (event.key.length === 1 && event.key !== ' ') {\n      onKeyboardInput(event.key);\n      return;\n    }\n    ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) && areOptionsShown() && event.preventDefault();\n    switch (event.key) {\n      case 'ArrowUp':\n        if (opened) {\n          areOptionsShown() && focusOption('prev');\n        } else {\n          open();\n        }\n        break;\n      case 'ArrowDown':\n        if (opened) {\n          areOptionsShown() && focusOption('next');\n        } else {\n          open();\n        }\n        break;\n      case 'Escape':\n        close();\n        break;\n      case 'Enter':\n      case 'Spacebar':\n      case ' ':\n        if (opened) {\n          areOptionsShown() && selectFocused();\n        } else {\n          open();\n        }\n        break;\n    }\n  }, [areOptionsShown, close, focusOption, onKeyboardInput, open, opened, selectFocused]);\n  var handleOptionClick = React.useCallback(function (e) {\n    var _e$currentTarget$pare;\n    var index = Array.prototype.indexOf.call((_e$currentTarget$pare = e.currentTarget.parentNode) === null || _e$currentTarget$pare === void 0 ? void 0 : _e$currentTarget$pare.children, e.currentTarget);\n    var option = options[index];\n    if (option && !option.disabled) {\n      selectFocused();\n    }\n  }, [options, selectFocused]);\n  var handleOptionHover = React.useCallback(function (e) {\n    var _e$currentTarget$pare2;\n    focusOptionByIndex(Array.prototype.indexOf.call((_e$currentTarget$pare2 = e.currentTarget.parentNode) === null || _e$currentTarget$pare2 === void 0 ? void 0 : _e$currentTarget$pare2.children, e.currentTarget), false);\n  }, [focusOptionByIndex]);\n  var renderOption = React.useCallback(function (option, index) {\n    var hovered = index === focusedOptionIndex;\n    var selected = index === selectedOptionIndex;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"\".concat(option.value)\n    }, renderOptionProp({\n      option: option,\n      hovered: hovered,\n      children: option.label,\n      selected: selected,\n      disabled: option.disabled,\n      onClick: handleOptionClick,\n      onMouseDown: handleOptionDown,\n      // Используем `onMouseOver` вместо `onMouseEnter`.\n      // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n      //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n      //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n      //  2. Если это тач-устройство.\n      //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n      //     но не на тот, на который нажали в первый раз.\n      // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n      onMouseOver: handleOptionHover\n    }));\n  }, [focusedOptionIndex, handleOptionClick, handleOptionHover, renderOptionProp, selectedOptionIndex]);\n  var resolvedContent = React.useMemo(function () {\n    var defaultDropdownContent = (options === null || options === void 0 ? void 0 : options.length) > 0 ? options.map(renderOption) : /*#__PURE__*/React.createElement(Footnote, {\n      className: \"vkuiCustomSelect__empty\"\n    }, emptyText);\n    if (typeof renderDropdown === 'function') {\n      return renderDropdown({\n        defaultDropdownContent: defaultDropdownContent\n      });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: classNames(\"vkuiCustomSelect\", className),\n    style: style,\n    ref: multiRef(containerRef, getRootRef),\n    onClick: onLabelClick\n  }, opened && searchable ? /*#__PURE__*/React.createElement(Input, _extends({}, restProps, {\n    autoFocus: true,\n    onBlur: onBlur,\n    className: openedClassNames,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onChange: onInputChange\n    // TODO Ожидается, что клик поймает нативный select, но его перехватывает Input. К сожалению, это приводит к конфликтам типизации.\n    // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n    // @ts-expect-error: TS2322 MouseEventHandler<HTMLSelectElement> !== MouseEventHandler<HTMLInputElement>\n    ,\n\n    onClick: props.onClick,\n    before: before,\n    after: icon,\n    placeholder: restProps.placeholder,\n    mode: getFormFieldModeFromSelectType(selectType)\n  })) : /*#__PURE__*/React.createElement(SelectMimicry, _extends({}, restProps, {\n    \"aria-hidden\": true,\n    onClick: onClick,\n    onKeyDown: handleKeyDownSelect,\n    onKeyUp: handleKeyUp,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    className: openedClassNames,\n    after: icon,\n    selectType: selectType\n  }), selected === null || selected === void 0 ? void 0 : selected.label), /*#__PURE__*/React.createElement(\"select\", {\n    ref: selectElRef,\n    name: name,\n    onChange: onNativeSelectChange,\n    onBlur: props.onBlur,\n    onFocus: props.onFocus,\n    onClick: props.onClick,\n    value: nativeSelectValue,\n    \"aria-hidden\": true,\n    className: \"vkuiCustomSelect__control\"\n  }, optionsProp.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: \"\".concat(item.value),\n      value: item.value\n    });\n  })), opened && /*#__PURE__*/React.createElement(CustomSelectDropdown, {\n    targetRef: containerRef,\n    placement: popupDirection,\n    scrollBoxRef: setScrollBoxRef,\n    onPlacementChange: setPopperPlacement,\n    onMouseLeave: resetFocusedOption,\n    fetching: fetching,\n    offsetDistance: dropdownOffsetDistance,\n    sameWidth: fixDropdownWidth,\n    forcePortal: forceDropdownPortal,\n    autoHideScrollbar: autoHideScrollbar,\n    autoHideScrollbarDelay: autoHideScrollbarDelay,\n    observableRefs: scrollBoxRef\n  }, resolvedContent));\n}","map":{"version":3,"names":["React","SelectMimicry","debounce","multiRef","getTitleFromChildren","classNames","CustomSelectOption","Input","DropdownIcon","Footnote","warnOnce","defaultFilterFn","getFormFieldModeFromSelectType","CustomSelectDropdown","useIsomorphicLayoutEffect","findIndexAfter","options","arguments","length","undefined","startIndex","findIndex","option","i","disabled","findIndexBefore","endIndex","result","_option","warn","checkOptionsValueType","Set","map","item","_typeof","value","size","defaultRenderOptionFn","_ref","props","_objectWithoutProperties","_excluded","createElement","handleOptionDown","e","preventDefault","findSelectedIndex","_options$findIndex","Number","filter","inputValue","filterFn","defaultOptions","CustomSelect","_props$value","_props$value2","_React$useState","useState","_React$useState2","_slicedToArray","opened","setOpened","before","name","className","getRef","getRootRef","popupDirection","style","onChange","children","onInputChangeProp","onInputChange","renderDropdown","onOpen","onClose","fetching","forceDropdownPortal","_props$selectType","selectType","autoHideScrollbar","autoHideScrollbarDelay","_props$searchable","searchable","_props$renderOption","renderOption","renderOptionProp","_props$options","optionsProp","_props$emptyText","emptyText","_props$filterFn","_props$icon","icon","_props$dropdownOffset","dropdownOffsetDistance","_props$fixDropdownWid","fixDropdownWidth","restProps","_excluded2","process","env","NODE_ENV","containerRef","useRef","scrollBoxRef","selectElRef","_React$useState3","_React$useState4","focusedOptionIndex","setFocusedOptionIndex","_React$useState5","_React$useState6","isControlledOutside","setIsControlledOutside","_React$useState7","_React$useState8","setInputValue","_React$useState9","defaultValue","_React$useState10","nativeSelectValue","setNativeSelectValue","_React$useState11","_React$useState12","keyboardInput","setKeyboardInput","_React$useState13","_React$useState14","popperPlacement","setPopperPlacement","_React$useState15","_React$useState16","setOptions","_React$useState17","_React$useState18","selectedOptionIndex","setSelectedOptionIndex","useEffect","_props$value3","_selectElRef$current","_event","Event","bubbles","current","dispatchEvent","selected","useMemo","openedClassNames","includes","resetKeyboardInput","useCallback","scrollToElement","index","center","dropdown","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","isValidIndex","_options$length","focusOptionByIndex","_options$length2","scrollTo","areOptionsShown","setScrollBoxRef","ref","onKeyboardInput","key","fullInput","optionIndex","label","toLowerCase","close","selectFocused","open","onBlur","_selectElRef$current2","event","resetFocusedOption","onFocus","_selectElRef$current3","onClick","handleKeyUp","focusOption","type","nextIndex","beforeIndex","updateOptionsAndSelectedOptionIndex","_ref2","_props$value4","onLabelClick","_scrollBoxRef$current","contains","target","onNativeSelectChange","newSelectedOptionIndex","currentTarget","onInputKeyDown","_options","_options2","handleKeyDownSelect","handleOptionClick","_e$currentTarget$pare","Array","prototype","indexOf","call","parentNode","handleOptionHover","_e$currentTarget$pare2","hovered","Fragment","concat","onMouseDown","onMouseOver","resolvedContent","defaultDropdownContent","_extends","autoFocus","onKeyDown","after","placeholder","mode","onKeyUp","targetRef","placement","onPlacementChange","onMouseLeave","offsetDistance","sameWidth","forcePortal","observableRefs"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\CustomSelect\\CustomSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { SelectMimicry } from '../SelectMimicry/SelectMimicry';\nimport { debounce, multiRef, getTitleFromChildren } from '../../lib/utils';\nimport { classNames } from '@vkontakte/vkjs';\nimport { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { FormFieldProps } from '../FormField/FormField';\nimport { Input } from '../Input/Input';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { defaultFilterFn, getFormFieldModeFromSelectType } from '../../lib/select';\nimport { Placement } from '../Popper/Popper';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport { TrackerOptionsProps } from '../CustomScrollView/useTrackerVisibility';\nimport { SelectType } from '../Select/Select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport styles from './CustomSelect.module.css';\n\nconst findIndexAfter = (options: CustomSelectOptionInterface[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nconst warn = warnOnce('CustomSelect');\n\nconst checkOptionsValueType = (options: CustomSelectOptionInterface[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      'Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.',\n      'error',\n    );\n  }\n};\n\nfunction defaultRenderOptionFn({ option, ...props }: CustomSelectOptionProps): React.ReactNode {\n  return <CustomSelectOption {...props} />;\n}\n\nconst handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n  e.preventDefault();\n};\n\nfunction findSelectedIndex(options: CustomSelectOptionInterface[], value: SelectValue) {\n  return (\n    options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    }) ?? -1\n  );\n}\n\nconst filter = (\n  options: SelectProps['options'],\n  inputValue: string,\n  filterFn: SelectProps['filterFn'],\n) => {\n  return typeof filterFn === 'function'\n    ? options.filter((option) => filterFn(inputValue, option))\n    : options;\n};\n\nconst defaultOptions: CustomSelectOptionInterface[] = [];\n\ntype SelectValue = React.SelectHTMLAttributes<HTMLSelectElement>['value'];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: React.ReactElement | string;\n  disabled?: boolean;\n  [index: string]: any;\n}\n\nexport interface SelectProps extends NativeSelectProps, FormFieldProps, TrackerOptionsProps {\n  /**\n   * Если `true`, то при клике на селект в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`.\n   */\n  emptyText?: string;\n  /**\n   * > ⚠️ В v6 из возвращаемых типов будет удалён `CustomSelectOptionInterface[]`. Для кастомной фильтрации используйте\n   * > `filterFn`.\n   */\n  onInputChange?: (\n    e: React.ChangeEvent,\n    options: CustomSelectOptionInterface[],\n  ) => void | CustomSelectOptionInterface[];\n  options: CustomSelectOptionInterface[];\n  /**\n   * Функция для кастомной фильтрации. По умолчанию поиск производится по `option.label`.\n   */\n  filterFn?:\n    | false\n    | ((\n        value: string,\n        option: CustomSelectOptionInterface,\n        getOptionLabel?: (option: Partial<CustomSelectOptionInterface>) => string,\n      ) => boolean);\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](https://vkcom.github.io/VKUI/#/CustomSelectOption?id=props)\n   */\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В `defaultDropdownContent` содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({\n    defaultDropdownContent,\n  }: {\n    defaultDropdownContent: React.ReactNode;\n  }) => React.ReactNode;\n  /**\n   * Если `true`, то в дропдауне вместо списка опций рисуется спиннер. При переданных `renderDropdown` и `fetching: true`\n   * \"победит\" `renderDropdown`.\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n  icon?: React.ReactNode;\n  dropdownOffsetDistance?: number;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  selectType?: SelectType;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport function CustomSelect(props: SelectProps) {\n  const [opened, setOpened] = React.useState(false);\n  const {\n    before,\n    name,\n    className,\n    getRef,\n    getRootRef,\n    popupDirection,\n    style,\n    onChange,\n    children,\n    onInputChange: onInputChangeProp,\n    renderDropdown,\n    onOpen,\n    onClose,\n    fetching,\n    forceDropdownPortal,\n    selectType = 'default',\n    autoHideScrollbar,\n    autoHideScrollbarDelay,\n    searchable = false,\n    renderOption: renderOptionProp = defaultRenderOptionFn,\n    options: optionsProp = defaultOptions,\n    emptyText = 'Ничего не найдено',\n    filterFn = defaultFilterFn,\n    icon = <DropdownIcon opened={opened} />,\n    dropdownOffsetDistance = 0,\n    fixDropdownWidth = true,\n    ...restProps\n  } = props;\n\n  if (process.env.NODE_ENV === 'development') {\n    checkOptionsValueType(optionsProp);\n  }\n\n  const containerRef = React.useRef<HTMLLabelElement>(null);\n  const scrollBoxRef = React.useRef<HTMLDivElement | null>(null);\n  const selectElRef = React.useRef<HTMLSelectElement>(null);\n\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | undefined>(-1);\n  const [isControlledOutside, setIsControlledOutside] = React.useState(props.value !== undefined);\n  const [inputValue, setInputValue] = React.useState('');\n  const [nativeSelectValue, setNativeSelectValue] = React.useState(\n    props.value ?? props.defaultValue,\n  );\n  const [keyboardInput, setKeyboardInput] = React.useState('');\n  const [popperPlacement, setPopperPlacement] = React.useState<Placement | undefined>(undefined);\n  const [options, setOptions] = React.useState(optionsProp);\n  const [selectedOptionIndex, setSelectedOptionIndex] = React.useState<number | undefined>(\n    findSelectedIndex(optionsProp, props.value ?? props.defaultValue),\n  );\n\n  React.useEffect(() => {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue((nativeSelectValue) => props.value ?? nativeSelectValue);\n  }, [props.value]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (nativeSelectValue !== undefined) {\n      const event = new Event('change', { bubbles: true });\n\n      selectElRef.current?.dispatchEvent(event);\n    }\n  }, [nativeSelectValue]);\n\n  const selected = React.useMemo(() => {\n    if (!options.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n\n  const openedClassNames = React.useMemo(\n    () =>\n      classNames(\n        opened &&\n          dropdownOffsetDistance === 0 &&\n          (popperPlacement?.includes('top')\n            ? styles['CustomSelect--pop-up']\n            : styles['CustomSelect--pop-down']),\n      ),\n    [dropdownOffsetDistance, opened, popperPlacement],\n  );\n\n  const resetKeyboardInput = React.useCallback(() => {\n    setKeyboardInput('');\n  }, []);\n\n  const scrollToElement = React.useCallback((index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n\n  const isValidIndex = React.useCallback(\n    (index: number) => {\n      return index >= 0 && index < (options.length ?? 0);\n    },\n    [options.length],\n  );\n\n  const focusOptionByIndex = React.useCallback(\n    (index: number | undefined, scrollTo = true) => {\n      if (index === undefined || index < 0 || index > (options.length ?? 0) - 1) {\n        return;\n      }\n\n      const option = options[index];\n\n      if (option?.disabled) {\n        return;\n      }\n\n      if (scrollTo) {\n        scrollToElement(index);\n      }\n\n      // Это оптимизация, прежде всего, под `onMouseOver`\n      setFocusedOptionIndex((focusedOptionIndex) =>\n        focusedOptionIndex !== index ? index : focusedOptionIndex,\n      );\n    },\n    [options, scrollToElement],\n  );\n\n  const areOptionsShown = React.useCallback(() => {\n    return scrollBoxRef.current !== null;\n  }, []);\n\n  const setScrollBoxRef = React.useCallback(\n    (ref: HTMLDivElement | null) => {\n      scrollBoxRef.current = ref;\n\n      if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n        {\n          scrollToElement(selectedOptionIndex, true);\n        }\n      }\n    },\n    [isValidIndex, scrollToElement, selectedOptionIndex],\n  );\n\n  const onKeyboardInput = React.useCallback(\n    (key: string) => {\n      const fullInput = keyboardInput + key;\n\n      const optionIndex = options.findIndex((option) => {\n        return getTitleFromChildren(option.label).toLowerCase().includes(fullInput);\n      });\n\n      if (optionIndex !== undefined && optionIndex > -1) {\n        focusOptionByIndex(optionIndex);\n      }\n\n      setKeyboardInput(fullInput);\n    },\n    [focusOptionByIndex, keyboardInput, options],\n  );\n\n  /**\n   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n   */\n  const close = React.useCallback(() => {\n    resetKeyboardInput();\n\n    setInputValue('');\n    setOpened(false);\n    setFocusedOptionIndex(-1);\n    onClose?.();\n  }, [onClose, resetKeyboardInput]);\n\n  const selectFocused = React.useCallback(() => {\n    if (focusedOptionIndex !== undefined && isValidIndex(focusedOptionIndex)) {\n      const item = options[focusedOptionIndex];\n\n      setNativeSelectValue(item?.value);\n      close();\n    }\n  }, [close, focusedOptionIndex, isValidIndex, options]);\n\n  const open = React.useCallback(() => {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n\n    if (typeof onOpen === 'function') {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n\n  const onBlur = React.useCallback(() => {\n    close();\n    const event = new Event('blur');\n    selectElRef.current?.dispatchEvent(event);\n  }, [close]);\n\n  const resetFocusedOption = React.useCallback(() => {\n    setFocusedOptionIndex(-1);\n  }, []);\n\n  const onFocus = React.useCallback(() => {\n    const event = new Event('focus');\n    selectElRef.current?.dispatchEvent(event);\n  }, []);\n\n  const onClick = React.useCallback(() => {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n\n  const handleKeyUp = React.useMemo(() => debounce(resetKeyboardInput, 1000), [resetKeyboardInput]);\n\n  const focusOption = React.useCallback(\n    (type: 'next' | 'prev') => {\n      let index = focusedOptionIndex;\n\n      if (type === 'next') {\n        const nextIndex = findIndexAfter(options, index);\n        index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n      } else if (type === 'prev') {\n        const beforeIndex = findIndexBefore(options, index);\n        index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n      }\n\n      focusOptionByIndex(index);\n    },\n    [focusOptionByIndex, focusedOptionIndex, options],\n  );\n\n  React.useEffect(\n    function updateOptionsAndSelectedOptionIndex() {\n      const value = props.value ?? nativeSelectValue ?? props.defaultValue;\n\n      const options =\n        searchable && inputValue !== undefined\n          ? filter(optionsProp, inputValue, filterFn)\n          : optionsProp;\n\n      setOptions(options);\n      setSelectedOptionIndex(findSelectedIndex(options, value));\n    },\n    [\n      filterFn,\n      inputValue,\n      nativeSelectValue,\n      optionsProp,\n      props.defaultValue,\n      props.value,\n      searchable,\n    ],\n  );\n\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n  const onLabelClick = React.useCallback((e: React.MouseEvent<HTMLLabelElement>) => {\n    if (scrollBoxRef.current?.contains(e.target as Node)) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newSelectedOptionIndex = findSelectedIndex(options, e.currentTarget.value);\n\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n      onChange?.(e);\n    }\n  };\n\n  const onInputKeyDown: React.KeyboardEventHandler<HTMLInputElement> = React.useCallback(\n    (event) => {\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          areOptionsShown() && focusOption('prev');\n          break;\n        case 'ArrowDown':\n          areOptionsShown() && focusOption('next');\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Enter':\n          areOptionsShown() && selectFocused();\n          break;\n      }\n    },\n    [areOptionsShown, close, focusOption, selectFocused],\n  );\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      // TODO v6 удалить `onInputChangeProp`.\n      if (onInputChangeProp) {\n        const options = onInputChangeProp(e, optionsProp);\n        if (options) {\n          if (process.env.NODE_ENV === 'development') {\n            warn(\n              'Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет ' +\n                'проигнорировано в v6.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.',\n            );\n          }\n          setOptions(options);\n          setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue));\n        }\n      } else {\n        const options = filter(optionsProp, e.target.value, filterFn);\n        setOptions(options);\n        setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue));\n      }\n      setInputValue(e.target.value);\n    },\n    [filterFn, nativeSelectValue, onInputChangeProp, optionsProp],\n  );\n\n  const handleKeyDownSelect = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key.length === 1 && event.key !== ' ') {\n        onKeyboardInput(event.key);\n        return;\n      }\n\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          if (opened) {\n            areOptionsShown() && focusOption('prev');\n          } else {\n            open();\n          }\n          break;\n        case 'ArrowDown':\n          if (opened) {\n            areOptionsShown() && focusOption('next');\n          } else {\n            open();\n          }\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Enter':\n        case 'Spacebar':\n        case ' ':\n          if (opened) {\n            areOptionsShown() && selectFocused();\n          } else {\n            open();\n          }\n          break;\n      }\n    },\n    [areOptionsShown, close, focusOption, onKeyboardInput, open, opened, selectFocused],\n  );\n\n  const handleOptionClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      const index = Array.prototype.indexOf.call(\n        e.currentTarget.parentNode?.children,\n        e.currentTarget,\n      );\n      const option = options[index];\n\n      if (option && !option.disabled) {\n        selectFocused();\n      }\n    },\n    [options, selectFocused],\n  );\n\n  const handleOptionHover = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      focusOptionByIndex(\n        Array.prototype.indexOf.call(e.currentTarget.parentNode?.children, e.currentTarget),\n        false,\n      );\n    },\n    [focusOptionByIndex],\n  );\n\n  const renderOption = React.useCallback(\n    (option: CustomSelectOptionInterface, index: number) => {\n      const hovered = index === focusedOptionIndex;\n      const selected = index === selectedOptionIndex;\n\n      return (\n        <React.Fragment key={`${option.value}`}>\n          {renderOptionProp({\n            option,\n            hovered,\n            children: option.label,\n            selected,\n            disabled: option.disabled,\n            onClick: handleOptionClick,\n            onMouseDown: handleOptionDown,\n            // Используем `onMouseOver` вместо `onMouseEnter`.\n            // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n            //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n            //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n            //  2. Если это тач-устройство.\n            //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n            //     но не на тот, на который нажали в первый раз.\n            // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n            onMouseOver: handleOptionHover,\n          })}\n        </React.Fragment>\n      );\n    },\n    [\n      focusedOptionIndex,\n      handleOptionClick,\n      handleOptionHover,\n      renderOptionProp,\n      selectedOptionIndex,\n    ],\n  );\n\n  const resolvedContent = React.useMemo(() => {\n    const defaultDropdownContent =\n      options?.length > 0 ? (\n        options.map(renderOption)\n      ) : (\n        <Footnote className={styles['CustomSelect__empty']}>{emptyText}</Footnote>\n      );\n\n    if (typeof renderDropdown === 'function') {\n      return renderDropdown({ defaultDropdownContent });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n\n  return (\n    <label\n      className={classNames(styles['CustomSelect'], className)}\n      style={style}\n      ref={multiRef(containerRef, getRootRef)}\n      onClick={onLabelClick}\n    >\n      {opened && searchable ? (\n        <Input\n          {...restProps}\n          autoFocus\n          onBlur={onBlur}\n          className={openedClassNames}\n          value={inputValue}\n          onKeyDown={onInputKeyDown}\n          onChange={onInputChange}\n          // TODO Ожидается, что клик поймает нативный select, но его перехватывает Input. К сожалению, это приводит к конфликтам типизации.\n          // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n          // @ts-expect-error: TS2322 MouseEventHandler<HTMLSelectElement> !== MouseEventHandler<HTMLInputElement>\n          onClick={props.onClick}\n          before={before}\n          after={icon}\n          placeholder={restProps.placeholder}\n          mode={getFormFieldModeFromSelectType(selectType)}\n        />\n      ) : (\n        <SelectMimicry\n          {...restProps}\n          aria-hidden\n          onClick={onClick}\n          onKeyDown={handleKeyDownSelect}\n          onKeyUp={handleKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          className={openedClassNames}\n          after={icon}\n          selectType={selectType}\n        >\n          {selected?.label}\n        </SelectMimicry>\n      )}\n      <select\n        ref={selectElRef}\n        name={name}\n        onChange={onNativeSelectChange}\n        onBlur={props.onBlur}\n        onFocus={props.onFocus}\n        onClick={props.onClick}\n        value={nativeSelectValue}\n        aria-hidden\n        className={styles['CustomSelect__control']}\n      >\n        {optionsProp.map((item) => (\n          <option key={`${item.value}`} value={item.value} />\n        ))}\n      </select>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={containerRef}\n          placement={popupDirection}\n          scrollBoxRef={setScrollBoxRef}\n          onPlacementChange={setPopperPlacement}\n          onMouseLeave={resetFocusedOption}\n          fetching={fetching}\n          offsetDistance={dropdownOffsetDistance}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n          autoHideScrollbar={autoHideScrollbar}\n          autoHideScrollbarDelay={autoHideScrollbarDelay}\n          observableRefs={scrollBoxRef}\n        >\n          {resolvedContent}\n        </CustomSelectDropdown>\n      )}\n    </label>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}