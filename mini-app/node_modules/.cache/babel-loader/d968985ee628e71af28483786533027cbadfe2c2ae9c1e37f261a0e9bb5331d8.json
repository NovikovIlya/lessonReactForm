{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\nvar initialState = {\n  type: '',\n  viewportWidth: 0,\n  viewportHeight: 0\n};\nfunction resolveAdaptivity(e) {\n  var _e$detail = e.detail,\n    type = _e$detail.type,\n    data = _e$detail.data;\n  if (type !== 'VKWebAppUpdateConfig' || !data) {\n    return null;\n  }\n  var adaptivity = data.adaptivity,\n    viewportWidth = data.viewport_width,\n    viewportHeight = data.viewport_height;\n  var bridgeAdaptivity = {\n    type: '',\n    viewportWidth: isFinite(viewportWidth) ? +viewportWidth : 0,\n    viewportHeight: isFinite(viewportHeight) ? +viewportHeight : 0\n  };\n  switch (adaptivity) {\n    case 'force_mobile':\n    case 'force_mobile_compact':\n    case 'adaptive':\n      bridgeAdaptivity.type = adaptivity;\n  }\n  return bridgeAdaptivity;\n}\nvkBridge.subscribe(function (e) {\n  var bridgeAdaptivity = resolveAdaptivity(e);\n  if (bridgeAdaptivity) {\n    initialState = bridgeAdaptivity;\n  }\n});\nexport function useBridgeAdaptivity() {\n  var _React$useState = React.useState(initialState),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    bridgeAdaptivity = _React$useState2[0],\n    setBridgeAdaptivity = _React$useState2[1];\n  useIsomorphicLayoutEffect(function () {\n    function bridgeListener(e) {\n      var newBridgeAdaptivity = resolveAdaptivity(e);\n      if (newBridgeAdaptivity) {\n        setBridgeAdaptivity(newBridgeAdaptivity);\n      }\n    }\n    vkBridge.subscribe(bridgeListener);\n    return function () {\n      vkBridge.unsubscribe(bridgeListener);\n    };\n  }, []);\n  return bridgeAdaptivity;\n}","map":{"version":3,"names":["React","vkBridge","useIsomorphicLayoutEffect","initialState","type","viewportWidth","viewportHeight","resolveAdaptivity","e","_e$detail","detail","data","adaptivity","viewport_width","viewport_height","bridgeAdaptivity","isFinite","subscribe","useBridgeAdaptivity","_React$useState","useState","_React$useState2","_slicedToArray","setBridgeAdaptivity","bridgeListener","newBridgeAdaptivity","unsubscribe"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useBridgeAdaptivity.ts"],"sourcesContent":["import * as React from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\nexport interface BridgeAdaptivity {\n  type: '' | 'force_mobile' | 'force_mobile_compact' | 'adaptive';\n  viewportWidth: number;\n  viewportHeight: number;\n}\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nlet initialState: BridgeAdaptivity = {\n  type: '',\n  viewportWidth: 0,\n  viewportHeight: 0,\n};\n\nfunction resolveAdaptivity(e: BridgeEvent): BridgeAdaptivity | null {\n  const { type, data } = e.detail;\n\n  if (type !== 'VKWebAppUpdateConfig' || !data) {\n    return null;\n  }\n\n  const { adaptivity, viewport_width: viewportWidth, viewport_height: viewportHeight } = data;\n\n  const bridgeAdaptivity: BridgeAdaptivity = {\n    type: '',\n    viewportWidth: isFinite(viewportWidth) ? +viewportWidth : 0,\n    viewportHeight: isFinite(viewportHeight) ? +viewportHeight : 0,\n  };\n\n  switch (adaptivity) {\n    case 'force_mobile':\n    case 'force_mobile_compact':\n    case 'adaptive':\n      bridgeAdaptivity.type = adaptivity;\n  }\n\n  return bridgeAdaptivity;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const bridgeAdaptivity = resolveAdaptivity(e);\n\n  if (bridgeAdaptivity) {\n    initialState = bridgeAdaptivity;\n  }\n});\n\nexport function useBridgeAdaptivity(): BridgeAdaptivity {\n  const [bridgeAdaptivity, setBridgeAdaptivity] = React.useState<BridgeAdaptivity>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function bridgeListener(e: BridgeEvent) {\n      const newBridgeAdaptivity = resolveAdaptivity(e);\n\n      if (newBridgeAdaptivity) {\n        setBridgeAdaptivity(newBridgeAdaptivity);\n      }\n    }\n\n    vkBridge.subscribe(bridgeListener);\n    return () => {\n      vkBridge.unsubscribe(bridgeListener);\n    };\n  }, []);\n\n  return bridgeAdaptivity;\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,yBAAyB,QAAQ,kCAAkC;AAiB5E,IAAIC,YAA8B,GAAG;EACnCC,IAAI,EAAE,EAAE;EACRC,aAAa,EAAE,CAAC;EAChBC,cAAc,EAAE;AAClB,CAAC;AAED,SAASC,iBAAiBA,CAACC,CAAc,EAA2B;EAClE,IAAAC,SAAA,GAAuBD,CAAC,CAACE,MAAM;IAAvBN,IAAI,GAAAK,SAAA,CAAJL,IAAI;IAAEO,IAAI,GAAAF,SAAA,CAAJE,IAAI;EAElB,IAAIP,IAAI,KAAK,sBAAsB,IAAI,CAACO,IAAI,EAAE;IAC5C,OAAO,IAAI;EACb;EAEA,IAAQC,UAAU,GAAqED,IAAI,CAAnFC,UAAU;IAAkBP,aAAa,GAAsCM,IAAI,CAAvEE,cAAc;IAAkCP,cAAc,GAAKK,IAAI,CAAxCG,eAAe;EAElE,IAAMC,gBAAkC,GAAG;IACzCX,IAAI,EAAE,EAAE;IACRC,aAAa,EAAEW,QAAQ,CAACX,aAAa,CAAC,GAAG,CAACA,aAAa,GAAG,CAAC;IAC3DC,cAAc,EAAEU,QAAQ,CAACV,cAAc,CAAC,GAAG,CAACA,cAAc,GAAG;EAC/D,CAAC;EAED,QAAQM,UAAU;IAChB,KAAK,cAAc;IACnB,KAAK,sBAAsB;IAC3B,KAAK,UAAU;MACbG,gBAAgB,CAACX,IAAI,GAAGQ,UAAU;EAAA;EAGtC,OAAOG,gBAAgB;AACzB;AAEAd,QAAQ,CAACgB,SAAS,CAAC,UAACT,CAAc,EAAK;EACrC,IAAMO,gBAAgB,GAAGR,iBAAiB,CAACC,CAAC,CAAC;EAE7C,IAAIO,gBAAgB,EAAE;IACpBZ,YAAY,GAAGY,gBAAgB;EACjC;AACF,CAAC,CAAC;AAEF,OAAO,SAASG,mBAAmBA,CAAA,EAAqB;EACtD,IAAAC,eAAA,GAAgDnB,KAAK,CAACoB,QAAQ,CAAmBjB,YAAY,CAAC;IAAAkB,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAvFJ,gBAAgB,GAAAM,gBAAA;IAAEE,mBAAmB,GAAAF,gBAAA;EAE5CnB,yBAAyB,CAAC,YAAM;IAC9B,SAASsB,cAAcA,CAAChB,CAAc,EAAE;MACtC,IAAMiB,mBAAmB,GAAGlB,iBAAiB,CAACC,CAAC,CAAC;MAEhD,IAAIiB,mBAAmB,EAAE;QACvBF,mBAAmB,CAACE,mBAAmB,CAAC;MAC1C;IACF;IAEAxB,QAAQ,CAACgB,SAAS,CAACO,cAAc,CAAC;IAClC,OAAO,YAAM;MACXvB,QAAQ,CAACyB,WAAW,CAACF,cAAc,CAAC;IACtC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOT,gBAAgB;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}