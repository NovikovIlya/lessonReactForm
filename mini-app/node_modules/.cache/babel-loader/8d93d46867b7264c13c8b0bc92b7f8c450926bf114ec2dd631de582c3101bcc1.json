{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport { clamp } from '../helpers/math';\nimport { rangeIncrement } from '../helpers/range';\n/**\n * Хук позаимствован у @mui с некоторыми изменениями.\n *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).\n *\n * Примеры вывода:\n *           v\n * [1, 2, 3, 4, 5, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 6, 7, 8, 9, 10]\n */\nexport var usePagination = function usePagination() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$currentPage = _ref.currentPage,\n    currentPage = _ref$currentPage === void 0 ? 1 : _ref$currentPage,\n    _ref$siblingCount = _ref.siblingCount,\n    siblingCount = _ref$siblingCount === void 0 ? 1 : _ref$siblingCount,\n    _ref$boundaryCount = _ref.boundaryCount,\n    boundaryCount = _ref$boundaryCount === void 0 ? 1 : _ref$boundaryCount,\n    _ref$totalPages = _ref.totalPages,\n    endPage = _ref$totalPages === void 0 ? 1 : _ref$totalPages;\n  return React.useMemo(function () {\n    var startPages = rangeIncrement(1, Math.min(boundaryCount, endPage));\n    var endPages = rangeIncrement(Math.max(endPage - boundaryCount + 1, boundaryCount + 1), endPage);\n    var lowerBoundaryWhenCurrentPageHigh = endPage - boundaryCount - 1 - 2 * siblingCount;\n    var siblingsStart = clamp(currentPage - siblingCount, boundaryCount + 2, lowerBoundaryWhenCurrentPageHigh);\n    var upperBoundaryWhenCurrentPageLow = boundaryCount + 2 + 2 * siblingCount;\n    var siblingsEnd = Math.min(Math.max(currentPage + siblingCount, upperBoundaryWhenCurrentPageLow), endPages.length > 0 ? endPages[0] - 2 : endPage - 1);\n    var pages = startPages;\n    if (siblingsStart > boundaryCount + 2) {\n      pages.push('start-ellipsis');\n    } else if (boundaryCount + 1 < endPage - boundaryCount) {\n      pages.push(boundaryCount + 1);\n    }\n    pages.push.apply(pages, _toConsumableArray(rangeIncrement(siblingsStart, siblingsEnd)));\n    if (siblingsEnd < endPage - boundaryCount - 1) {\n      pages.push('end-ellipsis');\n    } else if (endPage - boundaryCount > boundaryCount) {\n      pages.push(endPage - boundaryCount);\n    }\n    pages.push.apply(pages, _toConsumableArray(endPages));\n    return pages;\n  }, [currentPage, endPage, siblingCount, boundaryCount]);\n};","map":{"version":3,"names":["React","clamp","rangeIncrement","usePagination","_ref","arguments","length","undefined","_ref$currentPage","currentPage","_ref$siblingCount","siblingCount","_ref$boundaryCount","boundaryCount","_ref$totalPages","totalPages","endPage","useMemo","startPages","Math","min","endPages","max","lowerBoundaryWhenCurrentPageHigh","siblingsStart","upperBoundaryWhenCurrentPageLow","siblingsEnd","pages","push","apply","_toConsumableArray"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\hooks\\usePagination.ts"],"sourcesContent":["import * as React from 'react';\nimport { clamp } from '../helpers/math';\nimport { rangeIncrement } from '../helpers/range';\n\ninterface UsePaginationProps {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n}\n\nexport type PaginationPageType = 'start-ellipsis' | 'end-ellipsis' | number;\n\nexport type UsePaginationResult = PaginationPageType[];\n\n/**\n * Хук позаимствован у @mui с некоторыми изменениями.\n *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).\n *\n * Примеры вывода:\n *           v\n * [1, 2, 3, 4, 5, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 6, 7, 8, 9, 10]\n */\nexport const usePagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages: endPage = 1,\n}: UsePaginationProps = {}): UsePaginationResult =>\n  React.useMemo(() => {\n    const startPages = rangeIncrement(1, Math.min(boundaryCount, endPage));\n    const endPages = rangeIncrement(\n      Math.max(endPage - boundaryCount + 1, boundaryCount + 1),\n      endPage,\n    );\n\n    const lowerBoundaryWhenCurrentPageHigh = endPage - boundaryCount - 1 - 2 * siblingCount;\n    const siblingsStart = clamp(\n      currentPage - siblingCount,\n      boundaryCount + 2,\n      lowerBoundaryWhenCurrentPageHigh,\n    );\n\n    const upperBoundaryWhenCurrentPageLow = boundaryCount + 2 + 2 * siblingCount;\n    const siblingsEnd = Math.min(\n      Math.max(currentPage + siblingCount, upperBoundaryWhenCurrentPageLow),\n      endPages.length > 0 ? endPages[0] - 2 : endPage - 1,\n    );\n\n    const pages: UsePaginationResult = startPages;\n\n    if (siblingsStart > boundaryCount + 2) {\n      pages.push('start-ellipsis');\n    } else if (boundaryCount + 1 < endPage - boundaryCount) {\n      pages.push(boundaryCount + 1);\n    }\n\n    pages.push(...rangeIncrement(siblingsStart, siblingsEnd));\n\n    if (siblingsEnd < endPage - boundaryCount - 1) {\n      pages.push('end-ellipsis');\n    } else if (endPage - boundaryCount > boundaryCount) {\n      pages.push(endPage - boundaryCount);\n    }\n\n    pages.push(...endPages);\n\n    return pages;\n  }, [currentPage, endPage, siblingCount, boundaryCount]);\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,cAAc,QAAQ,kBAAkB;AAyBjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAKF,CAAC,CAAC;IAAAG,gBAAA,GAAAJ,IAAA,CAJxBK,WAAW;IAAXA,WAAW,GAAAD,gBAAA,cAAG,CAAC,GAAAA,gBAAA;IAAAE,iBAAA,GAAAN,IAAA,CACfO,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAG,CAAC,GAAAA,iBAAA;IAAAE,kBAAA,GAAAR,IAAA,CAChBS,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,CAAC,GAAAA,kBAAA;IAAAE,eAAA,GAAAV,IAAA,CACjBW,UAAU;IAAEC,OAAO,GAAAF,eAAA,cAAG,CAAC,GAAAA,eAAA;EAAA,OAEvBd,KAAK,CAACiB,OAAO,CAAC,YAAM;IAClB,IAAMC,UAAU,GAAGhB,cAAc,CAAC,CAAC,EAAEiB,IAAI,CAACC,GAAG,CAACP,aAAa,EAAEG,OAAO,CAAC,CAAC;IACtE,IAAMK,QAAQ,GAAGnB,cAAc,CAC7BiB,IAAI,CAACG,GAAG,CAACN,OAAO,GAAGH,aAAa,GAAG,CAAC,EAAEA,aAAa,GAAG,CAAC,CAAC,EACxDG,OAAO,CACR;IAED,IAAMO,gCAAgC,GAAGP,OAAO,GAAGH,aAAa,GAAG,CAAC,GAAG,CAAC,GAAGF,YAAY;IACvF,IAAMa,aAAa,GAAGvB,KAAK,CACzBQ,WAAW,GAAGE,YAAY,EAC1BE,aAAa,GAAG,CAAC,EACjBU,gCAAgC,CACjC;IAED,IAAME,+BAA+B,GAAGZ,aAAa,GAAG,CAAC,GAAG,CAAC,GAAGF,YAAY;IAC5E,IAAMe,WAAW,GAAGP,IAAI,CAACC,GAAG,CAC1BD,IAAI,CAACG,GAAG,CAACb,WAAW,GAAGE,YAAY,EAAEc,+BAA+B,CAAC,EACrEJ,QAAQ,CAACf,MAAM,GAAG,CAAC,GAAGe,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGL,OAAO,GAAG,CAAC,CACpD;IAED,IAAMW,KAA0B,GAAGT,UAAU;IAE7C,IAAIM,aAAa,GAAGX,aAAa,GAAG,CAAC,EAAE;MACrCc,KAAK,CAACC,IAAI,CAAC,gBAAgB,CAAC;IAC9B,CAAC,MAAM,IAAIf,aAAa,GAAG,CAAC,GAAGG,OAAO,GAAGH,aAAa,EAAE;MACtDc,KAAK,CAACC,IAAI,CAACf,aAAa,GAAG,CAAC,CAAC;IAC/B;IAEAc,KAAK,CAACC,IAAI,CAAAC,KAAA,CAAVF,KAAK,EAAAG,kBAAA,CAAS5B,cAAc,CAACsB,aAAa,EAAEE,WAAW,CAAC,EAAC;IAEzD,IAAIA,WAAW,GAAGV,OAAO,GAAGH,aAAa,GAAG,CAAC,EAAE;MAC7Cc,KAAK,CAACC,IAAI,CAAC,cAAc,CAAC;IAC5B,CAAC,MAAM,IAAIZ,OAAO,GAAGH,aAAa,GAAGA,aAAa,EAAE;MAClDc,KAAK,CAACC,IAAI,CAACZ,OAAO,GAAGH,aAAa,CAAC;IACrC;IAEAc,KAAK,CAACC,IAAI,CAAAC,KAAA,CAAVF,KAAK,EAAAG,kBAAA,CAAST,QAAQ,EAAC;IAEvB,OAAOM,KAAK;EACd,CAAC,EAAE,CAAClB,WAAW,EAAEO,OAAO,EAAEL,YAAY,EAAEE,aAAa,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}