{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { ListContext } from './ListContext';\n/**\n * @see https://vkcom.github.io/VKUI/#/List\n */\nexport var List = function List(_ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isDragging = _React$useState2[0],\n    toggleDrag = _React$useState2[1];\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"list\"\n  }, restProps, {\n    className: classNames(\"vkuiList\", isDragging && \"vkuiList--dragging\", className)\n  }), /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: React.useMemo(function () {\n      return {\n        toggleDrag: toggleDrag\n      };\n    }, [])\n  }, children));\n};","map":{"version":3,"names":["React","classNames","ListContext","List","_ref","children","className","restProps","_objectWithoutProperties","_excluded","_React$useState","useState","_React$useState2","_slicedToArray","isDragging","toggleDrag","createElement","_extends","role","Provider","value","useMemo"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\List\\List.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { ListContext } from './ListContext';\nimport styles from './List.module.css';\n\nexport type ListProps = React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/List\n */\nexport const List = ({ children, className, ...restProps }: ListProps) => {\n  const [isDragging, toggleDrag] = React.useState(false);\n\n  return (\n    <div\n      role=\"list\"\n      {...restProps}\n      className={classNames(styles['List'], isDragging && styles['List--dragging'], className)}\n    >\n      <ListContext.Provider value={React.useMemo(() => ({ toggleDrag }), [])}>\n        {children}\n      </ListContext.Provider>\n    </div>\n  );\n};\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,WAAW,QAAQ,eAAe;AAK3C;AACA;AACA;AACA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAAyD;EAAA,IAAnDC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAKC,SAAS,GAAAC,wBAAA,CAAAJ,IAAA,EAAAK,SAAA;EACtD,IAAAC,eAAA,GAAiCV,KAAK,CAACW,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA/CI,UAAU,GAAAF,gBAAA;IAAEG,UAAU,GAAAH,gBAAA;EAE7B,oBACEZ,KAAA,CAAAgB,aAAA,QAAAC,QAAA;IACEC,IAAI,EAAC;EAAM,GACPX,SAAS;IACbD,SAAS,EAAEL,UAAU,aAAiBa,UAAU,wBAA4B,EAAER,SAAS;EAAE,iBAEzFN,KAAA,CAAAgB,aAAA,CAACd,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAEpB,KAAK,CAACqB,OAAO,CAAC;MAAA,OAAO;QAAEN,UAAU,EAAVA;MAAW,CAAC;IAAA,CAAC,EAAE,EAAE;EAAE,GACpEV,QAAQ,CACY,CACnB;AAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}