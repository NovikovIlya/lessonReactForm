{"ast":null,"code":"export function warnOnce(zone) {\n  var didWarn = new Set();\n  return function (message) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'warn';\n    if (!didWarn.has(message)) {\n      didWarn.add(message);\n      var formattedMessage = \"%c[VKUI/\".concat(zone, \"] \").concat(message);\n      var styles = type === 'log' ? 'color: steelblue; font-style: italic' : undefined;\n      console[type](formattedMessage, styles);\n    }\n  };\n}","map":{"version":3,"names":["warnOnce","zone","didWarn","Set","message","type","arguments","length","undefined","has","add","formattedMessage","concat","styles","console"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\lib\\warnOnce.ts"],"sourcesContent":["type WarnOnceType = 'log' | 'warn' | 'error';\nexport type WarnOnceHandler = (message: string, type?: WarnOnceType) => void;\n\nexport function warnOnce(zone: string): WarnOnceHandler {\n  const didWarn = new Set<string>();\n\n  return (message: string, type: WarnOnceType = 'warn') => {\n    if (!didWarn.has(message)) {\n      didWarn.add(message);\n\n      const formattedMessage = `%c[VKUI/${zone}] ${message}`;\n      const styles = type === 'log' ? 'color: steelblue; font-style: italic' : undefined;\n\n      console[type](formattedMessage, styles);\n    }\n  };\n}\n"],"mappings":"AAGA,OAAO,SAASA,QAAQA,CAACC,IAAY,EAAmB;EACtD,IAAMC,OAAO,GAAG,IAAIC,GAAG,EAAU;EAEjC,OAAO,UAACC,OAAe,EAAkC;IAAA,IAAhCC,IAAkB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM;IAClD,IAAI,CAACJ,OAAO,CAACO,GAAG,CAACL,OAAO,CAAC,EAAE;MACzBF,OAAO,CAACQ,GAAG,CAACN,OAAO,CAAC;MAEpB,IAAMO,gBAAgB,cAAAC,MAAA,CAAcX,IAAI,QAAAW,MAAA,CAAKR,OAAO,CAAE;MACtD,IAAMS,MAAM,GAAGR,IAAI,KAAK,KAAK,GAAG,sCAAsC,GAAGG,SAAS;MAElFM,OAAO,CAACT,IAAI,CAAC,CAACM,gBAAgB,EAAEE,MAAM,CAAC;IACzC;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}