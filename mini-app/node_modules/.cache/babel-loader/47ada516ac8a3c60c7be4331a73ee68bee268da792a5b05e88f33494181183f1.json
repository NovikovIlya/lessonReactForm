{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"bullets\", \"getRootRef\", \"children\", \"slideWidth\", \"slideIndex\", \"isDraggable\", \"onDragStart\", \"onDragEnd\", \"onChange\", \"onPrevClick\", \"onNextClick\", \"align\", \"showArrows\", \"getRef\", \"className\", \"arrowSize\"];\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { Touch } from '../Touch/Touch';\nimport { HorizontalScrollArrow } from '../HorizontalScroll/HorizontalScrollArrow';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDOM } from '../../lib/dom';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { calcMax, calcMin } from './helpers';\nvar ANIMATION_DURATION = 0.24;\nvar LAYOUT_DEFAULT_STATE = {\n  containerWidth: 0,\n  viewportOffsetWidth: 0,\n  layerWidth: 0,\n  min: 0,\n  max: 0,\n  slides: [],\n  isFullyVisible: true\n};\nvar SHIFT_DEFAULT_STATE = {\n  animation: undefined,\n  shiftX: 0,\n  dragging: false,\n  deltaX: 0,\n  indent: 0\n};\nexport var BaseGallery = function BaseGallery(_ref) {\n  var _layoutState$current$9;\n  var _ref$bullets = _ref.bullets,\n    bullets = _ref$bullets === void 0 ? false : _ref$bullets,\n    getRootRef = _ref.getRootRef,\n    children = _ref.children,\n    _ref$slideWidth = _ref.slideWidth,\n    slideWidth = _ref$slideWidth === void 0 ? '100%' : _ref$slideWidth,\n    _ref$slideIndex = _ref.slideIndex,\n    slideIndex = _ref$slideIndex === void 0 ? 0 : _ref$slideIndex,\n    _ref$isDraggable = _ref.isDraggable,\n    isDraggableProp = _ref$isDraggable === void 0 ? true : _ref$isDraggable,\n    onDragStart = _ref.onDragStart,\n    onDragEnd = _ref.onDragEnd,\n    onChange = _ref.onChange,\n    onPrevClick = _ref.onPrevClick,\n    onNextClick = _ref.onNextClick,\n    _ref$align = _ref.align,\n    align = _ref$align === void 0 ? 'left' : _ref$align,\n    showArrows = _ref.showArrows,\n    getRef = _ref.getRef,\n    className = _ref.className,\n    _ref$arrowSize = _ref.arrowSize,\n    arrowSize = _ref$arrowSize === void 0 ? 'l' : _ref$arrowSize,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var slidesStore = React.useRef({});\n  var layoutState = React.useRef(LAYOUT_DEFAULT_STATE);\n  var _React$useState = React.useState(SHIFT_DEFAULT_STATE),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    shiftState = _React$useState2[0],\n    setShiftState = _React$useState2[1];\n  var rootRef = useExternRef(getRootRef);\n  var viewportRef = useExternRef(getRef);\n  var _useDOM = useDOM(),\n    window = _useDOM.window;\n  var hasPointer = useAdaptivityHasPointer();\n  var isCenterWithCustomWidth = slideWidth === 'custom' && align === 'center';\n  var validateIndent = function validateIndent(value) {\n    var _layoutState$current$, _layoutState$current$2;\n    var localMax = (_layoutState$current$ = layoutState.current.max) !== null && _layoutState$current$ !== void 0 ? _layoutState$current$ : 0;\n    var localMin = (_layoutState$current$2 = layoutState.current.min) !== null && _layoutState$current$2 !== void 0 ? _layoutState$current$2 : 0;\n    if (value < localMin) {\n      return localMin;\n    } else if (value > localMax) {\n      return localMax;\n    }\n    return value;\n  };\n\n  /*\n   * Считает отступ слоя галереи\n   */\n  var calculateIndent = function calculateIndent(targetIndex) {\n    var _layoutState$current$3;\n    if (layoutState.current.isFullyVisible) {\n      return 0;\n    }\n    var targetSlide = (_layoutState$current$3 = layoutState.current.slides) !== null && _layoutState$current$3 !== void 0 && _layoutState$current$3.length ? layoutState.current.slides[targetIndex] : null;\n    if (targetSlide) {\n      var coordX = targetSlide.coordX,\n        width = targetSlide.width;\n      if (isCenterWithCustomWidth) {\n        var _layoutState$current$4;\n        var viewportWidth = (_layoutState$current$4 = layoutState.current.viewportOffsetWidth) !== null && _layoutState$current$4 !== void 0 ? _layoutState$current$4 : 0;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n      return validateIndent(-1 * coordX);\n    }\n    return 0;\n  };\n\n  /*\n   * Считает отступ слоя галереи во время драга\n   */\n  var calculateDragIndent = function calculateDragIndent() {\n    var _layoutState$current$5, _layoutState$current$6;\n    var localMax = (_layoutState$current$5 = layoutState.current.max) !== null && _layoutState$current$5 !== void 0 ? _layoutState$current$5 : 0;\n    var localMin = (_layoutState$current$6 = layoutState.current.min) !== null && _layoutState$current$6 !== void 0 ? _layoutState$current$6 : 0;\n    var indent = shiftState.shiftX + shiftState.deltaX;\n    if (indent > localMax) {\n      return localMax + Number((indent - localMax) / 3);\n    } else if (indent < localMin) {\n      return localMin + Number((indent - localMin) / 3);\n    }\n    return indent;\n  };\n  var initializeSlides = function initializeSlides() {\n    var _React$Children$map, _rootRef$current$offs, _rootRef$current, _viewportRef$current$, _viewportRef$current, _layoutState$current$7, _localSlides$slideInd;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var localSlides = (_React$Children$map = React.Children.map(children, function (_item, i) {\n      var _elem$offsetLeft, _elem$offsetWidth;\n      var elem = slidesStore.current[\"slide-\".concat(i)];\n      return {\n        coordX: (_elem$offsetLeft = elem === null || elem === void 0 ? void 0 : elem.offsetLeft) !== null && _elem$offsetLeft !== void 0 ? _elem$offsetLeft : 0,\n        width: (_elem$offsetWidth = elem === null || elem === void 0 ? void 0 : elem.offsetWidth) !== null && _elem$offsetWidth !== void 0 ? _elem$offsetWidth : 0\n      };\n    })) !== null && _React$Children$map !== void 0 ? _React$Children$map : [];\n    var localContainerWidth = (_rootRef$current$offs = (_rootRef$current = rootRef.current) === null || _rootRef$current === void 0 ? void 0 : _rootRef$current.offsetWidth) !== null && _rootRef$current$offs !== void 0 ? _rootRef$current$offs : 0;\n    var localViewportOffsetWidth = (_viewportRef$current$ = (_viewportRef$current = viewportRef.current) === null || _viewportRef$current === void 0 ? void 0 : _viewportRef$current.offsetWidth) !== null && _viewportRef$current$ !== void 0 ? _viewportRef$current$ : 0;\n    var localLayerWidth = localSlides.reduce(function (val, slide) {\n      return slide.width + val;\n    }, 0);\n    var adjustShiftX = localSlides.length <= layoutState.current.slides.length || ((_layoutState$current$7 = layoutState.current.slides[slideIndex]) === null || _layoutState$current$7 === void 0 ? void 0 : _layoutState$current$7.coordX) !== ((_localSlides$slideInd = localSlides[slideIndex]) === null || _localSlides$slideInd === void 0 ? void 0 : _localSlides$slideInd.coordX);\n    layoutState.current = {\n      containerWidth: localContainerWidth,\n      viewportOffsetWidth: localViewportOffsetWidth,\n      layerWidth: localLayerWidth,\n      max: calcMax({\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth: isCenterWithCustomWidth\n      }),\n      min: calcMin({\n        containerWidth: localContainerWidth,\n        layerWidth: localLayerWidth,\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth: isCenterWithCustomWidth,\n        align: align\n      }),\n      slides: localSlides,\n      isFullyVisible: localLayerWidth <= localContainerWidth\n    };\n    setShiftState(function (prevState) {\n      var _options$animation;\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        shiftX: adjustShiftX ? calculateIndent(slideIndex) : prevState.shiftX,\n        animation: (_options$animation = options.animation) !== null && _options$animation !== void 0 ? _options$animation : prevState.shiftX === validateIndent(prevState.shiftX)\n      });\n    });\n  };\n  var onResize = function onResize() {\n    if (shiftState.animation !== undefined) {\n      initializeSlides({\n        animation: false\n      });\n    }\n  };\n  useGlobalEventListener(window, 'resize', onResize);\n  useIsomorphicLayoutEffect(function () {\n    initializeSlides({\n      animation: false\n    });\n  }, [children, align, slideWidth]);\n  useIsomorphicLayoutEffect(function () {\n    if (shiftState.animation !== undefined) {\n      setShiftState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          animation: true,\n          deltaX: 0,\n          shiftX: calculateIndent(slideIndex !== null && slideIndex !== void 0 ? slideIndex : 0)\n        });\n      });\n    }\n  }, [slideIndex]);\n  var slideLeft = function slideLeft(event) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(slideIndex - 1);\n    onPrevClick === null || onPrevClick === void 0 ? void 0 : onPrevClick(event);\n  };\n  var slideRight = function slideRight(event) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(slideIndex + 1);\n    onNextClick === null || onNextClick === void 0 ? void 0 : onNextClick(event);\n  };\n\n  /*\n   * Получает индекс слайда, к которому будет осуществлен переход\n   */\n  var getTarget = function getTarget(e) {\n    var _layoutState$current$8;\n    var expectDeltaX = shiftState.deltaX / e.duration * 240 * 0.6;\n    var shift = shiftState.shiftX + shiftState.deltaX + expectDeltaX - ((_layoutState$current$8 = layoutState.current.max) !== null && _layoutState$current$8 !== void 0 ? _layoutState$current$8 : 0);\n    var direction = shiftState.deltaX < 0 ? 1 : -1;\n\n    // Находим ближайшую границу слайда к текущему отступу\n    var targetIndex = layoutState.current.slides.reduce(function (val, item, index) {\n      var previousValue = Math.abs(layoutState.current.slides[val].coordX + shift);\n      var currentValue = Math.abs(item.coordX + shift);\n      return previousValue < currentValue ? val : index;\n    }, slideIndex);\n    if (targetIndex === slideIndex) {\n      var targetSlide = slideIndex + direction;\n      if (targetSlide >= 0 && targetSlide < layoutState.current.slides.length) {\n        if (Math.abs(shiftState.deltaX) > layoutState.current.slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n    return targetIndex;\n  };\n  var onStart = function onStart(e) {\n    onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(e);\n    setShiftState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        animation: false\n      });\n    });\n  };\n  var onMoveX = function onMoveX(e) {\n    if (isDraggableProp && !layoutState.current.isFullyVisible) {\n      e.originalEvent.preventDefault();\n      if (e.isSlideX) {\n        if (shiftState.deltaX !== e.shiftX) {\n          setShiftState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              deltaX: e.shiftX,\n              dragging: e.isSlideX\n            });\n          });\n        }\n      }\n    }\n  };\n  var onEnd = function onEnd(e) {\n    var targetIndex = e.isSlide ? getTarget(e) : slideIndex !== null && slideIndex !== void 0 ? slideIndex : 0;\n    onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(e, targetIndex);\n    var nextShiftState = {\n      animation: true,\n      dragging: false,\n      deltaX: 0\n    };\n    var shiftXStick = calculateDragIndent();\n    if (targetIndex !== slideIndex) {\n      // Сохраняем сдвиг слайда в том положении, в каком его оставили после драга (fix issue #2185)\n      nextShiftState.shiftX = shiftXStick;\n    }\n    setShiftState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), nextShiftState);\n    });\n    if (targetIndex !== slideIndex) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(targetIndex);\n    }\n  };\n  var indent = shiftState.dragging ? calculateDragIndent() : shiftState.shiftX;\n  var layerStyle = {\n    WebkitTransform: \"translateX(\".concat(indent, \"px)\"),\n    transform: \"translateX(\".concat(indent, \"px)\"),\n    WebkitTransition: shiftState.animation ? \"-webkit-transform \".concat(ANIMATION_DURATION, \"s cubic-bezier(.1, 0, .25, 1)\") : 'none',\n    transition: shiftState.animation ? \"transform \".concat(ANIMATION_DURATION, \"s cubic-bezier(.1, 0, .25, 1)\") : 'none'\n  };\n  var setSlideRef = function setSlideRef(slideRef, slideIndex) {\n    slidesStore.current[\"slide-\".concat(slideIndex)] = slideRef;\n  };\n\n  // shiftX is negative number <= 0, we can swipe back only if it is < 0\n  var canSlideLeft = !layoutState.current.isFullyVisible && shiftState.shiftX < 0;\n  var canSlideRight = !layoutState.current.isFullyVisible && (\n  // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side\n  align === 'left' && layoutState.current.containerWidth - shiftState.shiftX < ((_layoutState$current$9 = layoutState.current.layerWidth) !== null && _layoutState$current$9 !== void 0 ? _layoutState$current$9 : 0) ||\n  // otherwise we need to check current slide index (align = right or align = center)\n  align !== 'left' && slideIndex < layoutState.current.slides.length - 1);\n  var isDraggable = isDraggableProp && !layoutState.current.isFullyVisible;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n    className: classNames(\"vkuiBaseGallery\", styles[\"BaseGallery--align-\".concat(align)], shiftState.dragging && \"vkuiBaseGallery--dragging\", slideWidth === 'custom' && \"vkuiBaseGallery--custom-width\", isDraggable && \"vkuiBaseGallery--draggable\", className),\n    ref: rootRef\n  }), /*#__PURE__*/React.createElement(Touch, {\n    className: \"vkuiBaseGallery__viewport\",\n    onStartX: onStart,\n    onMoveX: onMoveX,\n    onEnd: onEnd,\n    style: {\n      width: slideWidth === 'custom' ? '100%' : slideWidth\n    },\n    getRootRef: viewportRef,\n    noSlideClick: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiBaseGallery__layer\",\n    style: layerStyle\n  }, React.Children.map(children, function (item, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiBaseGallery__slide\",\n      key: \"slide-\".concat(i),\n      ref: function ref(el) {\n        return setSlideRef(el, i);\n      }\n    }, item);\n  }))), bullets && /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: classNames(\"vkuiBaseGallery__bullets\", styles[\"BaseGallery__bullets--\".concat(bullets)])\n  }, React.Children.map(children, function (_item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"vkuiBaseGallery__bullet\", index === slideIndex && \"vkuiBaseGallery__bullet--active\"),\n      key: index\n    });\n  })), showArrows && hasPointer && canSlideLeft && /*#__PURE__*/React.createElement(HorizontalScrollArrow, {\n    direction: \"left\",\n    onClick: slideLeft,\n    size: arrowSize\n  }), showArrows && hasPointer && canSlideRight && /*#__PURE__*/React.createElement(HorizontalScrollArrow, {\n    direction: \"right\",\n    onClick: slideRight,\n    size: arrowSize\n  }));\n};\nvar styles = {\n  \"BaseGallery--align-center\": \"vkuiBaseGallery--align-center\",\n  \"BaseGallery--align-left\": \"vkuiBaseGallery--align-left\",\n  \"BaseGallery--align-right\": \"vkuiBaseGallery--align-right\",\n  \"BaseGallery__bullets--dark\": \"vkuiBaseGallery__bullets--dark\",\n  \"BaseGallery__bullets--light\": \"vkuiBaseGallery__bullets--light\"\n};","map":{"version":3,"names":["React","classNames","Touch","HorizontalScrollArrow","useExternRef","useDOM","useAdaptivityHasPointer","useIsomorphicLayoutEffect","useGlobalEventListener","calcMax","calcMin","ANIMATION_DURATION","LAYOUT_DEFAULT_STATE","containerWidth","viewportOffsetWidth","layerWidth","min","max","slides","isFullyVisible","SHIFT_DEFAULT_STATE","animation","undefined","shiftX","dragging","deltaX","indent","BaseGallery","_ref","_layoutState$current$9","_ref$bullets","bullets","getRootRef","children","_ref$slideWidth","slideWidth","_ref$slideIndex","slideIndex","_ref$isDraggable","isDraggable","isDraggableProp","onDragStart","onDragEnd","onChange","onPrevClick","onNextClick","_ref$align","align","showArrows","getRef","className","_ref$arrowSize","arrowSize","restProps","_objectWithoutProperties","_excluded","slidesStore","useRef","layoutState","_React$useState","useState","_React$useState2","_slicedToArray","shiftState","setShiftState","rootRef","viewportRef","_useDOM","window","hasPointer","isCenterWithCustomWidth","validateIndent","value","_layoutState$current$","_layoutState$current$2","localMax","current","localMin","calculateIndent","targetIndex","_layoutState$current$3","targetSlide","length","coordX","width","_layoutState$current$4","viewportWidth","calculateDragIndent","_layoutState$current$5","_layoutState$current$6","Number","initializeSlides","_React$Children$map","_rootRef$current$offs","_rootRef$current","_viewportRef$current$","_viewportRef$current","_layoutState$current$7","_localSlides$slideInd","options","arguments","localSlides","Children","map","_item","i","_elem$offsetLeft","_elem$offsetWidth","elem","concat","offsetLeft","offsetWidth","localContainerWidth","localViewportOffsetWidth","localLayerWidth","reduce","val","slide","adjustShiftX","prevState","_options$animation","_objectSpread","onResize","slideLeft","event","slideRight","getTarget","e","_layoutState$current$8","expectDeltaX","duration","shift","direction","item","index","previousValue","Math","abs","currentValue","onStart","onMoveX","originalEvent","preventDefault","isSlideX","onEnd","isSlide","nextShiftState","shiftXStick","layerStyle","WebkitTransform","transform","WebkitTransition","transition","setSlideRef","slideRef","canSlideLeft","canSlideRight","createElement","_extends","styles","ref","onStartX","style","noSlideClick","key","el","onClick","size"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\BaseGallery\\BaseGallery.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { HorizontalScrollArrow } from '../HorizontalScroll/HorizontalScrollArrow';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDOM } from '../../lib/dom';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { calcMax, calcMin } from './helpers';\nimport { BaseGalleryProps, GallerySlidesState, LayoutState, ShiftingState } from './types';\nimport styles from './BaseGallery.module.css';\n\nconst ANIMATION_DURATION = 0.24;\n\nconst LAYOUT_DEFAULT_STATE = {\n  containerWidth: 0,\n  viewportOffsetWidth: 0,\n  layerWidth: 0,\n  min: 0,\n  max: 0,\n  slides: [],\n  isFullyVisible: true,\n};\n\nconst SHIFT_DEFAULT_STATE = {\n  animation: undefined,\n  shiftX: 0,\n  dragging: false,\n  deltaX: 0,\n  indent: 0,\n};\n\nexport const BaseGallery = ({\n  bullets = false,\n  getRootRef,\n  children,\n  slideWidth = '100%',\n  slideIndex = 0,\n  isDraggable: isDraggableProp = true,\n  onDragStart,\n  onDragEnd,\n  onChange,\n  onPrevClick,\n  onNextClick,\n  align = 'left',\n  showArrows,\n  getRef,\n  className,\n  arrowSize = 'l',\n  ...restProps\n}: BaseGalleryProps) => {\n  const slidesStore = React.useRef<Record<string, HTMLDivElement | null>>({});\n  const layoutState = React.useRef<LayoutState>(LAYOUT_DEFAULT_STATE);\n  const [shiftState, setShiftState] = React.useState<ShiftingState>(SHIFT_DEFAULT_STATE);\n\n  const rootRef = useExternRef(getRootRef);\n  const viewportRef = useExternRef(getRef);\n\n  const { window } = useDOM();\n  const hasPointer = useAdaptivityHasPointer();\n\n  const isCenterWithCustomWidth = slideWidth === 'custom' && align === 'center';\n\n  const validateIndent = (value: number) => {\n    const localMax = layoutState.current.max ?? 0;\n    const localMin = layoutState.current.min ?? 0;\n\n    if (value < localMin) {\n      return localMin;\n    } else if (value > localMax) {\n      return localMax;\n    }\n\n    return value;\n  };\n\n  /*\n   * Считает отступ слоя галереи\n   */\n  const calculateIndent = (targetIndex: number) => {\n    if (layoutState.current.isFullyVisible) {\n      return 0;\n    }\n\n    const targetSlide = layoutState.current.slides?.length\n      ? layoutState.current.slides[targetIndex]\n      : null;\n\n    if (targetSlide) {\n      const { coordX, width } = targetSlide;\n\n      if (isCenterWithCustomWidth) {\n        const viewportWidth = layoutState.current.viewportOffsetWidth ?? 0;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n\n      return validateIndent(-1 * coordX);\n    }\n\n    return 0;\n  };\n\n  /*\n   * Считает отступ слоя галереи во время драга\n   */\n  const calculateDragIndent = () => {\n    const localMax = layoutState.current.max ?? 0;\n    const localMin = layoutState.current.min ?? 0;\n    const indent = shiftState.shiftX + shiftState.deltaX;\n\n    if (indent > localMax) {\n      return localMax + Number((indent - localMax) / 3);\n    } else if (indent < localMin) {\n      return localMin + Number((indent - localMin) / 3);\n    }\n\n    return indent;\n  };\n\n  const initializeSlides = (options: { animation?: boolean } = {}) => {\n    const localSlides =\n      React.Children.map(children, (_item: React.ReactNode, i: number): GallerySlidesState => {\n        const elem = slidesStore.current[`slide-${i}`];\n        return {\n          coordX: elem?.offsetLeft ?? 0,\n          width: elem?.offsetWidth ?? 0,\n        };\n      }) ?? [];\n\n    const localContainerWidth = rootRef.current?.offsetWidth ?? 0;\n    const localViewportOffsetWidth = viewportRef.current?.offsetWidth ?? 0;\n    const localLayerWidth = localSlides.reduce(\n      (val: number, slide: GallerySlidesState) => slide.width + val,\n      0,\n    );\n    const adjustShiftX =\n      localSlides.length <= layoutState.current.slides.length ||\n      layoutState.current.slides[slideIndex]?.coordX !== localSlides[slideIndex]?.coordX;\n\n    layoutState.current = {\n      containerWidth: localContainerWidth,\n      viewportOffsetWidth: localViewportOffsetWidth,\n      layerWidth: localLayerWidth,\n      max: calcMax({\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth,\n      }),\n      min: calcMin({\n        containerWidth: localContainerWidth,\n        layerWidth: localLayerWidth,\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth,\n        align,\n      }),\n      slides: localSlides,\n      isFullyVisible: localLayerWidth <= localContainerWidth,\n    };\n\n    setShiftState((prevState) => ({\n      ...prevState,\n      shiftX: adjustShiftX ? calculateIndent(slideIndex) : prevState.shiftX,\n      animation: options.animation ?? prevState.shiftX === validateIndent(prevState.shiftX),\n    }));\n  };\n\n  const onResize = () => {\n    if (shiftState.animation !== undefined) {\n      initializeSlides({ animation: false });\n    }\n  };\n\n  useGlobalEventListener(window, 'resize', onResize);\n\n  useIsomorphicLayoutEffect(() => {\n    initializeSlides({ animation: false });\n  }, [children, align, slideWidth]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (shiftState.animation !== undefined) {\n      setShiftState((prevState) => ({\n        ...prevState,\n        animation: true,\n        deltaX: 0,\n        shiftX: calculateIndent(slideIndex ?? 0),\n      }));\n    }\n  }, [slideIndex]);\n\n  const slideLeft = (event: React.MouseEvent) => {\n    onChange?.(slideIndex - 1);\n    onPrevClick?.(event);\n  };\n\n  const slideRight = (event: React.MouseEvent) => {\n    onChange?.(slideIndex + 1);\n    onNextClick?.(event);\n  };\n\n  /*\n   * Получает индекс слайда, к которому будет осуществлен переход\n   */\n  const getTarget = (e: TouchEvent) => {\n    const expectDeltaX = (shiftState.deltaX / e.duration) * 240 * 0.6;\n    const shift =\n      shiftState.shiftX + shiftState.deltaX + expectDeltaX - (layoutState.current.max ?? 0);\n    const direction = shiftState.deltaX < 0 ? 1 : -1;\n\n    // Находим ближайшую границу слайда к текущему отступу\n    let targetIndex = layoutState.current.slides.reduce(\n      (val: number, item: GallerySlidesState, index: number) => {\n        const previousValue = Math.abs(layoutState.current.slides[val].coordX + shift);\n        const currentValue = Math.abs(item.coordX + shift);\n\n        return previousValue < currentValue ? val : index;\n      },\n      slideIndex,\n    );\n\n    if (targetIndex === slideIndex) {\n      let targetSlide = slideIndex + direction;\n\n      if (targetSlide >= 0 && targetSlide < layoutState.current.slides.length) {\n        if (Math.abs(shiftState.deltaX) > layoutState.current.slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n\n    return targetIndex;\n  };\n\n  const onStart = (e: TouchEvent) => {\n    onDragStart?.(e);\n    setShiftState((prevState) => ({ ...prevState, animation: false }));\n  };\n\n  const onMoveX = (e: TouchEvent) => {\n    if (isDraggableProp && !layoutState.current.isFullyVisible) {\n      e.originalEvent.preventDefault();\n\n      if (e.isSlideX) {\n        if (shiftState.deltaX !== e.shiftX) {\n          setShiftState((prevState) => ({\n            ...prevState,\n            deltaX: e.shiftX,\n            dragging: e.isSlideX,\n          }));\n        }\n      }\n    }\n  };\n\n  const onEnd = (e: TouchEvent) => {\n    const targetIndex = e.isSlide ? getTarget(e) : slideIndex ?? 0;\n    onDragEnd?.(e, targetIndex);\n\n    const nextShiftState: Partial<ShiftingState> = {\n      animation: true,\n      dragging: false,\n      deltaX: 0,\n    };\n\n    const shiftXStick = calculateDragIndent();\n    if (targetIndex !== slideIndex) {\n      // Сохраняем сдвиг слайда в том положении, в каком его оставили после драга (fix issue #2185)\n      nextShiftState.shiftX = shiftXStick;\n    }\n\n    setShiftState((prevState) => ({ ...prevState, ...nextShiftState }));\n    if (targetIndex !== slideIndex) {\n      onChange?.(targetIndex);\n    }\n  };\n\n  const indent = shiftState.dragging ? calculateDragIndent() : shiftState.shiftX;\n\n  const layerStyle = {\n    WebkitTransform: `translateX(${indent}px)`,\n    transform: `translateX(${indent}px)`,\n    WebkitTransition: shiftState.animation\n      ? `-webkit-transform ${ANIMATION_DURATION}s cubic-bezier(.1, 0, .25, 1)`\n      : 'none',\n    transition: shiftState.animation\n      ? `transform ${ANIMATION_DURATION}s cubic-bezier(.1, 0, .25, 1)`\n      : 'none',\n  };\n\n  const setSlideRef = (slideRef: HTMLDivElement | null, slideIndex: number) => {\n    slidesStore.current[`slide-${slideIndex}`] = slideRef;\n  };\n\n  // shiftX is negative number <= 0, we can swipe back only if it is < 0\n  const canSlideLeft = !layoutState.current.isFullyVisible && shiftState.shiftX < 0;\n\n  const canSlideRight =\n    !layoutState.current.isFullyVisible &&\n    // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side\n    ((align === 'left' &&\n      layoutState.current.containerWidth - shiftState.shiftX <\n        (layoutState.current.layerWidth ?? 0)) ||\n      // otherwise we need to check current slide index (align = right or align = center)\n      (align !== 'left' && slideIndex < layoutState.current.slides.length - 1));\n\n  const isDraggable = isDraggableProp && !layoutState.current.isFullyVisible;\n\n  return (\n    <div\n      {...restProps}\n      className={classNames(\n        styles['BaseGallery'],\n        styles[`BaseGallery--align-${align}`],\n        shiftState.dragging && styles['BaseGallery--dragging'],\n        slideWidth === 'custom' && styles['BaseGallery--custom-width'],\n        isDraggable && styles['BaseGallery--draggable'],\n        className,\n      )}\n      ref={rootRef}\n    >\n      <Touch\n        className={styles['BaseGallery__viewport']}\n        onStartX={onStart}\n        onMoveX={onMoveX}\n        onEnd={onEnd}\n        style={{ width: slideWidth === 'custom' ? '100%' : slideWidth }}\n        getRootRef={viewportRef}\n        noSlideClick\n      >\n        <div className={styles['BaseGallery__layer']} style={layerStyle}>\n          {React.Children.map(children, (item: React.ReactNode, i: number) => (\n            <div\n              className={styles['BaseGallery__slide']}\n              key={`slide-${i}`}\n              ref={(el) => setSlideRef(el, i)}\n            >\n              {item}\n            </div>\n          ))}\n        </div>\n      </Touch>\n\n      {bullets && (\n        <div\n          aria-hidden\n          className={classNames(\n            styles['BaseGallery__bullets'],\n            styles[`BaseGallery__bullets--${bullets}`],\n          )}\n        >\n          {React.Children.map(children, (_item: React.ReactNode, index: number) => (\n            <div\n              className={classNames(\n                styles['BaseGallery__bullet'],\n                index === slideIndex && styles['BaseGallery__bullet--active'],\n              )}\n              key={index}\n            />\n          ))}\n        </div>\n      )}\n\n      {showArrows && hasPointer && canSlideLeft && (\n        <HorizontalScrollArrow direction=\"left\" onClick={slideLeft} size={arrowSize} />\n      )}\n      {showArrows && hasPointer && canSlideRight && (\n        <HorizontalScrollArrow direction=\"right\" onClick={slideRight} size={arrowSize} />\n      )}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}