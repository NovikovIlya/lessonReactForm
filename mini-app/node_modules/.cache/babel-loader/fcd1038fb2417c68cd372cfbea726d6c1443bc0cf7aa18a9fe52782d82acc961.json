{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"fieldValue\", \"selectedOptions\"];\nimport * as React from 'react';\nimport { useChipsInput } from './useChipsInput';\nexport var useChipsSelect = function useChipsSelect(props) {\n  var options = props.options,\n    filterFn = props.filterFn,\n    getOptionLabel = props.getOptionLabel,\n    getOptionValue = props.getOptionValue;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    opened = _React$useState2[0],\n    setOpened = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    focusedOptionIndex = _React$useState4[0],\n    setFocusedOptionIndex = _React$useState4[1];\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    focusedOption = _React$useState6[0],\n    setFocusedOption = _React$useState6[1];\n  var _useChipsInput = useChipsInput(props),\n    fieldValue = _useChipsInput.fieldValue,\n    selectedOptions = _useChipsInput.selectedOptions,\n    chipsInputState = _objectWithoutProperties(_useChipsInput, _excluded);\n  var handleInputChange = function handleInputChange(e) {\n    if (!e) {\n      return;\n    }\n    chipsInputState.handleInputChange(e);\n    if (!opened) {\n      setOpened(true);\n      setFocusedOptionIndex(0);\n    }\n  };\n  var filteredOptions = React.useMemo(function () {\n    return filterFn ? options.filter(function (option) {\n      return filterFn(fieldValue, option, getOptionLabel);\n    }) : options;\n  }, [options, filterFn, fieldValue, getOptionLabel]);\n  filteredOptions = React.useMemo(function () {\n    if (!filteredOptions.length) {\n      return filteredOptions;\n    }\n    var filteredSet = new Set(filteredOptions);\n    var selected = selectedOptions.map(function (item) {\n      return getOptionValue(item);\n    });\n    var _iterator = _createForOfIteratorHelper(filteredSet),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        if (selected.includes(getOptionValue(item))) {\n          filteredSet.delete(item);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return _toConsumableArray(filteredSet);\n  }, [filteredOptions, selectedOptions, getOptionValue]);\n  return _objectSpread(_objectSpread({}, chipsInputState), {}, {\n    fieldValue: fieldValue,\n    handleInputChange: handleInputChange,\n    opened: opened,\n    setOpened: setOpened,\n    filteredOptions: filteredOptions,\n    focusedOptionIndex: focusedOptionIndex,\n    setFocusedOptionIndex: setFocusedOptionIndex,\n    focusedOption: focusedOption,\n    setFocusedOption: setFocusedOption,\n    selectedOptions: selectedOptions\n  });\n};","map":{"version":3,"names":["React","useChipsInput","useChipsSelect","props","options","filterFn","getOptionLabel","getOptionValue","_React$useState","useState","_React$useState2","_slicedToArray","opened","setOpened","_React$useState3","_React$useState4","focusedOptionIndex","setFocusedOptionIndex","_React$useState5","_React$useState6","focusedOption","setFocusedOption","_useChipsInput","fieldValue","selectedOptions","chipsInputState","_objectWithoutProperties","_excluded","handleInputChange","e","filteredOptions","useMemo","filter","option","length","filteredSet","Set","selected","map","item","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","includes","delete","err","f","_toConsumableArray","_objectSpread"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useChipsSelect.ts"],"sourcesContent":["import * as React from 'react';\nimport { useChipsInput } from './useChipsInput';\nimport { ChipsSelectProps } from '../components/ChipsSelect/ChipsSelect';\nimport { ChipOption } from '../components/Chip/Chip';\n\nexport const useChipsSelect = <Option extends ChipOption>(\n  props: Partial<ChipsSelectProps<Option>>,\n) => {\n  const { options, filterFn, getOptionLabel, getOptionValue } = props;\n\n  const [opened, setOpened] = React.useState(false);\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | null>(0);\n  const [focusedOption, setFocusedOption] = React.useState<Option | null>(null);\n\n  const { fieldValue, selectedOptions, ...chipsInputState } = useChipsInput(props);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement> | undefined) => {\n    if (!e) {\n      return;\n    }\n    chipsInputState.handleInputChange(e);\n\n    if (!opened) {\n      setOpened(true);\n      setFocusedOptionIndex(0);\n    }\n  };\n\n  let filteredOptions = React.useMemo(() => {\n    return filterFn\n      ? options!.filter((option) => filterFn(fieldValue, option, getOptionLabel))\n      : (options as Option[]);\n  }, [options, filterFn, fieldValue, getOptionLabel]);\n\n  filteredOptions = React.useMemo(() => {\n    if (!filteredOptions.length) {\n      return filteredOptions;\n    }\n\n    const filteredSet = new Set(filteredOptions);\n    const selected = selectedOptions.map((item) => getOptionValue!(item));\n\n    for (const item of filteredSet) {\n      if (selected.includes(getOptionValue!(item))) {\n        filteredSet.delete(item);\n      }\n    }\n\n    return [...filteredSet];\n  }, [filteredOptions, selectedOptions, getOptionValue]);\n\n  return {\n    ...chipsInputState,\n    fieldValue,\n    handleInputChange,\n    opened,\n    setOpened,\n    filteredOptions,\n    focusedOptionIndex,\n    setFocusedOptionIndex,\n    focusedOption,\n    setFocusedOption,\n    selectedOptions,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}