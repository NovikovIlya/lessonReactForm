{"ast":null,"code":"import { warnOnce } from '../../lib/warnOnce';\nimport { imageBaseSizes } from './types';\nimport { getBadgeIconSizeByImageBaseSize, getFallbackIconSizeByImageBaseSize, getOverlayIconSizeByImageBaseSize } from './helpers';\n\n/**\n * Пример,\n *\n * Icon28User -> 28\n * Icon12Circle1 -> 12\n * Icon12Circle2 -> 12\n */\nfunction parseIconSizeByDisplayName(displayName) {\n  if (typeof displayName !== 'string') {\n    return null;\n  }\n  var rawSize = displayName.replace(/\\d+$/g, '') // удаляем цифры в конце\n  .replace(/\\D/g, ''); // удаляем всё, что не является числом\n  var size = Number(rawSize);\n  return size > 0 ? size : null;\n}\nfunction parseIconSizeByWidthProp(width) {\n  if (typeof width !== 'string' && typeof width !== 'number') {\n    return null;\n  }\n  var size = Number(width);\n  return size > 0 ? size : null;\n}\nfunction getElementDisplayName(element) {\n  var _element$type$display;\n  return (_element$type$display = element.type.displayName) !== null && _element$type$display !== void 0 ? _element$type$display : null;\n}\nfunction getElementWidthProp(element) {\n  var _element$props$width;\n  return (_element$props$width = element.props.width) !== null && _element$props$width !== void 0 ? _element$props$width : null;\n}\nfunction getIconSizeByElement(element) {\n  var sizeByDisplayName = parseIconSizeByDisplayName(getElementDisplayName(element));\n  var sizeByWidth = parseIconSizeByWidthProp(getElementWidthProp(element));\n  return sizeByWidth ? sizeByWidth : sizeByDisplayName;\n}\nfunction validateIconComponentSizeByImageSize(imageSize, iconProp, selectorFn, logger) {\n  var iconSize = getIconSizeByElement(iconProp.value);\n  if (iconSize === null) {\n    return;\n  }\n  var result = selectorFn(imageSize);\n  if (result === iconSize || result === selectorFn.MAX_SIZE && iconSize >= result) {\n    return;\n  }\n  var iconName = getElementDisplayName(iconProp.value);\n  var propMessage = iconName ? \"\".concat(iconProp.name, \"={<\").concat(iconName, \" />}\") : iconProp.name;\n  logger(\"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440 `\".concat(propMessage, \"` \\u043D\\u0435 \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0434\\u0438\\u0437\\u0430\\u0439\\u043D-\\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435. \\u0414\\u043B\\u044F `size={\").concat(imageSize, \"}` \\u0440\\u0430\\u0437\\u043C\\u0435\\u0440 \\u0438\\u043A\\u043E\\u043D\\u043A\\u0438 \\u0434\\u043B\\u044F `\").concat(iconProp.name, \"` \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u043E\\u0432\\u0430\\u0442\\u044C <Icon\").concat(result, \"<name> />. \\u0415\\u0441\\u043B\\u0438 \\u0442\\u0430\\u043A\\u043E\\u0433\\u043E \\u0440\\u0430\\u0437\\u043C\\u0435\\u0440\\u0430 \\u043D\\u0435\\u0442, \\u0442\\u043E \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 <\").concat(iconName, \" width={\").concat(result, \"} height={\").concat(result, \"} />\"), 'log');\n}\nvar warnImageBase = warnOnce('ImageBase');\nexport function validateFallbackIcon(imageSize, iconProp) {\n  return validateIconComponentSizeByImageSize(imageSize, iconProp, getFallbackIconSizeByImageBaseSize, warnImageBase);\n}\nvar mapOfExpectedSize = new Set(imageBaseSizes);\nvar arrayOfSizes = Object.keys(mapOfExpectedSize).map(function (str) {\n  return Number(str);\n});\nvar maxSize = arrayOfSizes.reduce(function (maxSize, size) {\n  return size > maxSize ? size : maxSize;\n}, 0);\nexport function validateSize(imageSize) {\n  if (imageSize > maxSize || mapOfExpectedSize.has(imageSize)) {\n    return;\n  }\n  warnImageBase(\"`size={\".concat(imageSize, \"}` \\u043D\\u0435 \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0434\\u0438\\u0437\\u0430\\u0439\\u043D-\\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435. \\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \\u043E\\u0434\\u0438\\u043D \\u0438\\u0437 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0445 \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u043E\\u0432: \").concat(arrayOfSizes.join(' | ')), 'log');\n}\nvar warnImageBaseBadge = warnOnce('ImageBase.Badge');\nexport function validateBadgeIcon(imageSize, iconProp) {\n  if (imageSize < 24 && iconProp) {\n    return warnImageBaseBadge('Не используйте бейдж при `size < 24`.', 'log');\n  }\n  validateIconComponentSizeByImageSize(imageSize, iconProp, getBadgeIconSizeByImageBaseSize, warnImageBaseBadge);\n}\nvar warnImageBaseOverlay = warnOnce('ImageBase.Overlay');\nexport function validateOverlayIcon(imageSize, iconProp) {\n  validateIconComponentSizeByImageSize(imageSize, iconProp, getOverlayIconSizeByImageBaseSize, warnImageBaseOverlay);\n}","map":{"version":3,"names":["warnOnce","imageBaseSizes","getBadgeIconSizeByImageBaseSize","getFallbackIconSizeByImageBaseSize","getOverlayIconSizeByImageBaseSize","parseIconSizeByDisplayName","displayName","rawSize","replace","size","Number","parseIconSizeByWidthProp","width","getElementDisplayName","element","_element$type$display","type","getElementWidthProp","_element$props$width","props","getIconSizeByElement","sizeByDisplayName","sizeByWidth","validateIconComponentSizeByImageSize","imageSize","iconProp","selectorFn","logger","iconSize","value","result","MAX_SIZE","iconName","propMessage","concat","name","warnImageBase","validateFallbackIcon","mapOfExpectedSize","Set","arrayOfSizes","Object","keys","map","str","maxSize","reduce","validateSize","has","join","warnImageBaseBadge","validateBadgeIcon","warnImageBaseOverlay","validateOverlayIcon"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\ImageBase\\validators.ts"],"sourcesContent":["import { warnOnce } from '../../lib/warnOnce';\nimport { imageBaseSizes } from './types';\nimport {\n  getBadgeIconSizeByImageBaseSize,\n  getFallbackIconSizeByImageBaseSize,\n  getOverlayIconSizeByImageBaseSize,\n} from './helpers';\n\n/**\n * Пример,\n *\n * Icon28User -> 28\n * Icon12Circle1 -> 12\n * Icon12Circle2 -> 12\n */\nfunction parseIconSizeByDisplayName(displayName: unknown): number | null {\n  if (typeof displayName !== 'string') {\n    return null;\n  }\n  const rawSize = displayName\n    .replace(/\\d+$/g, '') // удаляем цифры в конце\n    .replace(/\\D/g, ''); // удаляем всё, что не является числом\n  const size = Number(rawSize);\n  return size > 0 ? size : null;\n}\n\nfunction parseIconSizeByWidthProp(width: unknown): number | null {\n  if (typeof width !== 'string' && typeof width !== 'number') {\n    return null;\n  }\n  const size = Number(width);\n  return size > 0 ? size : null;\n}\n\nfunction getElementDisplayName(element: JSX.Element): string | null {\n  return element.type.displayName ?? null;\n}\n\nfunction getElementWidthProp(element: JSX.Element): number | string | null {\n  return element.props.width ?? null;\n}\n\nfunction getIconSizeByElement(element: JSX.Element): number | null {\n  const sizeByDisplayName = parseIconSizeByDisplayName(getElementDisplayName(element));\n  const sizeByWidth = parseIconSizeByWidthProp(getElementWidthProp(element));\n  return sizeByWidth ? sizeByWidth : sizeByDisplayName;\n}\n\ninterface IconProp {\n  name: string;\n  value: JSX.Element;\n}\n\ninterface SelectorFn {\n  (imageSize: number): number;\n  MAX_SIZE: number;\n}\n\nfunction validateIconComponentSizeByImageSize(\n  imageSize: number,\n  iconProp: IconProp,\n  selectorFn: SelectorFn,\n  logger: ReturnType<typeof warnOnce>,\n) {\n  const iconSize = getIconSizeByElement(iconProp.value);\n\n  if (iconSize === null) {\n    return;\n  }\n\n  const result = selectorFn(imageSize);\n\n  if (result === iconSize || (result === selectorFn.MAX_SIZE && iconSize >= result)) {\n    return;\n  }\n\n  const iconName = getElementDisplayName(iconProp.value);\n  const propMessage = iconName ? `${iconProp.name}={<${iconName} />}` : iconProp.name;\n\n  logger(\n    `Размер \\`${propMessage}\\` не соответствует дизайн-системе. Для \\`size={${imageSize}}\\` размер иконки для \\`${iconProp.name}\\` должен соответствовать <Icon${result}<name> />. Если такого размера нет, то используйте <${iconName} width={${result}} height={${result}} />`,\n    'log',\n  );\n}\n\nconst warnImageBase = warnOnce('ImageBase');\n\nexport function validateFallbackIcon(imageSize: number, iconProp: IconProp) {\n  return validateIconComponentSizeByImageSize(\n    imageSize,\n    iconProp,\n    getFallbackIconSizeByImageBaseSize,\n    warnImageBase,\n  );\n}\n\nconst mapOfExpectedSize = new Set<number>(imageBaseSizes);\n\nconst arrayOfSizes = Object.keys(mapOfExpectedSize).map((str) => Number(str));\nconst maxSize = arrayOfSizes.reduce((maxSize, size) => (size > maxSize ? size : maxSize), 0);\n\nexport function validateSize(imageSize: number): void {\n  if (imageSize > maxSize || mapOfExpectedSize.has(imageSize)) {\n    return;\n  }\n  warnImageBase(\n    `\\`size={${imageSize}}\\` не соответствует дизайн-системе. Пожалуйста, используйте один из следующих вариантов: ${arrayOfSizes.join(\n      ' | ',\n    )}`,\n    'log',\n  );\n}\n\nconst warnImageBaseBadge = warnOnce('ImageBase.Badge');\n\nexport function validateBadgeIcon(imageSize: number, iconProp: IconProp): void {\n  if (imageSize < 24 && iconProp) {\n    return warnImageBaseBadge('Не используйте бейдж при `size < 24`.', 'log');\n  }\n  validateIconComponentSizeByImageSize(\n    imageSize,\n    iconProp,\n    getBadgeIconSizeByImageBaseSize,\n    warnImageBaseBadge,\n  );\n}\n\nconst warnImageBaseOverlay = warnOnce('ImageBase.Overlay');\n\nexport function validateOverlayIcon(imageSize: number, iconProp: IconProp): void {\n  validateIconComponentSizeByImageSize(\n    imageSize,\n    iconProp,\n    getOverlayIconSizeByImageBaseSize,\n    warnImageBaseOverlay,\n  );\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,cAAc,QAAQ,SAAS;AACxC,SACEC,+BAA+B,EAC/BC,kCAAkC,EAClCC,iCAAiC,QAC5B,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,0BAA0BA,CAACC,WAAoB,EAAiB;EACvE,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;IACnC,OAAO,IAAI;EACb;EACA,IAAMC,OAAO,GAAGD,WAAW,CACxBE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;EAAA,CACrBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;EACvB,IAAMC,IAAI,GAAGC,MAAM,CAACH,OAAO,CAAC;EAC5B,OAAOE,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,IAAI;AAC/B;AAEA,SAASE,wBAAwBA,CAACC,KAAc,EAAiB;EAC/D,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC1D,OAAO,IAAI;EACb;EACA,IAAMH,IAAI,GAAGC,MAAM,CAACE,KAAK,CAAC;EAC1B,OAAOH,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,IAAI;AAC/B;AAEA,SAASI,qBAAqBA,CAACC,OAAoB,EAAiB;EAAA,IAAAC,qBAAA;EAClE,QAAAA,qBAAA,GAAOD,OAAO,CAACE,IAAI,CAACV,WAAW,cAAAS,qBAAA,cAAAA,qBAAA,GAAI,IAAI;AACzC;AAEA,SAASE,mBAAmBA,CAACH,OAAoB,EAA0B;EAAA,IAAAI,oBAAA;EACzE,QAAAA,oBAAA,GAAOJ,OAAO,CAACK,KAAK,CAACP,KAAK,cAAAM,oBAAA,cAAAA,oBAAA,GAAI,IAAI;AACpC;AAEA,SAASE,oBAAoBA,CAACN,OAAoB,EAAiB;EACjE,IAAMO,iBAAiB,GAAGhB,0BAA0B,CAACQ,qBAAqB,CAACC,OAAO,CAAC,CAAC;EACpF,IAAMQ,WAAW,GAAGX,wBAAwB,CAACM,mBAAmB,CAACH,OAAO,CAAC,CAAC;EAC1E,OAAOQ,WAAW,GAAGA,WAAW,GAAGD,iBAAiB;AACtD;AAYA,SAASE,oCAAoCA,CAC3CC,SAAiB,EACjBC,QAAkB,EAClBC,UAAsB,EACtBC,MAAmC,EACnC;EACA,IAAMC,QAAQ,GAAGR,oBAAoB,CAACK,QAAQ,CAACI,KAAK,CAAC;EAErD,IAAID,QAAQ,KAAK,IAAI,EAAE;IACrB;EACF;EAEA,IAAME,MAAM,GAAGJ,UAAU,CAACF,SAAS,CAAC;EAEpC,IAAIM,MAAM,KAAKF,QAAQ,IAAKE,MAAM,KAAKJ,UAAU,CAACK,QAAQ,IAAIH,QAAQ,IAAIE,MAAO,EAAE;IACjF;EACF;EAEA,IAAME,QAAQ,GAAGnB,qBAAqB,CAACY,QAAQ,CAACI,KAAK,CAAC;EACtD,IAAMI,WAAW,GAAGD,QAAQ,MAAAE,MAAA,CAAMT,QAAQ,CAACU,IAAI,SAAAD,MAAA,CAAMF,QAAQ,YAASP,QAAQ,CAACU,IAAI;EAEnFR,MAAM,0CAAAO,MAAA,CACQD,WAAW,+MAAAC,MAAA,CAAmDV,SAAS,uGAAAU,MAAA,CAA2BT,QAAQ,CAACU,IAAI,6IAAAD,MAAA,CAAkCJ,MAAM,+NAAAI,MAAA,CAAuDF,QAAQ,cAAAE,MAAA,CAAWJ,MAAM,gBAAAI,MAAA,CAAaJ,MAAM,WACtQ,KAAK,CACN;AACH;AAEA,IAAMM,aAAa,GAAGpC,QAAQ,CAAC,WAAW,CAAC;AAE3C,OAAO,SAASqC,oBAAoBA,CAACb,SAAiB,EAAEC,QAAkB,EAAE;EAC1E,OAAOF,oCAAoC,CACzCC,SAAS,EACTC,QAAQ,EACRtB,kCAAkC,EAClCiC,aAAa,CACd;AACH;AAEA,IAAME,iBAAiB,GAAG,IAAIC,GAAG,CAAStC,cAAc,CAAC;AAEzD,IAAMuC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACJ,iBAAiB,CAAC,CAACK,GAAG,CAAC,UAACC,GAAG;EAAA,OAAKlC,MAAM,CAACkC,GAAG,CAAC;AAAA,EAAC;AAC7E,IAAMC,OAAO,GAAGL,YAAY,CAACM,MAAM,CAAC,UAACD,OAAO,EAAEpC,IAAI;EAAA,OAAMA,IAAI,GAAGoC,OAAO,GAAGpC,IAAI,GAAGoC,OAAO;AAAA,CAAC,EAAE,CAAC,CAAC;AAE5F,OAAO,SAASE,YAAYA,CAACvB,SAAiB,EAAQ;EACpD,IAAIA,SAAS,GAAGqB,OAAO,IAAIP,iBAAiB,CAACU,GAAG,CAACxB,SAAS,CAAC,EAAE;IAC3D;EACF;EACAY,aAAa,WAAAF,MAAA,CACAV,SAAS,4cAAAU,MAAA,CAA6FM,YAAY,CAACS,IAAI,CAChI,KAAK,CACN,GACD,KAAK,CACN;AACH;AAEA,IAAMC,kBAAkB,GAAGlD,QAAQ,CAAC,iBAAiB,CAAC;AAEtD,OAAO,SAASmD,iBAAiBA,CAAC3B,SAAiB,EAAEC,QAAkB,EAAQ;EAC7E,IAAID,SAAS,GAAG,EAAE,IAAIC,QAAQ,EAAE;IAC9B,OAAOyB,kBAAkB,CAAC,uCAAuC,EAAE,KAAK,CAAC;EAC3E;EACA3B,oCAAoC,CAClCC,SAAS,EACTC,QAAQ,EACRvB,+BAA+B,EAC/BgD,kBAAkB,CACnB;AACH;AAEA,IAAME,oBAAoB,GAAGpD,QAAQ,CAAC,mBAAmB,CAAC;AAE1D,OAAO,SAASqD,mBAAmBA,CAAC7B,SAAiB,EAAEC,QAAkB,EAAQ;EAC/EF,oCAAoC,CAClCC,SAAS,EACTC,QAAQ,EACRrB,iCAAiC,EACjCgD,oBAAoB,CACrB;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}