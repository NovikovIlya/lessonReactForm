{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"mode\", \"onRemove\", \"removePlaceholder\", \"onDragFinish\", \"before\", \"after\", \"disabled\", \"draggable\", \"Component\", \"onChange\", \"name\", \"value\", \"checked\", \"defaultChecked\", \"getRootRef\", \"draggerLabel\", \"className\", \"style\"],\n  _excluded2 = [\"dragging\"];\nimport * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { Platform } from '../../lib/platform';\nimport { SimpleCell } from '../SimpleCell/SimpleCell';\nimport { Removable } from '../Removable/Removable';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDraggable } from './useDraggable';\nimport { ListContext } from '../List/ListContext';\nimport { CellDragger } from './CellDragger/CellDragger';\nimport { CellCheckbox } from './CellCheckbox/CellCheckbox';\n/**\n * @see https://vkcom.github.io/VKUI/#/Cell\n */\nexport var Cell = function Cell(_ref) {\n  var mode = _ref.mode,\n    _ref$onRemove = _ref.onRemove,\n    _onRemove = _ref$onRemove === void 0 ? noop : _ref$onRemove,\n    _ref$removePlaceholde = _ref.removePlaceholder,\n    removePlaceholder = _ref$removePlaceholde === void 0 ? 'Удалить' : _ref$removePlaceholde,\n    onDragFinish = _ref.onDragFinish,\n    before = _ref.before,\n    after = _ref.after,\n    disabled = _ref.disabled,\n    draggable = _ref.draggable,\n    Component = _ref.Component,\n    onChange = _ref.onChange,\n    name = _ref.name,\n    value = _ref.value,\n    checked = _ref.checked,\n    defaultChecked = _ref.defaultChecked,\n    getRootRef = _ref.getRootRef,\n    _ref$draggerLabel = _ref.draggerLabel,\n    draggerLabel = _ref$draggerLabel === void 0 ? 'Перенести ячейку' : _ref$draggerLabel,\n    className = _ref.className,\n    style = _ref.style,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var selectable = mode === 'selectable';\n  var removable = mode === 'removable';\n  var platform = usePlatform();\n  var rootElRef = useExternRef(getRootRef);\n  var _useDraggable = useDraggable({\n      rootElRef: rootElRef,\n      onDragFinish: onDragFinish\n    }),\n    dragging = _useDraggable.dragging,\n    draggableProps = _objectWithoutProperties(_useDraggable, _excluded2);\n  var _React$useContext = React.useContext(ListContext),\n    toggleDrag = _React$useContext.toggleDrag;\n  React.useEffect(function () {\n    if (dragging) {\n      toggleDrag(true);\n      return function () {\n        return toggleDrag(false);\n      };\n    }\n    return undefined;\n  }, [dragging, toggleDrag]);\n  var dragger;\n  if (draggable) {\n    dragger = /*#__PURE__*/React.createElement(CellDragger, _extends({\n      className: \"vkuiCell__dragger\",\n      \"aria-label\": draggerLabel\n    }, draggableProps));\n  }\n  var checkbox;\n  if (selectable) {\n    var checkboxProps = {\n      name: name,\n      value: value,\n      onChange: onChange,\n      defaultChecked: defaultChecked,\n      checked: checked,\n      disabled: disabled\n    };\n    checkbox = /*#__PURE__*/React.createElement(CellCheckbox, _extends({\n      className: \"vkuiCell__checkbox\"\n    }, checkboxProps));\n  }\n  var simpleCellDisabled = draggable && !selectable || removable || disabled;\n  var hasActive = !simpleCellDisabled && !dragging;\n  var cellClasses = classNames(\"vkuiCell\", platform === Platform.IOS && \"vkuiCell--ios\", dragging && \"vkuiCell--dragging\", removable && \"vkuiCell--removable\", selectable && \"vkuiCell--selectable\", disabled && \"vkuiCell--disabled\");\n  var simpleCell = /*#__PURE__*/React.createElement(SimpleCell, _extends({\n    hasActive: hasActive,\n    hasHover: hasActive\n  }, restProps, {\n    className: \"vkuiCell__content\",\n    disabled: simpleCellDisabled,\n    Component: selectable ? 'label' : Component,\n    before: /*#__PURE__*/React.createElement(React.Fragment, null, draggable && platform !== Platform.IOS && dragger, selectable && checkbox, before),\n    after: /*#__PURE__*/React.createElement(React.Fragment, null, draggable && platform === Platform.IOS && dragger, after)\n  }));\n  if (removable) {\n    return /*#__PURE__*/React.createElement(Removable, {\n      className: classNames(cellClasses, className),\n      style: style,\n      getRootRef: rootElRef,\n      removePlaceholder: removePlaceholder,\n      onRemove: function onRemove(e) {\n        return _onRemove(e, rootElRef.current);\n      }\n    }, simpleCell);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(cellClasses, className),\n    style: style,\n    ref: rootElRef\n  }, simpleCell);\n};","map":{"version":3,"names":["React","classNames","noop","Platform","SimpleCell","Removable","usePlatform","useExternRef","useDraggable","ListContext","CellDragger","CellCheckbox","Cell","_ref","mode","_ref$onRemove","onRemove","_onRemove","_ref$removePlaceholde","removePlaceholder","onDragFinish","before","after","disabled","draggable","Component","onChange","name","value","checked","defaultChecked","getRootRef","_ref$draggerLabel","draggerLabel","className","style","restProps","_objectWithoutProperties","_excluded","selectable","removable","platform","rootElRef","_useDraggable","dragging","draggableProps","_excluded2","_React$useContext","useContext","toggleDrag","useEffect","undefined","dragger","createElement","_extends","checkbox","checkboxProps","simpleCellDisabled","hasActive","cellClasses","IOS","simpleCell","hasHover","Fragment","e","current","ref"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\Cell\\Cell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { Platform } from '../../lib/platform';\nimport { SimpleCell, SimpleCellProps } from '../SimpleCell/SimpleCell';\nimport { HasRootRef } from '../../types';\nimport { Removable, RemovableProps } from '../Removable/Removable';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDraggable } from './useDraggable';\nimport { ListContext } from '../List/ListContext';\nimport { CellDragger } from './CellDragger/CellDragger';\nimport { CellCheckbox, CellCheckboxProps } from './CellCheckbox/CellCheckbox';\nimport styles from './Cell.module.css';\n\nexport interface CellProps\n  extends Omit<SimpleCellProps, 'getRootRef'>,\n    RemovableProps,\n    HasRootRef<HTMLDivElement> {\n  mode?: 'removable' | 'selectable';\n  /**\n   * В режиме перетаскивания ячейка перестает быть кликабельной, то есть при клике переданный onClick вызываться не будет\n   */\n  draggable?: boolean;\n  /**\n   * Имя для input в режиме selectable\n   */\n  name?: string;\n  /**\n   * В режиме selectable реагирует на входящие значения пропса cheсked, как зависящий напрямую от входящего значения\n   */\n  checked?: boolean;\n  /**\n   * В режиме selectable реагирует на входящие значения пропса defaultChecked как неконтролируемый компонент\n   */\n  defaultChecked?: boolean;\n  /**\n   * Коллбэк срабатывает при завершении перетаскивания.\n   * **Важно:** режим перетаскивания не меняет порядок ячеек в DOM. В коллбэке есть объект с полями `from` и `to`.\n   * Эти числа нужны для того, чтобы разработчик понимал, с какого индекса на какой произошел переход. В песочнице\n   * есть рабочий пример с обработкой этих чисел и перерисовкой списка.\n   */\n  onDragFinish?: ({ from, to }: { from: number; to: number }) => void;\n  /**\n   * aria-label для кнопки перетаскивания ячейки\n   */\n  draggerLabel?: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Cell\n */\nexport const Cell = ({\n  mode,\n  onRemove = noop,\n  removePlaceholder = 'Удалить',\n  onDragFinish,\n  before,\n  after,\n  disabled,\n  draggable,\n  Component,\n  onChange,\n  name,\n  value,\n  checked,\n  defaultChecked,\n  getRootRef,\n  draggerLabel = 'Перенести ячейку',\n  className,\n  style,\n  ...restProps\n}: CellProps) => {\n  const selectable = mode === 'selectable';\n  const removable = mode === 'removable';\n\n  const platform = usePlatform();\n\n  const rootElRef = useExternRef(getRootRef);\n\n  const { dragging, ...draggableProps } = useDraggable({\n    rootElRef,\n    onDragFinish,\n  });\n\n  const { toggleDrag } = React.useContext(ListContext);\n  React.useEffect(() => {\n    if (dragging) {\n      toggleDrag(true);\n      return () => toggleDrag(false);\n    }\n    return undefined;\n  }, [dragging, toggleDrag]);\n\n  let dragger;\n  if (draggable) {\n    dragger = (\n      <CellDragger\n        className={styles['Cell__dragger']}\n        aria-label={draggerLabel}\n        {...draggableProps}\n      />\n    );\n  }\n\n  let checkbox;\n  if (selectable) {\n    const checkboxProps: CellCheckboxProps = {\n      name,\n      value,\n      onChange,\n      defaultChecked,\n      checked,\n      disabled,\n    };\n    checkbox = <CellCheckbox className={styles['Cell__checkbox']} {...checkboxProps} />;\n  }\n\n  const simpleCellDisabled = (draggable && !selectable) || removable || disabled;\n  const hasActive = !simpleCellDisabled && !dragging;\n\n  const cellClasses = classNames(\n    styles['Cell'],\n    platform === Platform.IOS && styles['Cell--ios'],\n    dragging && styles['Cell--dragging'],\n    removable && styles['Cell--removable'],\n    selectable && styles['Cell--selectable'],\n    disabled && styles['Cell--disabled'],\n  );\n\n  const simpleCell = (\n    <SimpleCell\n      hasActive={hasActive}\n      hasHover={hasActive}\n      {...restProps}\n      className={styles['Cell__content']}\n      disabled={simpleCellDisabled}\n      Component={selectable ? 'label' : Component}\n      before={\n        <React.Fragment>\n          {draggable && platform !== Platform.IOS && dragger}\n          {selectable && checkbox}\n          {before}\n        </React.Fragment>\n      }\n      after={\n        <React.Fragment>\n          {draggable && platform === Platform.IOS && dragger}\n          {after}\n        </React.Fragment>\n      }\n    />\n  );\n\n  if (removable) {\n    return (\n      <Removable\n        className={classNames(cellClasses, className)}\n        style={style}\n        getRootRef={rootElRef}\n        removePlaceholder={removePlaceholder}\n        onRemove={(e) => onRemove(e, rootElRef.current)}\n      >\n        {simpleCell}\n      </Removable>\n    );\n  }\n\n  return (\n    <div className={classNames(cellClasses, className)} style={style} ref={rootElRef}>\n      {simpleCell}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}