{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport { ModalType } from './types';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { getNavId } from '../../lib/getNavId';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { noop, isFunction } from '@vkontakte/vkjs';\nfunction getModals(children) {\n  return React.Children.toArray(children);\n}\nvar warn = warnOnce('ModalRoot');\nexport function modalTransitionReducer(state, action) {\n  if (action.type === 'setActive' && action.id !== state.activeModal) {\n    var nextModal = action.id;\n    // preserve exiting modal if switching mid-transition\n    var prevModal = state.exitingModal || state.activeModal;\n    var history = state.history ? _toConsumableArray(state.history) : [];\n    var isBack = Boolean(nextModal && history.includes(nextModal));\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history: history,\n      isBack: isBack\n    };\n  }\n  if (action.type === 'entered' && action.id === state.enteringModal) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      enteringModal: null\n    });\n  }\n  if (action.type === 'exited' && action.id === state.exitingModal) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      exitingModal: null\n    });\n  }\n  if (action.type === 'inited' && action.id === state.activeModal) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      enteringModal: action.id\n    });\n  }\n  return state;\n}\n\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\nexport function useModalManager(activeModal, children) {\n  var onOpen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n  var onOpened = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n  var onClose = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : noop;\n  var onClosed = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : noop;\n  var initModal = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : noop;\n  var modalsState = React.useRef({}).current;\n  getModals(children).forEach(function (Modal) {\n    var modalProps = Modal.props;\n    var id = getNavId(modalProps, warn);\n    var state = id !== undefined && modalsState[id] || {\n      id: id !== null && id !== void 0 ? id : null\n    };\n    state.onOpen = Modal.props.onOpen;\n    state.onOpened = Modal.props.onOpened;\n    state.onClose = Modal.props.onClose;\n    state.onClosed = Modal.props.onClosed;\n    state.dynamicContentHeight = !!modalProps.dynamicContentHeight;\n    // ModalPage props\n    if (typeof modalProps.settlingHeight === 'number') {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n  var isMissing = activeModal && !modalsState[activeModal];\n  var safeActiveModal = isMissing ? null : activeModal;\n  var _React$useReducer = React.useReducer(modalTransitionReducer, {\n      activeModal: safeActiveModal,\n      enteringModal: null,\n      exitingModal: null,\n      history: safeActiveModal ? [safeActiveModal] : [],\n      isBack: false\n    }),\n    _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n    transitionState = _React$useReducer2[0],\n    dispatchTransition = _React$useReducer2[1];\n\n  // Map props to state, render activeModal for init\n  useIsomorphicLayoutEffect(function () {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === 'development' && isMissing) {\n      warn(\"\\u041F\\u0435\\u0440\\u0435\\u0445\\u043E\\u0434 \\u043D\\u0435\\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u0435\\u043D - \\u043C\\u043E\\u0434\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u043E\\u043A\\u043D\\u043E (\\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430) \".concat(activeModal, \" \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"), 'error');\n    }\n    dispatchTransition({\n      type: 'setActive',\n      id: safeActiveModal !== null && safeActiveModal !== void 0 ? safeActiveModal : null\n    });\n  }, [activeModal]);\n\n  // Init activeModal & set enteringModal\n  useIsomorphicLayoutEffect(function () {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({\n        type: 'inited',\n        id: transitionState.activeModal\n      });\n    }\n  }, [transitionState.activeModal]);\n  var isCard = function isCard(id) {\n    var _modalsState$id;\n    return id != null && ((_modalsState$id = modalsState[id]) === null || _modalsState$id === void 0 ? void 0 : _modalsState$id.type) === ModalType.CARD;\n  };\n  var onEntered = React.useCallback(function (id) {\n    if (id) {\n      var modalState = modalsState[id];\n      if (isFunction(modalState.onOpened)) {\n        modalState.onOpened();\n      } else if (isFunction(onOpened)) {\n        onOpened(id);\n      }\n    }\n    dispatchTransition({\n      type: 'entered',\n      id: id\n    });\n  }, [modalsState, onOpened]);\n  var onExited = React.useCallback(function (id) {\n    if (id) {\n      var modalState = modalsState[id];\n      if (isFunction(modalState.onClosed)) {\n        modalState.onClosed();\n      } else if (isFunction(onClosed)) {\n        onClosed(id);\n      }\n    }\n    dispatchTransition({\n      type: 'exited',\n      id: id\n    });\n  }, [modalsState, onClosed]);\n  var delayEnter = Boolean(transitionState.exitingModal && (isCard(activeModal) || isCard(transitionState.exitingModal)));\n  var getModalState = React.useCallback(function (id) {\n    return modalsState[id];\n  }, [modalsState]);\n  function onEnter() {\n    var modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onOpen)) {\n        modalState.onOpen();\n      } else if (isFunction(onOpen)) {\n        onOpen(modalState.id);\n      }\n    }\n  }\n  function onExit() {\n    var modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose)) {\n        onClose(modalState.id);\n      }\n    }\n  }\n  return _objectSpread(_objectSpread({\n    onEnter: onEnter,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExited: onExited\n  }, transitionState), {}, {\n    delayEnter: delayEnter,\n    getModalState: getModalState\n  });\n}\nexport function withModalManager() {\n  var initModal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n  return function (Wrapped) {\n    return function WithModalManager(props) {\n      var transitionManager = useModalManager(props.activeModal, props.children, props.onOpen, props.onOpened, props.onClose, props.onClosed, initModal);\n      return /*#__PURE__*/React.createElement(Wrapped, _extends({}, props, transitionManager));\n    };\n  };\n}","map":{"version":3,"names":["React","ModalType","warnOnce","getNavId","useIsomorphicLayoutEffect","noop","isFunction","getModals","children","Children","toArray","warn","modalTransitionReducer","state","action","type","id","activeModal","nextModal","prevModal","exitingModal","history","_toConsumableArray","isBack","Boolean","includes","splice","indexOf","push","enteringModal","_objectSpread","useModalManager","onOpen","arguments","length","undefined","onOpened","onClose","onClosed","initModal","modalsState","useRef","current","forEach","Modal","modalProps","props","dynamicContentHeight","settlingHeight","isMissing","safeActiveModal","_React$useReducer","useReducer","_React$useReducer2","_slicedToArray","transitionState","dispatchTransition","process","env","NODE_ENV","concat","isCard","_modalsState$id","CARD","onEntered","useCallback","modalState","onExited","delayEnter","getModalState","onEnter","onExit","withModalManager","Wrapped","WithModalManager","transitionManager","createElement","_extends"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\ModalRoot\\useModalManager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ModalsState, ModalsStateEntry, ModalType } from './types';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { getNavId } from '../../lib/getNavId';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { noop, isFunction } from '@vkontakte/vkjs';\n\ninterface ModalTransitionState {\n  activeModal?: string | null;\n  enteringModal?: string | null;\n  exitingModal?: string | null;\n\n  history?: string[];\n  isBack?: boolean | null;\n}\n\nexport interface ModalTransitionProps extends ModalTransitionState {\n  onEnter: VoidFunction;\n  onEntered: (id: string | null) => void;\n  onExit: VoidFunction;\n  onExited: (id: string | null) => void;\n  getModalState: (id: string) => ModalsStateEntry;\n  delayEnter: boolean;\n}\n\nfunction getModals(children: React.ReactNode | React.ReactNode[]) {\n  return React.Children.toArray(children) as React.ReactElement[];\n}\n\nconst warn = warnOnce('ModalRoot');\n\nexport function modalTransitionReducer(\n  state: ModalTransitionState,\n  action: {\n    type: 'setActive' | 'entered' | 'exited' | 'inited';\n    id: string | null;\n  },\n): ModalTransitionState {\n  if (action.type === 'setActive' && action.id !== state.activeModal) {\n    const nextModal = action.id;\n    // preserve exiting modal if switching mid-transition\n    const prevModal = state.exitingModal || state.activeModal;\n    let history = state.history ? [...state.history] : [];\n    const isBack = Boolean(nextModal && history.includes(nextModal));\n\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history,\n      isBack,\n    };\n  }\n  if (action.type === 'entered' && action.id === state.enteringModal) {\n    return { ...state, enteringModal: null };\n  }\n  if (action.type === 'exited' && action.id === state.exitingModal) {\n    return { ...state, exitingModal: null };\n  }\n  if (action.type === 'inited' && action.id === state.activeModal) {\n    return { ...state, enteringModal: action.id };\n  }\n  return state;\n}\n\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\nexport function useModalManager(\n  activeModal: string | null | undefined,\n  children: React.ReactNode | React.ReactNode[],\n  onOpen: (id: string) => void = noop,\n  onOpened: (id: string) => void = noop,\n  onClose: (id: string) => void = noop,\n  onClosed: (id: string) => void = noop,\n  initModal: (state: ModalsStateEntry) => void = noop,\n): ModalTransitionProps {\n  const modalsState = React.useRef<ModalsState>({}).current;\n  getModals(children).forEach((Modal) => {\n    const modalProps = Modal.props;\n    const id = getNavId(modalProps, warn);\n    const state: ModalsStateEntry = (id !== undefined && modalsState[id]) || {\n      id: id ?? null,\n    };\n\n    state.onOpen = Modal.props.onOpen;\n    state.onOpened = Modal.props.onOpened;\n    state.onClose = Modal.props.onClose;\n    state.onClosed = Modal.props.onClosed;\n    state.dynamicContentHeight = !!modalProps.dynamicContentHeight;\n    // ModalPage props\n    if (typeof modalProps.settlingHeight === 'number') {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n\n  const isMissing = activeModal && !modalsState[activeModal];\n  const safeActiveModal = isMissing ? null : activeModal;\n  const [transitionState, dispatchTransition] = React.useReducer(modalTransitionReducer, {\n    activeModal: safeActiveModal,\n    enteringModal: null,\n    exitingModal: null,\n    history: safeActiveModal ? [safeActiveModal] : [],\n    isBack: false,\n  });\n\n  // Map props to state, render activeModal for init\n  useIsomorphicLayoutEffect(() => {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === 'development' && isMissing) {\n      warn(`Переход невозможен - модальное окно (страница) ${activeModal} не существует`, 'error');\n    }\n    dispatchTransition({ type: 'setActive', id: safeActiveModal ?? null });\n  }, [activeModal]);\n\n  // Init activeModal & set enteringModal\n  useIsomorphicLayoutEffect(() => {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({ type: 'inited', id: transitionState.activeModal });\n    }\n  }, [transitionState.activeModal]);\n\n  const isCard = (id: string | null | undefined) =>\n    id != null && modalsState[id]?.type === ModalType.CARD;\n  const onEntered = React.useCallback(\n    (id: string | null) => {\n      if (id) {\n        const modalState = modalsState[id];\n\n        if (isFunction(modalState.onOpened)) {\n          modalState.onOpened();\n        } else if (isFunction(onOpened)) {\n          onOpened(id);\n        }\n      }\n\n      dispatchTransition({ type: 'entered', id });\n    },\n    [modalsState, onOpened],\n  );\n  const onExited = React.useCallback(\n    (id: string | null) => {\n      if (id) {\n        const modalState = modalsState[id];\n\n        if (isFunction(modalState.onClosed)) {\n          modalState.onClosed();\n        } else if (isFunction(onClosed)) {\n          onClosed(id);\n        }\n      }\n\n      dispatchTransition({ type: 'exited', id });\n    },\n    [modalsState, onClosed],\n  );\n  const delayEnter = Boolean(\n    transitionState.exitingModal && (isCard(activeModal) || isCard(transitionState.exitingModal)),\n  );\n  const getModalState = React.useCallback((id: string) => modalsState[id], [modalsState]);\n\n  function onEnter() {\n    const modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onOpen)) {\n        modalState.onOpen();\n      } else if (isFunction(onOpen)) {\n        onOpen(modalState.id);\n      }\n    }\n  }\n\n  function onExit() {\n    const modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose)) {\n        onClose(modalState.id);\n      }\n    }\n  }\n\n  return {\n    onEnter,\n    onEntered,\n    onExit,\n    onExited,\n    ...transitionState,\n    delayEnter,\n    getModalState,\n  };\n}\n\nexport function withModalManager(initModal: (a: ModalsStateEntry) => void = noop) {\n  return function <Props extends ModalTransitionProps>(\n    Wrapped: React.ComponentType<Props>,\n  ): React.ComponentType<\n    Omit<Props, keyof ModalTransitionProps> & {\n      activeModal?: string | null;\n      children?: React.ReactNode;\n    }\n  > {\n    return function WithModalManager(props) {\n      const transitionManager = useModalManager(\n        props.activeModal,\n        props.children,\n        (props as any).onOpen,\n        (props as any).onOpened,\n        (props as any).onClose,\n        (props as any).onClosed,\n        initModal,\n      );\n      return <Wrapped {...(props as any)} {...transitionManager} />;\n    };\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}