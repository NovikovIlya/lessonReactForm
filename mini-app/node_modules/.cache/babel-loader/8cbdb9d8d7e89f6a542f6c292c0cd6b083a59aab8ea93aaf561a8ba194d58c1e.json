{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"id\"];\nimport * as React from 'react';\nimport { Touch } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { classNames } from '@vkontakte/vkjs';\nimport { setTransformStyle } from '../../lib/styles';\nimport { rubber } from '../../lib/touch';\nimport { Platform } from '../../lib/platform';\nimport { transitionEvent } from '../../lib/supportEvents';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { withContext } from '../../hoc/withContext';\nimport { ModalRootContext } from './ModalRootContext';\nimport { ConfigProviderContext, WebviewType } from '../ConfigProvider/ConfigProviderContext';\nimport { ModalType } from './types';\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from './constants';\nimport { withDOM } from '../../lib/dom';\nimport { getNavId } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { withModalManager } from './useModalManager';\nimport { clamp } from '../../helpers/math';\nvar warn = warnOnce('ModalRoot');\nvar IS_DEV = process.env.NODE_ENV === 'development';\nfunction numberInRange(number, range) {\n  if (!range) {\n    return false;\n  }\n  return number >= range[0] && number <= range[1];\n}\nfunction rangeTranslate(number) {\n  return clamp(number, 0, 98);\n}\nvar ModalRootTouchComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ModalRootTouchComponent, _React$Component);\n  var _super = _createSuper(ModalRootTouchComponent);\n  function ModalRootTouchComponent(props) {\n    var _this;\n    _classCallCheck(this, ModalRootTouchComponent);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"documentScrolling\", false);\n    _defineProperty(_assertThisInitialized(_this), \"maskElementRef\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"viewportRef\", /*#__PURE__*/React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"maskAnimationFrame\", undefined);\n    _defineProperty(_assertThisInitialized(_this), \"modalRootContext\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"frameIds\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"restoreFocusTo\", undefined);\n    _defineProperty(_assertThisInitialized(_this), \"preventTouch\", function (event) {\n      if (!event) {\n        return false;\n      }\n      while (event.originalEvent) {\n        event = event.originalEvent;\n      }\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n      return false;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateModalTranslate\", function () {\n      var modalState = _this.getModalState(_this.props.activeModal);\n      modalState && _this.animateTranslate(modalState, modalState.translateY);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateModalHeight\", function () {\n      var modalState = _this.getModalState(_this.props.activeModal);\n      if (modalState && modalState.type === ModalType.PAGE && modalState.dynamicContentHeight) {\n        if (_this.props.enteringModal) {\n          _this.waitTransitionFinish(modalState, function () {\n            requestAnimationFrame(function () {\n              return _this.checkPageContentHeight();\n            });\n          });\n        } else {\n          requestAnimationFrame(function () {\n            return _this.checkPageContentHeight();\n          });\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onTouchMove\", function (e) {\n      if (_this.props.exitingModal) {\n        return;\n      }\n      var modalState = _this.getModalState(_this.props.activeModal);\n      if (!modalState) {\n        return;\n      }\n      if (modalState.type === ModalType.PAGE) {\n        return _this.onPageTouchMove(e, modalState);\n      }\n      if (modalState.type === ModalType.CARD) {\n        return _this.onCardTouchMove(e, modalState);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onTouchEnd\", function (e) {\n      var modalState = _this.getModalState(_this.props.activeModal);\n      if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === ModalType.PAGE) {\n        return _this.onPageTouchEnd(e, modalState);\n      }\n      if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === ModalType.CARD) {\n        return _this.onCardTouchEnd(e, modalState);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onScroll\", function (e) {\n      var _modalState$contentEl;\n      var activeModal = _this.props.activeModal;\n      var target = e.target;\n      if (!activeModal) {\n        return;\n      }\n      var modalState = _this.getModalState(activeModal);\n      if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === ModalType.PAGE && modalState !== null && modalState !== void 0 && (_modalState$contentEl = modalState.contentElement) !== null && _modalState$contentEl !== void 0 && _modalState$contentEl.contains(target)) {\n        modalState.contentScrolled = true;\n        if (modalState.contentScrollStopTimeout) {\n          clearTimeout(modalState.contentScrollStopTimeout);\n        }\n        modalState.contentScrollStopTimeout = setTimeout(function () {\n          if (modalState.contentScrolled) {\n            modalState.contentScrolled = false;\n          }\n        }, 250);\n      }\n    });\n    _this.state = {\n      touchDown: false,\n      dragging: false\n    };\n    _this.maskElementRef = /*#__PURE__*/React.createRef();\n    _this.modalRootContext = {\n      updateModalHeight: _this.updateModalHeight,\n      registerModal: function registerModal(_ref) {\n        var _this$getModalState;\n        var id = _ref.id,\n          data = _objectWithoutProperties(_ref, _excluded);\n        return Object.assign((_this$getModalState = _this.getModalState(id)) !== null && _this$getModalState !== void 0 ? _this$getModalState : {}, data);\n      },\n      onClose: function onClose() {\n        return _this.props.onExit();\n      },\n      isInsideModal: true\n    };\n    _this.frameIds = {};\n    return _this;\n  }\n  _createClass(ModalRootTouchComponent, [{\n    key: \"timeout\",\n    get: function get() {\n      return this.props.platform === Platform.IOS ? 400 : 320;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.props.window;\n    }\n  }, {\n    key: \"getModalState\",\n    value: function getModalState(id) {\n      if (!id) {\n        return undefined;\n      }\n      return this.props.getModalState(id);\n    }\n  }, {\n    key: \"getModals\",\n    value: function getModals() {\n      return React.Children.toArray(this.props.children);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Отслеживаем изменение размеров viewport (Необходимо для iOS)\n      if (this.props.platform === Platform.IOS) {\n        var _this$window;\n        (_this$window = this.window) === null || _this$window === void 0 ? void 0 : _this$window.addEventListener('resize', this.updateModalTranslate, false);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.toggleDocumentScrolling(true);\n      this.window.removeEventListener('resize', this.updateModalTranslate, false);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n      // transition phase 2: animate exiting modal\n      if (this.props.exitingModal && this.props.exitingModal !== prevProps.exitingModal) {\n        this.closeModal(this.props.exitingModal);\n      }\n\n      // transition phase 3: animate entering modal\n      if (this.props.enteringModal && this.props.enteringModal !== prevProps.enteringModal) {\n        var enteringModal = this.props.enteringModal;\n        var enteringState = this.getModalState(enteringModal);\n        this.props.onEnter();\n        this.waitTransitionFinish(enteringState, function () {\n          if (enteringState !== null && enteringState !== void 0 && enteringState.innerElement) {\n            enteringState.innerElement.style.transitionDelay = '';\n          }\n          _this2.props.onEntered(enteringModal);\n        });\n        if (enteringState !== null && enteringState !== void 0 && enteringState.innerElement) {\n          enteringState.innerElement.style.transitionDelay = this.props.delayEnter ? \"\".concat(this.timeout, \"ms\") : '';\n          this.animateTranslate(enteringState, enteringState.translateY);\n        }\n      }\n\n      // focus restoration\n      if (this.props.activeModal && !prevProps.activeModal) {\n        this.restoreFocusTo = this.document.activeElement;\n      }\n      if (!this.props.activeModal && !this.props.exitingModal && this.restoreFocusTo) {\n        this.restoreFocusTo.focus();\n        this.restoreFocusTo = null;\n      }\n      this.toggleDocumentScrolling(!this.props.activeModal && !this.props.exitingModal);\n    }\n\n    /* Отключает скролл документа */\n  }, {\n    key: \"toggleDocumentScrolling\",\n    value: function toggleDocumentScrolling(enabled) {\n      if (this.documentScrolling === enabled) {\n        return;\n      }\n      this.documentScrolling = enabled;\n      if (enabled) {\n        // Здесь нужен последний аргумент с такими же параметрами, потому что\n        // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n        // https://github.com/VKCOM/VKUI/issues/444\n        this.window.removeEventListener('touchmove', this.preventTouch, {\n          // @ts-expect-error: TS2769 В интерфейсе EventListenerOptions нет поля passive\n          passive: false\n        });\n      } else {\n        this.window.addEventListener('touchmove', this.preventTouch, {\n          passive: false\n        });\n      }\n    }\n  }, {\n    key: \"checkPageContentHeight\",\n    value: function checkPageContentHeight() {\n      var modalState = this.getModalState(this.props.activeModal);\n      if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === ModalType.PAGE && modalState !== null && modalState !== void 0 && modalState.modalElement) {\n        var prevModalState = _objectSpread({}, modalState);\n        initPageModal(modalState);\n        var currentModalState = _objectSpread({}, modalState);\n        var needAnimate = false;\n        if (prevModalState.expandable === currentModalState.expandable) {\n          if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {\n            needAnimate = true;\n          }\n        } else {\n          needAnimate = true;\n        }\n        if (needAnimate) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n      }\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal(id) {\n      var _this3 = this,\n        _prevModalState$trans,\n        _nextModalState$trans,\n        _nextModalState$trans2;\n      // Сбрасываем состояния, которые могут помешать закрытию модального окна\n      this.setState({\n        touchDown: false\n      });\n      var prevModalState = this.getModalState(id);\n      if (!prevModalState) {\n        id && warn(\"closeActiveModal: \\u043C\\u043E\\u0434\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u043E\\u043A\\u043D\\u043E (\\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430) \".concat(id, \" \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"), 'error');\n        return;\n      }\n      var nextModalState = this.getModalState(this.props.activeModal);\n      var nextIsPage = !!nextModalState && nextModalState.type === ModalType.PAGE;\n      var prevIsPage = !!prevModalState && prevModalState.type === ModalType.PAGE;\n      this.waitTransitionFinish(prevModalState, function () {\n        return _this3.props.onExited(id);\n      });\n      var exitTranslate = prevIsPage && nextIsPage && ((_prevModalState$trans = prevModalState.translateY) !== null && _prevModalState$trans !== void 0 ? _prevModalState$trans : 0) <= ((_nextModalState$trans = nextModalState === null || nextModalState === void 0 ? void 0 : nextModalState.translateYFrom) !== null && _nextModalState$trans !== void 0 ? _nextModalState$trans : 0) && !this.props.isBack ? ((_nextModalState$trans2 = nextModalState === null || nextModalState === void 0 ? void 0 : nextModalState.translateYFrom) !== null && _nextModalState$trans2 !== void 0 ? _nextModalState$trans2 : 0) + 10 : 100;\n      this.animateTranslate(prevModalState, exitTranslate);\n      if (!nextModalState) {\n        // NOTE: was only for clean exit\n        this.setMaskOpacity(prevModalState, 0);\n      }\n    }\n  }, {\n    key: \"onPageTouchMove\",\n    value: function onPageTouchMove(event, modalState) {\n      var _modalState$innerElem, _modalState$headerEle;\n      var shiftY = event.shiftY,\n        originalEvent = event.originalEvent;\n      var target = originalEvent.target;\n      if (!event.isY) {\n        var _this$viewportRef$cur;\n        if ((_this$viewportRef$cur = this.viewportRef.current) !== null && _this$viewportRef$cur !== void 0 && _this$viewportRef$cur.contains(target)) {\n          originalEvent.preventDefault();\n        }\n        return;\n      }\n      if (!((_modalState$innerElem = modalState.innerElement) !== null && _modalState$innerElem !== void 0 && _modalState$innerElem.contains(target))) {\n        return originalEvent.preventDefault();\n      }\n      originalEvent.stopPropagation();\n      var expandable = modalState.expandable,\n        contentScrolled = modalState.contentScrolled,\n        collapsed = modalState.collapsed,\n        expanded = modalState.expanded;\n      if (!this.state.touchDown) {\n        var _modalState$contentEl2, _modalState$contentEl3;\n        modalState.touchStartContentScrollTop = (_modalState$contentEl2 = (_modalState$contentEl3 = modalState.contentElement) === null || _modalState$contentEl3 === void 0 ? void 0 : _modalState$contentEl3.scrollTop) !== null && _modalState$contentEl2 !== void 0 ? _modalState$contentEl2 : 0;\n        this.setState({\n          touchDown: true\n        });\n      }\n      if (contentScrolled) {\n        return;\n      }\n      if (modalState.touchMovePositive === null) {\n        modalState.touchMovePositive = shiftY > 0;\n      }\n      if (!modalState.expandable || collapsed || expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0 || (_modalState$headerEle = modalState.headerElement) !== null && _modalState$headerEle !== void 0 && _modalState$headerEle.contains(target)) {\n        var _modalState$translate;\n        originalEvent.preventDefault();\n        if (!expandable && shiftY < 0 || !this.window) {\n          return;\n        }\n        !this.state.dragging && this.setState({\n          dragging: true\n        });\n        var shiftYPercent = shiftY / this.window.innerHeight * 100;\n        var shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform !== Platform.IOS);\n        modalState.touchShiftYPercent = shiftYPercent;\n        modalState.translateYCurrent = rangeTranslate(((_modalState$translate = modalState.translateY) !== null && _modalState$translate !== void 0 ? _modalState$translate : 0) + shiftYCurrent);\n        this.animateTranslate(modalState, modalState.translateYCurrent);\n        this.setMaskOpacity(modalState);\n      }\n    }\n  }, {\n    key: \"onCardTouchMove\",\n    value: function onCardTouchMove(event, modalState) {\n      var _modalState$innerElem2;\n      var originalEvent = event.originalEvent,\n        shiftY = event.shiftY;\n      var target = originalEvent.target;\n      if ((_modalState$innerElem2 = modalState.innerElement) !== null && _modalState$innerElem2 !== void 0 && _modalState$innerElem2.contains(target)) {\n        var _modalState$translate2;\n        if (!this.state.touchDown) {\n          this.setState({\n            touchDown: true,\n            dragging: true\n          });\n        }\n        var shiftYPercent = shiftY / modalState.innerElement.offsetHeight * 100;\n        var shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform !== Platform.IOS);\n        modalState.touchShiftYPercent = shiftYPercent;\n        modalState.translateYCurrent = Math.max(0, ((_modalState$translate2 = modalState.translateY) !== null && _modalState$translate2 !== void 0 ? _modalState$translate2 : 0) + shiftYCurrent);\n        this.animateTranslate(modalState, modalState.translateYCurrent);\n        this.setMaskOpacity(modalState);\n      }\n    }\n  }, {\n    key: \"onPageTouchEnd\",\n    value: function onPageTouchEnd(event, modalState) {\n      var _this4 = this;\n      var startY = event.startY,\n        shiftY = event.shiftY;\n      modalState.contentScrolled = false;\n      modalState.touchMovePositive = null;\n      var setStateCallback;\n      if (this.state.dragging && this.window) {\n        var _modalState$translate3, _modalState$touchShif;\n        var shiftYEndPercent = (startY + shiftY) / this.window.innerHeight * 100;\n        var translateY = (_modalState$translate3 = modalState.translateYCurrent) !== null && _modalState$translate3 !== void 0 ? _modalState$translate3 : 0;\n        var expectTranslateY = translateY / event.duration * 240 * 0.6 * (((_modalState$touchShif = modalState.touchShiftYPercent) !== null && _modalState$touchShif !== void 0 ? _modalState$touchShif : 0) < 0 ? -1 : 1);\n        translateY = rangeTranslate(translateY + expectTranslateY);\n        if (modalState.settlingHeight !== 100) {\n          if (numberInRange(translateY, modalState.expandedRange)) {\n            var _modalState$expandedR, _modalState$expandedR2;\n            translateY = (_modalState$expandedR = (_modalState$expandedR2 = modalState.expandedRange) === null || _modalState$expandedR2 === void 0 ? void 0 : _modalState$expandedR2[0]) !== null && _modalState$expandedR !== void 0 ? _modalState$expandedR : 0;\n          } else if (numberInRange(translateY, modalState.collapsedRange)) {\n            var _modalState$translate4;\n            translateY = (_modalState$translate4 = modalState.translateYFrom) !== null && _modalState$translate4 !== void 0 ? _modalState$translate4 : 0;\n          } else if (numberInRange(translateY, modalState.hiddenRange)) {\n            translateY = 100;\n          } else {\n            var _modalState$translate5;\n            translateY = (_modalState$translate5 = modalState.translateYFrom) !== null && _modalState$translate5 !== void 0 ? _modalState$translate5 : 0;\n          }\n        } else {\n          if (numberInRange(translateY, [0, 25])) {\n            translateY = 0;\n          } else {\n            translateY = 100;\n          }\n        }\n        if (translateY !== 100 && shiftYEndPercent >= 75) {\n          translateY = 100;\n        }\n        modalState.translateY = translateY;\n        modalState.translateYCurrent = translateY;\n        modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n        modalState.expanded = translateY === 0;\n        modalState.hidden = translateY === 100;\n        if (modalState.hidden) {\n          this.props.onExit();\n        }\n        setStateCallback = function setStateCallback() {\n          if (!modalState.hidden) {\n            _this4.animateTranslate(modalState, modalState.translateY);\n          }\n          _this4.setMaskOpacity(modalState);\n        };\n      }\n      this.setState({\n        touchDown: false,\n        dragging: false\n      }, setStateCallback);\n    }\n  }, {\n    key: \"onCardTouchEnd\",\n    value: function onCardTouchEnd(_ref2, modalState) {\n      var _this5 = this;\n      var duration = _ref2.duration;\n      var setStateCallback;\n      if (this.state.dragging) {\n        var _modalState$translate6, _modalState$touchShif2;\n        var translateY = (_modalState$translate6 = modalState.translateYCurrent) !== null && _modalState$translate6 !== void 0 ? _modalState$translate6 : 0;\n        var expectTranslateY = translateY / duration * 240 * 0.6 * (((_modalState$touchShif2 = modalState.touchShiftYPercent) !== null && _modalState$touchShif2 !== void 0 ? _modalState$touchShif2 : 0) < 0 ? -1 : 1);\n        translateY = Math.max(0, translateY + expectTranslateY);\n        if (translateY >= 30) {\n          translateY = 100;\n        } else {\n          translateY = 0;\n        }\n        modalState.translateY = translateY;\n        modalState.hidden = translateY === 100;\n        if (modalState.hidden) {\n          this.props.onExit();\n        }\n        setStateCallback = function setStateCallback() {\n          if (!modalState.hidden) {\n            _this5.animateTranslate(modalState, modalState.translateY);\n          }\n          _this5.setMaskOpacity(modalState);\n        };\n      }\n      this.setState({\n        touchDown: false,\n        dragging: false\n      }, setStateCallback);\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(modalState, eventHandler) {\n      if (transitionEvent.supported) {\n        var _modalState$innerElem4;\n        var onceHandler = function onceHandler() {\n          var _modalState$innerElem3;\n          modalState === null || modalState === void 0 ? void 0 : (_modalState$innerElem3 = modalState.innerElement) === null || _modalState$innerElem3 === void 0 ? void 0 : _modalState$innerElem3.removeEventListener(transitionEvent.name, onceHandler);\n          eventHandler();\n        };\n        modalState === null || modalState === void 0 ? void 0 : (_modalState$innerElem4 = modalState.innerElement) === null || _modalState$innerElem4 === void 0 ? void 0 : _modalState$innerElem4.addEventListener(transitionEvent.name, onceHandler);\n      } else {\n        setTimeout(eventHandler, this.timeout);\n      }\n    }\n\n    /**\n     * Анимирует сдвиг модалки\n     *\n     * @param {ModalsStateEntry} modalState\n     * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n     */\n  }, {\n    key: \"animateTranslate\",\n    value: function animateTranslate(modalState, percent) {\n      var frameId = \"animateTranslateFrame\".concat(modalState.id);\n      cancelAnimationFrame(this.frameIds[frameId]);\n      this.frameIds[frameId] = requestAnimationFrame(function () {\n        setTransformStyle(modalState.innerElement, \"translate3d(0, \".concat(percent, \"%, 0)\"));\n      });\n    }\n\n    /* Устанавливает прозрачность для полупрозрачной подложки */\n  }, {\n    key: \"setMaskOpacity\",\n    value: function setMaskOpacity(modalState) {\n      var _this$props$history,\n        _this6 = this;\n      var forceOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (forceOpacity === null && ((_this$props$history = this.props.history) === null || _this$props$history === void 0 ? void 0 : _this$props$history[0]) !== modalState.id) {\n        return;\n      }\n      if (this.maskAnimationFrame) {\n        cancelAnimationFrame(this.maskAnimationFrame);\n      }\n      this.maskAnimationFrame = requestAnimationFrame(function () {\n        if (_this6.maskElementRef.current) {\n          var _modalState$translate7 = modalState.translateY,\n            translateY = _modalState$translate7 === void 0 ? 0 : _modalState$translate7,\n            _modalState$translate8 = modalState.translateYCurrent,\n            translateYCurrent = _modalState$translate8 === void 0 ? 0 : _modalState$translate8;\n          var opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;\n          _this6.maskElementRef.current.style.opacity = clamp(opacity, 0, 100).toString();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$configPro,\n        _this7 = this;\n      var _this$props = this.props,\n        activeModal = _this$props.activeModal,\n        exitingModal = _this$props.exitingModal,\n        enteringModal = _this$props.enteringModal;\n      var _this$state = this.state,\n        touchDown = _this$state.touchDown,\n        dragging = _this$state.dragging;\n      if (!activeModal && !exitingModal) {\n        return null;\n      }\n      return /*#__PURE__*/React.createElement(TouchRootContext.Provider, {\n        value: true\n      }, /*#__PURE__*/React.createElement(ModalRootContext.Provider, {\n        value: this.modalRootContext\n      }, /*#__PURE__*/React.createElement(Touch, {\n        className: classNames(\"vkuiModalRoot\", ((_this$props$configPro = this.props.configProvider) === null || _this$props$configPro === void 0 ? void 0 : _this$props$configPro.webviewType) === WebviewType.VKAPPS && \"vkuiModalRoot--vkapps\", touchDown && \"vkuiModalRoot--touched\", !!(enteringModal || exitingModal) && \"vkuiModalRoot--switching\"),\n        onMove: this.onTouchMove,\n        onEnd: this.onTouchEnd,\n        onScroll: this.onScroll\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"vkuiModalRoot__mask\",\n        onClick: this.props.onExit,\n        ref: this.maskElementRef\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"vkuiModalRoot__viewport\",\n        ref: this.viewportRef\n      }, this.getModals().map(function (Modal) {\n        var modalId = getNavId(Modal.props, warn);\n        var _modalState = _this7.getModalState(modalId);\n        if (modalId !== activeModal && modalId !== exitingModal || !_modalState) {\n          return null;\n        }\n        var modalState = _objectSpread({}, _modalState);\n        var isPage = modalState.type === ModalType.PAGE;\n        var key = \"modal-\".concat(modalId);\n        return /*#__PURE__*/React.createElement(FocusTrap, {\n          key: key,\n          getRootRef: function getRootRef(e) {\n            var modalState = _this7.getModalState(modalId);\n            if (modalState) {\n              modalState.modalElement = e;\n            }\n          },\n          onClose: _this7.props.onExit,\n          timeout: _this7.timeout,\n          className: classNames(\"vkuiModalRoot__modal\", dragging && \"vkuiModalRoot__modal--dragging\", isPage && modalState.expandable && \"vkuiModalRoot__modal--expandable\", isPage && modalState.collapsed && \"vkuiModalRoot__modal--collapsed\"),\n          restoreFocus: false\n        }, Modal);\n      })))));\n    }\n  }]);\n  return ModalRootTouchComponent;\n}(React.Component);\nexport var ModalRootTouch = withContext(withPlatform(withDOM(withModalManager(initModal)(ModalRootTouchComponent))), ConfigProviderContext, 'configProvider');\n\n/**\n * Инициализирует модалку перед анимацией открытия\n */\nfunction initModal(modalState) {\n  switch (modalState.type) {\n    case ModalType.PAGE:\n      modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n      return initPageModal(modalState);\n    case ModalType.CARD:\n      return initCardModal(modalState);\n    default:\n      IS_DEV && warn(\"initActiveModal: modalState.type=\\\"\".concat(modalState.type, \"\\\" \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442\\u0441\\u044F\"), 'error');\n  }\n}\nfunction initPageModal(modalState) {\n  var _contentElement$clien;\n  var contentElement = modalState.contentElement;\n  var contentHeight = (contentElement === null || contentElement === void 0 ? void 0 : contentElement.firstElementChild).offsetHeight;\n  var prevTranslateY = modalState.translateY;\n  modalState.expandable = contentHeight > ((_contentElement$clien = contentElement === null || contentElement === void 0 ? void 0 : contentElement.clientHeight) !== null && _contentElement$clien !== void 0 ? _contentElement$clien : 0) || modalState.settlingHeight === 100;\n  var collapsed = false;\n  var expanded = false;\n  var translateYFrom;\n  var translateY;\n  var expandedRange;\n  var collapsedRange;\n  var hiddenRange;\n  if (modalState.expandable) {\n    var _modalState$settlingH;\n    translateYFrom = 100 - ((_modalState$settlingH = modalState.settlingHeight) !== null && _modalState$settlingH !== void 0 ? _modalState$settlingH : 0);\n    var shiftHalf = translateYFrom / 2;\n    var visiblePart = 100 - translateYFrom;\n    expandedRange = [0, shiftHalf];\n    collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n    hiddenRange = [translateYFrom + visiblePart / 4, 100];\n    collapsed = translateYFrom > 0;\n    expanded = translateYFrom <= 0;\n    translateY = translateYFrom;\n  } else {\n    var _modalState$headerEle2, _modalState$headerEle3, _modalState$innerElem5, _modalState$innerElem6, _modalState$innerElem7;\n    var headerHeight = (_modalState$headerEle2 = (_modalState$headerEle3 = modalState.headerElement) === null || _modalState$headerEle3 === void 0 ? void 0 : _modalState$headerEle3.offsetHeight) !== null && _modalState$headerEle2 !== void 0 ? _modalState$headerEle2 : 0;\n    var height = contentHeight + headerHeight;\n    translateYFrom = 100 - height / ((_modalState$innerElem5 = (_modalState$innerElem6 = modalState.innerElement) === null || _modalState$innerElem6 === void 0 ? void 0 : (_modalState$innerElem7 = _modalState$innerElem6.parentElement) === null || _modalState$innerElem7 === void 0 ? void 0 : _modalState$innerElem7.offsetHeight) !== null && _modalState$innerElem5 !== void 0 ? _modalState$innerElem5 : 0) * 100;\n    translateY = translateYFrom;\n    expandedRange = [translateY, translateY + 25];\n    collapsedRange = [translateY + 25, translateY + 25];\n    hiddenRange = [translateY + 25, translateY + 100];\n  }\n\n  // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n  if (modalState.expandable && translateY > (prevTranslateY !== null && prevTranslateY !== void 0 ? prevTranslateY : 100) || modalState.settlingHeight === 100) {\n    translateY = 0;\n  }\n\n  // Если модалка уже раскрыта обновляем состояния\n  if (translateY === 0) {\n    expanded = true;\n    collapsed = false;\n  }\n  modalState.expandedRange = expandedRange;\n  modalState.collapsedRange = collapsedRange;\n  modalState.hiddenRange = hiddenRange;\n  modalState.translateY = translateY;\n  modalState.translateYFrom = translateYFrom;\n  modalState.collapsed = collapsed;\n  modalState.expanded = expanded;\n}\nfunction initCardModal(modalState) {\n  modalState.translateY = 0;\n}","map":{"version":3,"names":["React","Touch","TouchRootContext","classNames","setTransformStyle","rubber","Platform","transitionEvent","withPlatform","withContext","ModalRootContext","ConfigProviderContext","WebviewType","ModalType","MODAL_PAGE_DEFAULT_PERCENT_HEIGHT","withDOM","getNavId","warnOnce","FocusTrap","withModalManager","clamp","warn","IS_DEV","process","env","NODE_ENV","numberInRange","number","range","rangeTranslate","ModalRootTouchComponent","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","createRef","undefined","event","originalEvent","preventDefault","modalState","getModalState","activeModal","animateTranslate","translateY","type","PAGE","dynamicContentHeight","enteringModal","waitTransitionFinish","requestAnimationFrame","checkPageContentHeight","e","exitingModal","onPageTouchMove","CARD","onCardTouchMove","onPageTouchEnd","onCardTouchEnd","_modalState$contentEl","target","contentElement","contains","contentScrolled","contentScrollStopTimeout","clearTimeout","setTimeout","state","touchDown","dragging","maskElementRef","modalRootContext","updateModalHeight","registerModal","_ref","_this$getModalState","id","data","_objectWithoutProperties","_excluded","Object","assign","onClose","onExit","isInsideModal","frameIds","_createClass","key","get","platform","IOS","document","window","value","getModals","Children","toArray","children","componentDidMount","_this$window","addEventListener","updateModalTranslate","componentWillUnmount","toggleDocumentScrolling","removeEventListener","componentDidUpdate","prevProps","_this2","closeModal","enteringState","onEnter","innerElement","style","transitionDelay","onEntered","delayEnter","concat","timeout","restoreFocusTo","activeElement","focus","enabled","documentScrolling","preventTouch","passive","modalElement","prevModalState","_objectSpread","initPageModal","currentModalState","needAnimate","expandable","translateYFrom","_this3","_prevModalState$trans","_nextModalState$trans","_nextModalState$trans2","setState","nextModalState","nextIsPage","prevIsPage","onExited","exitTranslate","isBack","setMaskOpacity","_modalState$innerElem","_modalState$headerEle","shiftY","isY","_this$viewportRef$cur","viewportRef","current","stopPropagation","collapsed","expanded","_modalState$contentEl2","_modalState$contentEl3","touchStartContentScrollTop","scrollTop","touchMovePositive","headerElement","_modalState$translate","shiftYPercent","innerHeight","shiftYCurrent","touchShiftYPercent","translateYCurrent","_modalState$innerElem2","_modalState$translate2","offsetHeight","Math","max","_this4","startY","setStateCallback","_modalState$translate3","_modalState$touchShif","shiftYEndPercent","expectTranslateY","duration","settlingHeight","expandedRange","_modalState$expandedR","_modalState$expandedR2","collapsedRange","_modalState$translate4","hiddenRange","_modalState$translate5","hidden","_ref2","_this5","_modalState$translate6","_modalState$touchShif2","eventHandler","supported","_modalState$innerElem4","onceHandler","_modalState$innerElem3","name","percent","frameId","cancelAnimationFrame","_this$props$history","_this6","forceOpacity","arguments","length","history","maskAnimationFrame","_modalState$translate7","_modalState$translate8","opacity","toString","render","_this$props$configPro","_this7","_this$props","_this$state","createElement","Provider","className","configProvider","webviewType","VKAPPS","onMove","onTouchMove","onEnd","onTouchEnd","onScroll","onClick","ref","map","Modal","modalId","_modalState","isPage","getRootRef","restoreFocus","Component","ModalRootTouch","initModal","initCardModal","_contentElement$clien","contentHeight","firstElementChild","prevTranslateY","clientHeight","_modalState$settlingH","shiftHalf","visiblePart","_modalState$headerEle2","_modalState$headerEle3","_modalState$innerElem5","_modalState$innerElem6","_modalState$innerElem7","headerHeight","height","parentElement"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\ModalRoot\\ModalRoot.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { classNames } from '@vkontakte/vkjs';\nimport { setTransformStyle } from '../../lib/styles';\nimport { rubber } from '../../lib/touch';\nimport { Platform } from '../../lib/platform';\nimport { transitionEvent } from '../../lib/supportEvents';\nimport { HasPlatform } from '../../types';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { withContext } from '../../hoc/withContext';\nimport { ModalRootContext, ModalRootContextInterface } from './ModalRootContext';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  WebviewType,\n} from '../ConfigProvider/ConfigProviderContext';\nimport { ModalsStateEntry, ModalType, TranslateRange } from './types';\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from './constants';\nimport { DOMProps, withDOM } from '../../lib/dom';\nimport { getNavId } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { ModalTransitionProps, withModalManager } from './useModalManager';\nimport { clamp } from '../../helpers/math';\nimport styles from './ModalRoot.module.css';\n\nconst warn = warnOnce('ModalRoot');\nconst IS_DEV = process.env.NODE_ENV === 'development';\n\nfunction numberInRange(number: number, range: TranslateRange | undefined) {\n  if (!range) {\n    return false;\n  }\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number: number) {\n  return clamp(number, 0, 98);\n}\n\nexport interface ModalRootProps extends HasPlatform {\n  activeModal?: string | null;\n\n  /**\n   * Будет вызвано при начале открытия активной модалки с её id\n   */\n  onOpen?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном открытии активной модалки с её id\n   */\n  onOpened?(modalId: string): void;\n\n  /**\n   * Будет вызвано при начале закрытия активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном закрытии активной модалки с её id\n   */\n  onClosed?(modalId: string): void;\n\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n  children?: React.ReactNode;\n}\n\ninterface ModalRootState {\n  touchDown?: boolean;\n  dragging?: boolean;\n}\n\nclass ModalRootTouchComponent extends React.Component<\n  ModalRootProps & DOMProps & ModalTransitionProps,\n  ModalRootState\n> {\n  constructor(props: ModalRootProps & ModalTransitionProps) {\n    super(props);\n    this.state = {\n      touchDown: false,\n      dragging: false,\n    };\n\n    this.maskElementRef = React.createRef();\n\n    this.modalRootContext = {\n      updateModalHeight: this.updateModalHeight,\n      registerModal: ({ id, ...data }) => Object.assign(this.getModalState(id) ?? {}, data),\n      onClose: () => this.props.onExit(),\n      isInsideModal: true,\n    };\n\n    this.frameIds = {};\n  }\n\n  private documentScrolling = false;\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private readonly viewportRef = React.createRef<HTMLDivElement>();\n  private maskAnimationFrame: number | undefined = undefined;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private readonly frameIds: {\n    [index: string]: number;\n  };\n  private restoreFocusTo: HTMLElement | undefined | null = undefined;\n\n  get timeout(): number {\n    return this.props.platform === Platform.IOS ? 400 : 320;\n  }\n\n  get document() {\n    return this.props.document;\n  }\n\n  get window() {\n    return this.props.window;\n  }\n\n  getModalState(id: string | undefined | null) {\n    if (!id) {\n      return undefined;\n    }\n    return this.props.getModalState(id);\n  }\n\n  getModals() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  componentDidMount() {\n    // Отслеживаем изменение размеров viewport (Необходимо для iOS)\n    if (this.props.platform === Platform.IOS) {\n      this.window?.addEventListener('resize', this.updateModalTranslate, false);\n    }\n  }\n\n  componentWillUnmount() {\n    this.toggleDocumentScrolling(true);\n    this.window!.removeEventListener('resize', this.updateModalTranslate, false);\n  }\n\n  componentDidUpdate(prevProps: ModalRootProps & ModalTransitionProps) {\n    // transition phase 2: animate exiting modal\n    if (this.props.exitingModal && this.props.exitingModal !== prevProps.exitingModal) {\n      this.closeModal(this.props.exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (this.props.enteringModal && this.props.enteringModal !== prevProps.enteringModal) {\n      const { enteringModal } = this.props;\n      const enteringState = this.getModalState(enteringModal);\n      this.props.onEnter();\n      this.waitTransitionFinish(enteringState, () => {\n        if (enteringState?.innerElement) {\n          enteringState.innerElement.style.transitionDelay = '';\n        }\n        this.props.onEntered(enteringModal);\n      });\n\n      if (enteringState?.innerElement) {\n        enteringState.innerElement.style.transitionDelay = this.props.delayEnter\n          ? `${this.timeout}ms`\n          : '';\n        this.animateTranslate(enteringState, enteringState.translateY);\n      }\n    }\n\n    // focus restoration\n    if (this.props.activeModal && !prevProps.activeModal) {\n      this.restoreFocusTo = this.document!.activeElement as HTMLElement;\n    }\n    if (!this.props.activeModal && !this.props.exitingModal && this.restoreFocusTo) {\n      this.restoreFocusTo.focus();\n      this.restoreFocusTo = null;\n    }\n\n    this.toggleDocumentScrolling(!this.props.activeModal && !this.props.exitingModal);\n  }\n\n  /* Отключает скролл документа */\n  toggleDocumentScrolling(enabled: boolean) {\n    if (this.documentScrolling === enabled) {\n      return;\n    }\n    this.documentScrolling = enabled;\n\n    if (enabled) {\n      // Здесь нужен последний аргумент с такими же параметрами, потому что\n      // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n      // https://github.com/VKCOM/VKUI/issues/444\n      this.window!.removeEventListener('touchmove', this.preventTouch, {\n        // @ts-expect-error: TS2769 В интерфейсе EventListenerOptions нет поля passive\n        passive: false,\n      });\n    } else {\n      this.window!.addEventListener('touchmove', this.preventTouch, {\n        passive: false,\n      });\n    }\n  }\n\n  preventTouch = (event: any) => {\n    if (!event) {\n      return false;\n    }\n    while (event.originalEvent) {\n      event = event.originalEvent;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    return false;\n  };\n\n  updateModalTranslate = () => {\n    const modalState = this.getModalState(this.props.activeModal);\n    modalState && this.animateTranslate(modalState, modalState.translateY);\n  };\n\n  checkPageContentHeight() {\n    const modalState = this.getModalState(this.props.activeModal);\n\n    if (modalState?.type === ModalType.PAGE && modalState?.modalElement) {\n      const prevModalState = { ...modalState };\n      initPageModal(modalState);\n      const currentModalState = { ...modalState };\n\n      let needAnimate = false;\n\n      if (prevModalState.expandable === currentModalState.expandable) {\n        if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {\n          needAnimate = true;\n        }\n      } else {\n        needAnimate = true;\n      }\n\n      if (needAnimate) {\n        this.animateTranslate(modalState, modalState.translateY);\n      }\n    }\n  }\n\n  updateModalHeight = () => {\n    const modalState = this.getModalState(this.props.activeModal);\n\n    if (modalState && modalState.type === ModalType.PAGE && modalState.dynamicContentHeight) {\n      if (this.props.enteringModal) {\n        this.waitTransitionFinish(modalState, () => {\n          requestAnimationFrame(() => this.checkPageContentHeight());\n        });\n      } else {\n        requestAnimationFrame(() => this.checkPageContentHeight());\n      }\n    }\n  };\n\n  closeModal(id: string) {\n    // Сбрасываем состояния, которые могут помешать закрытию модального окна\n    this.setState({ touchDown: false });\n\n    const prevModalState = this.getModalState(id);\n\n    if (!prevModalState) {\n      id && warn(`closeActiveModal: модальное окно (страница) ${id} не существует`, 'error');\n      return;\n    }\n\n    const nextModalState = this.getModalState(this.props.activeModal);\n    const nextIsPage = !!nextModalState && nextModalState.type === ModalType.PAGE;\n\n    const prevIsPage = !!prevModalState && prevModalState.type === ModalType.PAGE;\n    this.waitTransitionFinish(prevModalState, () => this.props.onExited(id));\n    const exitTranslate =\n      prevIsPage &&\n      nextIsPage &&\n      (prevModalState.translateY ?? 0) <= (nextModalState?.translateYFrom ?? 0) &&\n      !this.props.isBack\n        ? (nextModalState?.translateYFrom ?? 0) + 10\n        : 100;\n    this.animateTranslate(prevModalState, exitTranslate);\n\n    if (!nextModalState) {\n      // NOTE: was only for clean exit\n      this.setMaskOpacity(prevModalState, 0);\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    if (this.props.exitingModal) {\n      return;\n    }\n    const modalState = this.getModalState(this.props.activeModal);\n    if (!modalState) {\n      return;\n    }\n\n    if (modalState.type === ModalType.PAGE) {\n      return this.onPageTouchMove(e, modalState);\n    }\n\n    if (modalState.type === ModalType.CARD) {\n      return this.onCardTouchMove(e, modalState);\n    }\n  };\n\n  onPageTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { shiftY, originalEvent } = event;\n    const target = originalEvent.target as HTMLElement;\n\n    if (!event.isY) {\n      if (this.viewportRef.current?.contains(target)) {\n        originalEvent.preventDefault();\n      }\n      return;\n    }\n\n    if (!modalState.innerElement?.contains(target)) {\n      return originalEvent.preventDefault();\n    }\n\n    originalEvent.stopPropagation();\n\n    const { expandable, contentScrolled, collapsed, expanded } = modalState;\n\n    if (!this.state.touchDown) {\n      modalState.touchStartContentScrollTop = modalState.contentElement?.scrollTop ?? 0;\n      this.setState({ touchDown: true });\n    }\n\n    if (contentScrolled) {\n      return;\n    }\n\n    if (modalState.touchMovePositive === null) {\n      modalState.touchMovePositive = shiftY > 0;\n    }\n\n    if (\n      !modalState.expandable ||\n      collapsed ||\n      (expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0) ||\n      modalState.headerElement?.contains(target)\n    ) {\n      originalEvent.preventDefault();\n\n      if ((!expandable && shiftY < 0) || !this.window) {\n        return;\n      }\n\n      !this.state.dragging && this.setState({ dragging: true });\n\n      const shiftYPercent = (shiftY / this.window.innerHeight) * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform !== Platform.IOS);\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = rangeTranslate((modalState.translateY ?? 0) + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onCardTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { originalEvent, shiftY } = event;\n    const target = originalEvent.target as HTMLElement;\n    if (modalState.innerElement?.contains(target)) {\n      if (!this.state.touchDown) {\n        this.setState({ touchDown: true, dragging: true });\n      }\n\n      const shiftYPercent = (shiftY / modalState.innerElement.offsetHeight) * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform !== Platform.IOS);\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = Math.max(0, (modalState.translateY ?? 0) + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onTouchEnd = (e: TouchEvent) => {\n    const modalState = this.getModalState(this.props.activeModal);\n\n    if (modalState?.type === ModalType.PAGE) {\n      return this.onPageTouchEnd(e, modalState);\n    }\n\n    if (modalState?.type === ModalType.CARD) {\n      return this.onCardTouchEnd(e, modalState);\n    }\n  };\n\n  onPageTouchEnd(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { startY, shiftY } = event;\n\n    modalState.contentScrolled = false;\n    modalState.touchMovePositive = null;\n\n    let setStateCallback;\n\n    if (this.state.dragging && this.window) {\n      const shiftYEndPercent = ((startY + shiftY) / this.window.innerHeight) * 100;\n\n      let translateY = modalState.translateYCurrent ?? 0;\n      const expectTranslateY =\n        (translateY / event.duration) *\n        240 *\n        0.6 *\n        ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = rangeTranslate(translateY + expectTranslateY);\n\n      if (modalState.settlingHeight !== 100) {\n        if (numberInRange(translateY, modalState.expandedRange)) {\n          translateY = modalState.expandedRange?.[0] ?? 0;\n        } else if (numberInRange(translateY, modalState.collapsedRange)) {\n          translateY = modalState.translateYFrom ?? 0;\n        } else if (numberInRange(translateY, modalState.hiddenRange)) {\n          translateY = 100;\n        } else {\n          translateY = modalState.translateYFrom ?? 0;\n        }\n      } else {\n        if (numberInRange(translateY, [0, 25])) {\n          translateY = 0;\n        } else {\n          translateY = 100;\n        }\n      }\n\n      if (translateY !== 100 && shiftYEndPercent >= 75) {\n        translateY = 100;\n      }\n\n      modalState.translateY = translateY;\n      modalState.translateYCurrent = translateY;\n      modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n      modalState.expanded = translateY === 0;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback,\n    );\n  }\n\n  onCardTouchEnd({ duration }: TouchEvent, modalState: ModalsStateEntry) {\n    let setStateCallback;\n\n    if (this.state.dragging) {\n      let translateY = modalState.translateYCurrent ?? 0;\n\n      const expectTranslateY =\n        (translateY / duration) * 240 * 0.6 * ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = Math.max(0, translateY + expectTranslateY);\n\n      if (translateY >= 30) {\n        translateY = 100;\n      } else {\n        translateY = 0;\n      }\n\n      modalState.translateY = translateY;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback,\n    );\n  }\n\n  onScroll = (e: React.SyntheticEvent) => {\n    const activeModal = this.props.activeModal;\n\n    const target = e.target as HTMLElement;\n\n    if (!activeModal) {\n      return;\n    }\n    const modalState = this.getModalState(activeModal);\n    if (modalState?.type === ModalType.PAGE && modalState?.contentElement?.contains(target)) {\n      modalState.contentScrolled = true;\n\n      if (modalState.contentScrollStopTimeout) {\n        clearTimeout(modalState.contentScrollStopTimeout);\n      }\n\n      modalState.contentScrollStopTimeout = setTimeout(() => {\n        if (modalState.contentScrolled) {\n          modalState.contentScrolled = false;\n        }\n      }, 250);\n    }\n  };\n\n  waitTransitionFinish(modalState: ModalsStateEntry | undefined, eventHandler: () => void) {\n    if (transitionEvent.supported) {\n      const onceHandler = () => {\n        modalState?.innerElement?.removeEventListener(transitionEvent.name as string, onceHandler);\n        eventHandler();\n      };\n\n      modalState?.innerElement?.addEventListener(transitionEvent.name as string, onceHandler);\n    } else {\n      setTimeout(eventHandler, this.timeout);\n    }\n  }\n\n  /**\n   * Анимирует сдвиг модалки\n   *\n   * @param {ModalsStateEntry} modalState\n   * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n   */\n  animateTranslate(modalState: ModalsStateEntry, percent: number | undefined) {\n    const frameId = `animateTranslateFrame${modalState.id}`;\n\n    cancelAnimationFrame(this.frameIds[frameId]);\n\n    this.frameIds[frameId] = requestAnimationFrame(() => {\n      setTransformStyle(modalState.innerElement, `translate3d(0, ${percent}%, 0)`);\n    });\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(modalState: ModalsStateEntry, forceOpacity: number | null = null) {\n    if (forceOpacity === null && this.props.history?.[0] !== modalState.id) {\n      return;\n    }\n    if (this.maskAnimationFrame) {\n      cancelAnimationFrame(this.maskAnimationFrame);\n    }\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        this.maskElementRef.current.style.opacity = clamp(opacity, 0, 100).toString();\n      }\n    });\n  }\n\n  render() {\n    const { activeModal, exitingModal, enteringModal } = this.props;\n    const { touchDown, dragging } = this.state;\n\n    if (!activeModal && !exitingModal) {\n      return null;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <ModalRootContext.Provider value={this.modalRootContext}>\n          <Touch\n            className={classNames(\n              styles['ModalRoot'],\n              this.props.configProvider?.webviewType === WebviewType.VKAPPS &&\n                styles['ModalRoot--vkapps'],\n              touchDown && styles['ModalRoot--touched'],\n              !!(enteringModal || exitingModal) && styles['ModalRoot--switching'],\n            )}\n            onMove={this.onTouchMove}\n            onEnd={this.onTouchEnd}\n            onScroll={this.onScroll}\n          >\n            <div\n              className={styles['ModalRoot__mask']}\n              onClick={this.props.onExit}\n              ref={this.maskElementRef}\n            />\n            <div className={styles['ModalRoot__viewport']} ref={this.viewportRef}>\n              {this.getModals().map((Modal) => {\n                const modalId = getNavId(Modal.props, warn);\n                const _modalState = this.getModalState(modalId);\n                if ((modalId !== activeModal && modalId !== exitingModal) || !_modalState) {\n                  return null;\n                }\n                const modalState = { ..._modalState };\n\n                const isPage = modalState.type === ModalType.PAGE;\n                const key = `modal-${modalId}`;\n\n                return (\n                  <FocusTrap\n                    key={key}\n                    getRootRef={(e) => {\n                      const modalState = this.getModalState(modalId);\n                      if (modalState) {\n                        modalState.modalElement = e;\n                      }\n                    }}\n                    onClose={this.props.onExit}\n                    timeout={this.timeout}\n                    className={classNames(\n                      styles['ModalRoot__modal'],\n\n                      dragging && styles['ModalRoot__modal--dragging'],\n\n                      isPage && modalState.expandable && styles['ModalRoot__modal--expandable'],\n                      isPage && modalState.collapsed && styles['ModalRoot__modal--collapsed'],\n                    )}\n                    restoreFocus={false}\n                  >\n                    {Modal}\n                  </FocusTrap>\n                );\n              })}\n            </div>\n          </Touch>\n        </ModalRootContext.Provider>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootTouch = withContext(\n  withPlatform(withDOM<ModalRootProps>(withModalManager(initModal)(ModalRootTouchComponent))),\n  ConfigProviderContext,\n  'configProvider',\n);\n\n/**\n * Инициализирует модалку перед анимацией открытия\n */\nfunction initModal(modalState: ModalsStateEntry) {\n  switch (modalState.type) {\n    case ModalType.PAGE:\n      modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n      return initPageModal(modalState);\n    case ModalType.CARD:\n      return initCardModal(modalState);\n    default:\n      IS_DEV &&\n        warn(`initActiveModal: modalState.type=\"${modalState.type}\" не поддерживается`, 'error');\n  }\n}\n\nfunction initPageModal(modalState: ModalsStateEntry) {\n  const { contentElement } = modalState;\n  const contentHeight = (contentElement?.firstElementChild as HTMLElement).offsetHeight;\n\n  let prevTranslateY = modalState.translateY;\n\n  modalState.expandable =\n    contentHeight > (contentElement?.clientHeight ?? 0) || modalState.settlingHeight === 100;\n\n  let collapsed = false;\n  let expanded = false;\n  let translateYFrom;\n  let translateY;\n  let expandedRange: TranslateRange;\n  let collapsedRange: TranslateRange;\n  let hiddenRange: TranslateRange;\n\n  if (modalState.expandable) {\n    translateYFrom = 100 - (modalState.settlingHeight ?? 0);\n\n    const shiftHalf = translateYFrom / 2;\n    const visiblePart = 100 - translateYFrom;\n\n    expandedRange = [0, shiftHalf];\n    collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n    hiddenRange = [translateYFrom + visiblePart / 4, 100];\n\n    collapsed = translateYFrom > 0;\n    expanded = translateYFrom <= 0;\n    translateY = translateYFrom;\n  } else {\n    const headerHeight = modalState.headerElement?.offsetHeight ?? 0;\n    const height = contentHeight + headerHeight;\n\n    translateYFrom =\n      100 - (height / (modalState.innerElement?.parentElement?.offsetHeight ?? 0)) * 100;\n    translateY = translateYFrom;\n\n    expandedRange = [translateY, translateY + 25];\n    collapsedRange = [translateY + 25, translateY + 25];\n    hiddenRange = [translateY + 25, translateY + 100];\n  }\n\n  // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n  if (\n    (modalState.expandable && translateY > (prevTranslateY ?? 100)) ||\n    modalState.settlingHeight === 100\n  ) {\n    translateY = 0;\n  }\n\n  // Если модалка уже раскрыта обновляем состояния\n  if (translateY === 0) {\n    expanded = true;\n    collapsed = false;\n  }\n\n  modalState.expandedRange = expandedRange;\n  modalState.collapsedRange = collapsedRange;\n  modalState.hiddenRange = hiddenRange;\n  modalState.translateY = translateY;\n  modalState.translateYFrom = translateYFrom;\n  modalState.collapsed = collapsed;\n  modalState.expanded = expanded;\n}\n\nfunction initCardModal(modalState: ModalsStateEntry) {\n  modalState.translateY = 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}