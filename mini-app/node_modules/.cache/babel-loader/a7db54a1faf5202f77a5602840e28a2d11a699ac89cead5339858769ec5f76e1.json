{"ast":null,"code":"import * as React from 'react';\nimport { ModalRootTouch } from './ModalRoot';\nimport { ModalRootDesktop } from './ModalRootDesktop';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalRoot\n */\nexport var ModalRoot = function ModalRoot(props) {\n  var _useAdaptivityWithJSM = useAdaptivityWithJSMediaQueries(),\n    isDesktop = _useAdaptivityWithJSM.isDesktop;\n  useScrollLock(!!props.activeModal);\n  var RootComponent = isDesktop ? ModalRootDesktop : ModalRootTouch;\n  return /*#__PURE__*/React.createElement(RootComponent, props);\n};","map":{"version":3,"names":["React","ModalRootTouch","ModalRootDesktop","useScrollLock","useAdaptivityWithJSMediaQueries","ModalRoot","props","_useAdaptivityWithJSM","isDesktop","activeModal","RootComponent","createElement"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\ModalRoot\\ModalRootAdaptive.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ModalRootTouch } from './ModalRoot';\nimport { ModalRootDesktop } from './ModalRootDesktop';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\n\nexport interface ModalRootProps {\n  activeModal?: string | null;\n\n  /**\n   * Будет вызвано при начале открытия активной модалки с её id\n   */\n  onOpen?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном открытии активной модалки с её id\n   */\n  onOpened?(modalId: string): void;\n\n  /**\n   * Будет вызвано при начале закрытия активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном закрытии активной модалки с её id\n   */\n  onClosed?(modalId: string): void;\n  children?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalRoot\n */\nexport const ModalRoot = (props: ModalRootProps) => {\n  const { isDesktop } = useAdaptivityWithJSMediaQueries();\n\n  useScrollLock(!!props.activeModal);\n\n  const RootComponent = isDesktop ? ModalRootDesktop : ModalRootTouch;\n\n  return <RootComponent {...props} />;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAAQ,aAAa;AAC5C,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,+BAA+B,QAAQ,6CAA6C;AA2B7F;AACA;AACA;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,KAAqB,EAAK;EAClD,IAAAC,qBAAA,GAAsBH,+BAA+B,EAAE;IAA/CI,SAAS,GAAAD,qBAAA,CAATC,SAAS;EAEjBL,aAAa,CAAC,CAAC,CAACG,KAAK,CAACG,WAAW,CAAC;EAElC,IAAMC,aAAa,GAAGF,SAAS,GAAGN,gBAAgB,GAAGD,cAAc;EAEnE,oBAAOD,KAAA,CAAAW,aAAA,CAACD,aAAa,EAAKJ,KAAK,CAAI;AACrC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}