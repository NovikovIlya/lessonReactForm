{"ast":null,"code":"import * as React from 'react';\nimport { AdaptivityContext } from '../../components/AdaptivityProvider/AdaptivityContext';\nimport { usePlatform } from '../usePlatform';\nimport { sizeXCompactClassNames, sizeXRegularClassNames, sizeYCompactClassNames, sizeYRegularClassNames, viewWidthClassNames, deviceTypeClassNames } from './constants';\nimport { getAdaptiveSizeType, getAdaptiveViewWidth, getAdaptiveDeviceType } from './helpers';\nexport var useAdaptivityConditionalRender = function useAdaptivityConditionalRender() {\n  var _React$useContext = React.useContext(AdaptivityContext),\n    sizeXContext = _React$useContext.sizeX,\n    sizeYContext = _React$useContext.sizeY,\n    viewWidthContext = _React$useContext.viewWidth,\n    viewHeightContext = _React$useContext.viewHeight,\n    hasPointerContext = _React$useContext.hasPointer;\n  var platform = usePlatform();\n  return React.useMemo(function () {\n    var sizeX = getAdaptiveSizeType(sizeXContext, sizeXCompactClassNames, sizeXRegularClassNames);\n    var sizeY = getAdaptiveSizeType(sizeYContext, sizeYCompactClassNames, sizeYRegularClassNames);\n    var viewWidth = getAdaptiveViewWidth(viewWidthContext, viewWidthClassNames);\n    var deviceType = getAdaptiveDeviceType(viewWidthContext, viewHeightContext, hasPointerContext, platform, deviceTypeClassNames);\n    return {\n      sizeX: sizeX,\n      sizeY: sizeY,\n      viewWidth: viewWidth,\n      deviceType: deviceType\n    };\n  }, [sizeXContext, sizeYContext, viewWidthContext, viewHeightContext, hasPointerContext, platform]);\n};","map":{"version":3,"names":["React","AdaptivityContext","usePlatform","sizeXCompactClassNames","sizeXRegularClassNames","sizeYCompactClassNames","sizeYRegularClassNames","viewWidthClassNames","deviceTypeClassNames","getAdaptiveSizeType","getAdaptiveViewWidth","getAdaptiveDeviceType","useAdaptivityConditionalRender","_React$useContext","useContext","sizeXContext","sizeX","sizeYContext","sizeY","viewWidthContext","viewWidth","viewHeightContext","viewHeight","hasPointerContext","hasPointer","platform","useMemo","deviceType"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useAdaptivityConditionalRender\\useAdaptivityConditionalRender.tsx"],"sourcesContent":["import * as React from 'react';\nimport { AdaptivityContext } from '../../components/AdaptivityProvider/AdaptivityContext';\nimport { usePlatform } from '../usePlatform';\nimport type { UseAdaptivityConditionalRender } from './types';\nimport {\n  sizeXCompactClassNames,\n  sizeXRegularClassNames,\n  sizeYCompactClassNames,\n  sizeYRegularClassNames,\n  viewWidthClassNames,\n  deviceTypeClassNames,\n} from './constants';\nimport { getAdaptiveSizeType, getAdaptiveViewWidth, getAdaptiveDeviceType } from './helpers';\n\nexport const useAdaptivityConditionalRender = (): UseAdaptivityConditionalRender => {\n  const {\n    sizeX: sizeXContext,\n    sizeY: sizeYContext,\n    viewWidth: viewWidthContext,\n    viewHeight: viewHeightContext,\n    hasPointer: hasPointerContext,\n  } = React.useContext(AdaptivityContext);\n  const platform = usePlatform();\n\n  return React.useMemo(() => {\n    const sizeX = getAdaptiveSizeType(sizeXContext, sizeXCompactClassNames, sizeXRegularClassNames);\n    const sizeY = getAdaptiveSizeType(sizeYContext, sizeYCompactClassNames, sizeYRegularClassNames);\n    const viewWidth = getAdaptiveViewWidth(viewWidthContext, viewWidthClassNames);\n    const deviceType = getAdaptiveDeviceType(\n      viewWidthContext,\n      viewHeightContext,\n      hasPointerContext,\n      platform,\n      deviceTypeClassNames,\n    );\n    return {\n      sizeX,\n      sizeY,\n      viewWidth,\n      deviceType,\n    };\n  }, [\n    sizeXContext,\n    sizeYContext,\n    viewWidthContext,\n    viewHeightContext,\n    hasPointerContext,\n    platform,\n  ]);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,iBAAiB,QAAQ,uDAAuD;AACzF,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SACEC,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAmB,EACnBC,oBAAoB,QACf,aAAa;AACpB,SAASC,mBAAmB,EAAEC,oBAAoB,EAAEC,qBAAqB,QAAQ,WAAW;AAE5F,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAA8BA,CAAA,EAAyC;EAClF,IAAAC,iBAAA,GAMIb,KAAK,CAACc,UAAU,CAACb,iBAAiB,CAAC;IAL9Bc,YAAY,GAAAF,iBAAA,CAAnBG,KAAK;IACEC,YAAY,GAAAJ,iBAAA,CAAnBK,KAAK;IACMC,gBAAgB,GAAAN,iBAAA,CAA3BO,SAAS;IACGC,iBAAiB,GAAAR,iBAAA,CAA7BS,UAAU;IACEC,iBAAiB,GAAAV,iBAAA,CAA7BW,UAAU;EAEZ,IAAMC,QAAQ,GAAGvB,WAAW,EAAE;EAE9B,OAAOF,KAAK,CAAC0B,OAAO,CAAC,YAAM;IACzB,IAAMV,KAAK,GAAGP,mBAAmB,CAACM,YAAY,EAAEZ,sBAAsB,EAAEC,sBAAsB,CAAC;IAC/F,IAAMc,KAAK,GAAGT,mBAAmB,CAACQ,YAAY,EAAEZ,sBAAsB,EAAEC,sBAAsB,CAAC;IAC/F,IAAMc,SAAS,GAAGV,oBAAoB,CAACS,gBAAgB,EAAEZ,mBAAmB,CAAC;IAC7E,IAAMoB,UAAU,GAAGhB,qBAAqB,CACtCQ,gBAAgB,EAChBE,iBAAiB,EACjBE,iBAAiB,EACjBE,QAAQ,EACRjB,oBAAoB,CACrB;IACD,OAAO;MACLQ,KAAK,EAALA,KAAK;MACLE,KAAK,EAALA,KAAK;MACLE,SAAS,EAATA,SAAS;MACTO,UAAU,EAAVA;IACF,CAAC;EACH,CAAC,EAAE,CACDZ,YAAY,EACZE,YAAY,EACZE,gBAAgB,EAChBE,iBAAiB,EACjBE,iBAAiB,EACjBE,QAAQ,CACT,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}