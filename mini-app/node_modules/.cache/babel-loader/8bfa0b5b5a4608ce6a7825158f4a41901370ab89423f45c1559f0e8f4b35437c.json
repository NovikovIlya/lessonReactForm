{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"value\", \"label\"],\n  _excluded2 = [\"style\", \"className\", \"getRootRef\", \"value\", \"onChange\", \"onInputChange\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"children\", \"inputValue\", \"getRef\", \"placeholder\", \"getOptionValue\", \"getOptionLabel\", \"getNewOptionData\", \"renderChip\", \"inputAriaLabel\"];\nimport * as React from 'react';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { Chip } from '../Chip/Chip';\nimport { useChipsInput } from '../../hooks/useChipsInput';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nexport var chipsInputDefaultProps = {\n  onChange: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onBlur: noop,\n  onFocus: noop,\n  value: [],\n  inputValue: '',\n  inputAriaLabel: 'Введите ваше значение...',\n  getOptionValue: function getOptionValue(option) {\n    return option.value;\n  },\n  getOptionLabel: function getOptionLabel(option) {\n    return option.label;\n  },\n  getNewOptionData: function getNewOptionData(_, label) {\n    return {\n      value: label,\n      label: label\n    };\n  },\n  renderChip: function renderChip(props) {\n    if (!props) {\n      return null;\n    }\n    var disabled = props.disabled,\n      value = props.value,\n      label = props.label,\n      rest = _objectWithoutProperties(props, _excluded);\n    return /*#__PURE__*/React.createElement(Chip, _extends({\n      value: value,\n      removable: !disabled\n    }, rest), label);\n  }\n};\nexport var ChipsInputBase = function ChipsInputBase(props) {\n  var propsWithDefault = _objectSpread(_objectSpread({}, chipsInputDefaultProps), props);\n  var style = propsWithDefault.style,\n    className = propsWithDefault.className,\n    getRootRef = propsWithDefault.getRootRef,\n    value = propsWithDefault.value,\n    onChange = propsWithDefault.onChange,\n    onInputChange = propsWithDefault.onInputChange,\n    onKeyDown = propsWithDefault.onKeyDown,\n    onBlur = propsWithDefault.onBlur,\n    onFocus = propsWithDefault.onFocus,\n    children = propsWithDefault.children,\n    inputValue = propsWithDefault.inputValue,\n    getRef = propsWithDefault.getRef,\n    placeholder = propsWithDefault.placeholder,\n    getOptionValue = propsWithDefault.getOptionValue,\n    getOptionLabel = propsWithDefault.getOptionLabel,\n    getNewOptionData = propsWithDefault.getNewOptionData,\n    renderChip = propsWithDefault.renderChip,\n    inputAriaLabel = propsWithDefault.inputAriaLabel,\n    restProps = _objectWithoutProperties(propsWithDefault, _excluded2);\n  var _useAdaptivity = useAdaptivity(),\n    sizeY = _useAdaptivity.sizeY;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focused = _React$useState2[0],\n    setFocused = _React$useState2[1];\n  var _useChipsInput = useChipsInput(propsWithDefault),\n    fieldValue = _useChipsInput.fieldValue,\n    addOptionFromInput = _useChipsInput.addOptionFromInput,\n    removeOption = _useChipsInput.removeOption,\n    selectedOptions = _useChipsInput.selectedOptions,\n    handleInputChange = _useChipsInput.handleInputChange;\n  var inputRef = useExternRef(getRef);\n  var isDisabled = restProps.disabled || restProps.readOnly;\n  var handleKeyDown = function handleKeyDown(e) {\n    if (isDisabled) {\n      e.preventDefault();\n      return;\n    }\n    onKeyDown(e);\n    if (e.key === 'Backspace' && !e.defaultPrevented && !fieldValue && selectedOptions.length) {\n      removeOption(getOptionValue(selectedOptions[selectedOptions.length - 1]));\n      e.preventDefault();\n    }\n    if (e.key === 'Enter' && !e.defaultPrevented && fieldValue) {\n      addOptionFromInput();\n      e.preventDefault();\n    }\n  };\n  var handleBlur = function handleBlur(e) {\n    if (focused) {\n      setFocused(false);\n    }\n    onBlur(e);\n  };\n  var handleFocus = function handleFocus(e) {\n    if (!focused) {\n      setFocused(true);\n    }\n    onFocus(e);\n  };\n  var handleChipRemove = function handleChipRemove(_, value) {\n    if (value !== undefined) {\n      removeOption(value);\n    }\n  };\n  var handleClick = function handleClick(e) {\n    if (isDisabled) {\n      e.preventDefault();\n      return;\n    }\n    if ((inputRef === null || inputRef === void 0 ? void 0 : inputRef.current) !== null && !focused) {\n      inputRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleClick,\n    role: \"presentation\",\n    style: style,\n    className: classNames(\"vkuiChipsInputBase\", getSizeYClassName(\"vkuiChipsInputBase\", sizeY), className),\n    ref: getRootRef\n  }, selectedOptions.map(function (option) {\n    var value = getOptionValue(option);\n    var label = getOptionLabel(option);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"\".concat(_typeof(value), \"-\").concat(value)\n    }, renderChip({\n      option: option,\n      value: value,\n      label: label,\n      onRemove: handleChipRemove,\n      disabled: Boolean(restProps.disabled),\n      className: \"vkuiChipsInputBase__chip\"\n    }));\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"vkuiChipsInputBase__label\",\n    \"aria-label\": inputAriaLabel\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"text\",\n    autoCapitalize: \"none\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    spellCheck: false,\n    \"aria-autocomplete\": \"list\",\n    className: \"vkuiChipsInputBase__el\"\n  }, restProps, {\n    ref: inputRef,\n    value: fieldValue,\n    onChange: handleInputChange,\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    placeholder: selectedOptions.length ? undefined : placeholder\n  }))));\n};","map":{"version":3,"names":["React","getSizeYClassName","classNames","noop","Chip","useChipsInput","useAdaptivity","useExternRef","chipsInputDefaultProps","onChange","onInputChange","onKeyDown","onBlur","onFocus","value","inputValue","inputAriaLabel","getOptionValue","option","getOptionLabel","label","getNewOptionData","_","renderChip","props","disabled","rest","_objectWithoutProperties","_excluded","createElement","_extends","removable","ChipsInputBase","propsWithDefault","_objectSpread","style","className","getRootRef","children","getRef","placeholder","restProps","_excluded2","_useAdaptivity","sizeY","_React$useState","useState","_React$useState2","_slicedToArray","focused","setFocused","_useChipsInput","fieldValue","addOptionFromInput","removeOption","selectedOptions","handleInputChange","inputRef","isDisabled","readOnly","handleKeyDown","e","preventDefault","key","defaultPrevented","length","handleBlur","handleFocus","handleChipRemove","undefined","handleClick","current","focus","onClick","role","ref","map","Fragment","concat","_typeof","onRemove","Boolean","type","autoCapitalize","autoComplete","autoCorrect","spellCheck"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\ChipsInputBase\\ChipsInputBase.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport { HasAlign, HasRef, HasRootRef } from '../../types';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { Chip, ChipOption, ChipValue, RenderChip } from '../Chip/Chip';\nimport { useChipsInput } from '../../hooks/useChipsInput';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport styles from './ChipsInputBase.module.css';\n\nexport interface ChipsInputBaseProps<Option extends ChipOption>\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value' | 'onChange'>,\n    HasRef<HTMLInputElement>,\n    HasRootRef<HTMLDivElement>,\n    HasAlign {\n  value: Option[];\n  inputValue?: string;\n  onChange?: (o: Option[]) => void;\n  onInputChange?: (e?: React.ChangeEvent<HTMLInputElement>) => void;\n  getOptionValue?: (o?: Option) => ChipValue;\n  getOptionLabel?: (o?: Option) => string;\n  getNewOptionData?: (v?: ChipValue, l?: string) => Option;\n  renderChip?: (props?: RenderChip<Option>) => React.ReactNode;\n  inputAriaLabel?: string;\n}\n\nexport const chipsInputDefaultProps: ChipsInputBaseProps<any> = {\n  onChange: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onBlur: noop,\n  onFocus: noop,\n  value: [],\n  inputValue: '',\n  inputAriaLabel: 'Введите ваше значение...',\n  getOptionValue: (option) => option.value,\n  getOptionLabel: (option) => option.label,\n  getNewOptionData: (_, label) => ({\n    value: label,\n    label,\n  }),\n  renderChip(props) {\n    if (!props) {\n      return null;\n    }\n\n    const { disabled, value, label, ...rest } = props;\n    return (\n      <Chip value={value} removable={!disabled} {...rest}>\n        {label}\n      </Chip>\n    );\n  },\n};\n\nexport const ChipsInputBase = <Option extends ChipOption>(props: ChipsInputBaseProps<Option>) => {\n  const propsWithDefault = { ...chipsInputDefaultProps, ...props };\n  const {\n    style,\n    className,\n    getRootRef,\n    value,\n    onChange,\n    onInputChange,\n    onKeyDown,\n    onBlur,\n    onFocus,\n    children,\n    inputValue,\n    getRef,\n    placeholder,\n    getOptionValue,\n    getOptionLabel,\n    getNewOptionData,\n    renderChip,\n    inputAriaLabel,\n    ...restProps\n  } = propsWithDefault;\n  const { sizeY } = useAdaptivity();\n\n  const [focused, setFocused] = React.useState(false);\n  const { fieldValue, addOptionFromInput, removeOption, selectedOptions, handleInputChange } =\n    useChipsInput(propsWithDefault);\n  const inputRef = useExternRef(getRef);\n\n  const isDisabled = restProps.disabled || restProps.readOnly;\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (isDisabled) {\n      e.preventDefault();\n      return;\n    }\n\n    onKeyDown!(e);\n\n    if (e.key === 'Backspace' && !e.defaultPrevented && !fieldValue && selectedOptions.length) {\n      removeOption(getOptionValue!(selectedOptions[selectedOptions.length - 1]));\n      e.preventDefault();\n    }\n\n    if (e.key === 'Enter' && !e.defaultPrevented && fieldValue) {\n      addOptionFromInput();\n      e.preventDefault();\n    }\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (focused) {\n      setFocused(false);\n    }\n    onBlur!(e);\n  };\n\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (!focused) {\n      setFocused(true);\n    }\n    onFocus!(e);\n  };\n\n  const handleChipRemove = (_: React.MouseEvent | undefined, value: ChipValue | undefined) => {\n    if (value !== undefined) {\n      removeOption(value);\n    }\n  };\n\n  const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (isDisabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (inputRef?.current !== null && !focused) {\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <div\n      onClick={handleClick}\n      role=\"presentation\"\n      style={style}\n      className={classNames(\n        styles['ChipsInputBase'],\n        getSizeYClassName(styles['ChipsInputBase'], sizeY),\n        className,\n      )}\n      ref={getRootRef}\n    >\n      {selectedOptions.map((option: Option) => {\n        const value = getOptionValue!(option);\n        const label = getOptionLabel!(option);\n\n        return (\n          <React.Fragment key={`${typeof value}-${value}`}>\n            {renderChip!({\n              option,\n              value,\n              label,\n              onRemove: handleChipRemove,\n              disabled: Boolean(restProps.disabled),\n              className: styles['ChipsInputBase__chip'],\n            })}\n          </React.Fragment>\n        );\n      })}\n      <label className={styles['ChipsInputBase__label']} aria-label={inputAriaLabel}>\n        <input\n          type=\"text\"\n          autoCapitalize=\"none\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          spellCheck={false}\n          aria-autocomplete=\"list\"\n          className={styles['ChipsInputBase__el']}\n          {...restProps}\n          ref={inputRef}\n          value={fieldValue}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          placeholder={selectedOptions.length ? undefined : placeholder}\n        />\n      </label>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}