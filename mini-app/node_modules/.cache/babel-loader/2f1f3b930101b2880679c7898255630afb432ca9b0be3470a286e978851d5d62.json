{"ast":null,"code":"import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { AppRootContext } from './AppRootContext';\nimport { AppearanceProvider } from '../AppearanceProvider/AppearanceProvider';\nimport { useAppearance } from '../../hooks/useAppearance';\nimport { useIsClient } from '../../hooks/useIsClient';\nexport var AppRootPortal = function AppRootPortal(_ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    forcePortalProp = _ref.forcePortal;\n  var _React$useContext = React.useContext(AppRootContext),\n    portalRoot = _React$useContext.portalRoot,\n    mode = _React$useContext.mode,\n    disablePortal = _React$useContext.disablePortal;\n  var appearance = useAppearance();\n  var isClient = useIsClient();\n  if (!isClient) {\n    return null;\n  }\n  var forcePortal = forcePortalProp !== null && forcePortalProp !== void 0 ? forcePortalProp : mode !== 'full';\n  return !disablePortal && portalRoot && forcePortal ? /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(AppearanceProvider, {\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, children)), portalRoot) : /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};","map":{"version":3,"names":["React","createPortal","AppRootContext","AppearanceProvider","useAppearance","useIsClient","AppRootPortal","_ref","children","className","forcePortalProp","forcePortal","_React$useContext","useContext","portalRoot","mode","disablePortal","appearance","isClient","createElement","Fragment"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\AppRoot\\AppRootPortal.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { AppRootContext } from './AppRootContext';\nimport { AppearanceProvider } from '../AppearanceProvider/AppearanceProvider';\nimport { useAppearance } from '../../hooks/useAppearance';\nimport { useIsClient } from '../../hooks/useIsClient';\n\nexport interface AppRootPortalProps {\n  className?: string;\n  forcePortal?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const AppRootPortal = ({\n  children,\n  className,\n  forcePortal: forcePortalProp,\n}: AppRootPortalProps) => {\n  const { portalRoot, mode, disablePortal } = React.useContext(AppRootContext);\n  const appearance = useAppearance();\n\n  const isClient = useIsClient();\n  if (!isClient) {\n    return null;\n  }\n\n  const forcePortal = forcePortalProp ?? mode !== 'full';\n\n  return !disablePortal && portalRoot && forcePortal ? (\n    createPortal(\n      <AppearanceProvider appearance={appearance}>\n        <div className={className}>{children}</div>\n      </AppearanceProvider>,\n      portalRoot,\n    )\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,kBAAkB,QAAQ,0CAA0C;AAC7E,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,QAAQ,yBAAyB;AAQrD,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAIA;EAAA,IAHxBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACRC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACIC,eAAe,GAAAH,IAAA,CAA5BI,WAAW;EAEX,IAAAC,iBAAA,GAA4CZ,KAAK,CAACa,UAAU,CAACX,cAAc,CAAC;IAApEY,UAAU,GAAAF,iBAAA,CAAVE,UAAU;IAAEC,IAAI,GAAAH,iBAAA,CAAJG,IAAI;IAAEC,aAAa,GAAAJ,iBAAA,CAAbI,aAAa;EACvC,IAAMC,UAAU,GAAGb,aAAa,EAAE;EAElC,IAAMc,QAAQ,GAAGb,WAAW,EAAE;EAC9B,IAAI,CAACa,QAAQ,EAAE;IACb,OAAO,IAAI;EACb;EAEA,IAAMP,WAAW,GAAGD,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAIK,IAAI,KAAK,MAAM;EAEtD,OAAO,CAACC,aAAa,IAAIF,UAAU,IAAIH,WAAW,gBAChDV,YAAY,eACVD,KAAA,CAAAmB,aAAA,CAAChB,kBAAkB;IAACc,UAAU,EAAEA;EAAW,gBACzCjB,KAAA,CAAAmB,aAAA;IAAKV,SAAS,EAAEA;EAAU,GAAED,QAAQ,CAAO,CACxB,EACrBM,UAAU,CACX,gBAEDd,KAAA,CAAAmB,aAAA,CAACnB,KAAK,CAACoB,QAAQ,QAAEZ,QAAQ,CAC1B;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}