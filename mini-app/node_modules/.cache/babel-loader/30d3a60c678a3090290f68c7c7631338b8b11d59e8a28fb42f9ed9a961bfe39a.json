{"ast":null,"code":"import * as React from 'react';\nimport { hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { useIsClient } from './useIsClient';\n\n/**\n * Определение происходит с помощью `window.matchMedia`. Для того, чтобы не было ошибок при гидратации, по умолчанию\n * откладываем определение на второй рендер.\n *\n * [No SSR] Если передать `false`, то определение будет сразу.\n */\n\nexport function useAdaptivityHasPointer() {\n  var deferDetect = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var _React$useContext = React.useContext(AdaptivityContext),\n    hasPointerContext = _React$useContext.hasPointer;\n  var hasPointer = hasPointerContext === undefined ? hasPointerLib : hasPointerContext;\n  var isClient = useIsClient(!deferDetect);\n  if (!isClient) {\n    return undefined;\n  }\n  return hasPointer;\n}","map":{"version":3,"names":["React","hasMouse","hasPointerLib","AdaptivityContext","useIsClient","useAdaptivityHasPointer","deferDetect","arguments","length","undefined","_React$useContext","useContext","hasPointerContext","hasPointer","isClient"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useAdaptivityHasPointer.ts"],"sourcesContent":["import * as React from 'react';\nimport { hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { useIsClient } from './useIsClient';\n\n/**\n * Определение происходит с помощью `window.matchMedia`. Для того, чтобы не было ошибок при гидратации, по умолчанию\n * откладываем определение на второй рендер.\n *\n * [No SSR] Если передать `false`, то определение будет сразу.\n */\nexport function useAdaptivityHasPointer(deferDetect?: true): undefined | boolean; // prettier-ignore\nexport function useAdaptivityHasPointer(deferDetect?: false): boolean;\nexport function useAdaptivityHasPointer(deferDetect = true): undefined | boolean {\n  const { hasPointer: hasPointerContext } = React.useContext(AdaptivityContext);\n  const hasPointer = hasPointerContext === undefined ? hasPointerLib : hasPointerContext;\n\n  const isClient = useIsClient(!deferDetect);\n  if (!isClient) {\n    return undefined;\n  }\n\n  return hasPointer;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,IAAIC,aAAa,QAAQ,iBAAiB;AAC3D,SAASC,iBAAiB,QAAQ,oDAAoD;AACtF,SAASC,WAAW,QAAQ,eAAe;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,SAASC,uBAAuBA,CAAA,EAA0C;EAAA,IAAzCC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACxD,IAAAG,iBAAA,GAA0CV,KAAK,CAACW,UAAU,CAACR,iBAAiB,CAAC;IAAzDS,iBAAiB,GAAAF,iBAAA,CAA7BG,UAAU;EAClB,IAAMA,UAAU,GAAGD,iBAAiB,KAAKH,SAAS,GAAGP,aAAa,GAAGU,iBAAiB;EAEtF,IAAME,QAAQ,GAAGV,WAAW,CAAC,CAACE,WAAW,CAAC;EAC1C,IAAI,CAACQ,QAAQ,EAAE;IACb,OAAOL,SAAS;EAClB;EAEA,OAAOI,UAAU;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}