{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport * as React from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\nvar initialState = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null\n};\nfunction resolveInsets(e) {\n  var _e$detail = e.detail,\n    type = _e$detail.type,\n    data = _e$detail.data;\n  switch (type) {\n    case 'VKWebAppUpdateConfig':\n    case 'VKWebAppUpdateInsets':\n      // Устаревшее событие vk-bridge\n      var insets = data.insets;\n      if (insets) {\n        return _objectSpread(_objectSpread({}, insets), {}, {\n          bottom: insets.bottom > 150 ? 0 : insets.bottom // если больше 150 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n        });\n      }\n  }\n\n  return null;\n}\nvkBridge.subscribe(function (e) {\n  var insets = resolveInsets(e);\n  if (insets) {\n    initialState = insets;\n  }\n});\nexport function useInsets() {\n  var _React$useState = React.useState(initialState),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    insets = _React$useState2[0],\n    setInsets = _React$useState2[1];\n  useIsomorphicLayoutEffect(function () {\n    function connectListener(e) {\n      var insets = resolveInsets(e);\n      if (insets) {\n        setInsets(insets);\n      }\n    }\n    vkBridge.subscribe(connectListener);\n    return function () {\n      vkBridge.unsubscribe(connectListener);\n    };\n  }, []);\n  return insets;\n}","map":{"version":3,"names":["React","vkBridge","useIsomorphicLayoutEffect","initialState","bottom","top","left","right","resolveInsets","e","_e$detail","detail","type","data","insets","_objectSpread","subscribe","useInsets","_React$useState","useState","_React$useState2","_slicedToArray","setInsets","connectListener","unsubscribe"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useInsets.ts"],"sourcesContent":["import * as React from 'react';\nimport vkBridge, { Insets as BridgeInsets } from '@vkontakte/vk-bridge';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\nexport interface Insets {\n  bottom: BridgeInsets['bottom'] | null;\n  top: BridgeInsets['top'] | null;\n  left: BridgeInsets['left'] | null;\n  right: BridgeInsets['right'] | null;\n}\n\nlet initialState: Insets = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null,\n};\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nfunction resolveInsets(e: BridgeEvent): Insets | null {\n  const { type, data } = e.detail;\n  switch (type) {\n    case 'VKWebAppUpdateConfig':\n    case 'VKWebAppUpdateInsets': // Устаревшее событие vk-bridge\n      const { insets } = data;\n      if (insets) {\n        return {\n          ...insets,\n          bottom: insets.bottom > 150 ? 0 : insets.bottom, // если больше 150 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n        };\n      }\n  }\n  return null;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const insets = resolveInsets(e);\n  if (insets) {\n    initialState = insets;\n  }\n});\n\nexport function useInsets(): Insets {\n  const [insets, setInsets] = React.useState<Insets>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function connectListener(e: BridgeEvent) {\n      const insets = resolveInsets(e);\n      if (insets) {\n        setInsets(insets);\n      }\n    }\n\n    vkBridge.subscribe(connectListener);\n    return () => {\n      vkBridge.unsubscribe(connectListener);\n    };\n  }, []);\n\n  return insets;\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAkC,sBAAsB;AACvE,SAASC,yBAAyB,QAAQ,kCAAkC;AAS5E,IAAIC,YAAoB,GAAG;EACzBC,MAAM,EAAE,IAAI;EACZC,GAAG,EAAE,IAAI;EACTC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;AAWD,SAASC,aAAaA,CAACC,CAAc,EAAiB;EACpD,IAAAC,SAAA,GAAuBD,CAAC,CAACE,MAAM;IAAvBC,IAAI,GAAAF,SAAA,CAAJE,IAAI;IAAEC,IAAI,GAAAH,SAAA,CAAJG,IAAI;EAClB,QAAQD,IAAI;IACV,KAAK,sBAAsB;IAC3B,KAAK,sBAAsB;MAAE;MAC3B,IAAQE,MAAM,GAAKD,IAAI,CAAfC,MAAM;MACd,IAAIA,MAAM,EAAE;QACV,OAAAC,aAAA,CAAAA,aAAA,KACKD,MAAM;UACTV,MAAM,EAAEU,MAAM,CAACV,MAAM,GAAG,GAAG,GAAG,CAAC,GAAGU,MAAM,CAACV,MAAM,CAAE;QAAA;MAErD;EAAA;;EAEJ,OAAO,IAAI;AACb;AAEAH,QAAQ,CAACe,SAAS,CAAC,UAACP,CAAc,EAAK;EACrC,IAAMK,MAAM,GAAGN,aAAa,CAACC,CAAC,CAAC;EAC/B,IAAIK,MAAM,EAAE;IACVX,YAAY,GAAGW,MAAM;EACvB;AACF,CAAC,CAAC;AAEF,OAAO,SAASG,SAASA,CAAA,EAAW;EAClC,IAAAC,eAAA,GAA4BlB,KAAK,CAACmB,QAAQ,CAAShB,YAAY,CAAC;IAAAiB,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAzDJ,MAAM,GAAAM,gBAAA;IAAEE,SAAS,GAAAF,gBAAA;EAExBlB,yBAAyB,CAAC,YAAM;IAC9B,SAASqB,eAAeA,CAACd,CAAc,EAAE;MACvC,IAAMK,MAAM,GAAGN,aAAa,CAACC,CAAC,CAAC;MAC/B,IAAIK,MAAM,EAAE;QACVQ,SAAS,CAACR,MAAM,CAAC;MACnB;IACF;IAEAb,QAAQ,CAACe,SAAS,CAACO,eAAe,CAAC;IACnC,OAAO,YAAM;MACXtB,QAAQ,CAACuB,WAAW,CAACD,eAAe,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOT,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}