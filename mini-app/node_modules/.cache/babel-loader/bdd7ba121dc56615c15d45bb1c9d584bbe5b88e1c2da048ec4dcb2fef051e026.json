{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { Keys, pressedKey } from '../lib/accessibility';\nimport { useDOM } from '../lib/dom';\nimport { useGlobalEventListener } from './useGlobalEventListener';\nexport var ENABLE_KEYBOARD_INPUT_EVENT_NAME = 'enableKeyboardInput';\nexport var DISABLE_KEYBOARD_INPUT_EVENT_NAME = 'disableKeyboardInput';\nexport function useKeyboardInputTracker() {\n  var _useDOM = useDOM(),\n    document = _useDOM.document;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isKeyboardInputActive = _React$useState2[0],\n    toggleKeyboardInput = _React$useState2[1];\n  var enableKeyboardInput = React.useCallback(function () {\n    toggleKeyboardInput(true);\n  }, []);\n  var handleKeydown = React.useCallback(function (e) {\n    if (pressedKey(e) === Keys.TAB) {\n      enableKeyboardInput();\n    }\n  }, [enableKeyboardInput]);\n  var disableKeyboardInput = React.useCallback(function () {\n    toggleKeyboardInput(false);\n  }, []);\n  var eventOptions = {\n    passive: true,\n    capture: true\n  };\n  useGlobalEventListener(document, 'keydown', handleKeydown, eventOptions);\n  useGlobalEventListener(document, 'mousedown', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, 'touchstart', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, ENABLE_KEYBOARD_INPUT_EVENT_NAME, enableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, DISABLE_KEYBOARD_INPUT_EVENT_NAME, disableKeyboardInput, eventOptions);\n  return isKeyboardInputActive;\n}","map":{"version":3,"names":["React","Keys","pressedKey","useDOM","useGlobalEventListener","ENABLE_KEYBOARD_INPUT_EVENT_NAME","DISABLE_KEYBOARD_INPUT_EVENT_NAME","useKeyboardInputTracker","_useDOM","document","_React$useState","useState","_React$useState2","_slicedToArray","isKeyboardInputActive","toggleKeyboardInput","enableKeyboardInput","useCallback","handleKeydown","e","TAB","disableKeyboardInput","eventOptions","passive","capture"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useKeyboardInputTracker.ts"],"sourcesContent":["import * as React from 'react';\nimport { Keys, pressedKey } from '../lib/accessibility';\nimport { useDOM } from '../lib/dom';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\nexport const ENABLE_KEYBOARD_INPUT_EVENT_NAME = 'enableKeyboardInput';\nexport const DISABLE_KEYBOARD_INPUT_EVENT_NAME = 'disableKeyboardInput';\n\nexport function useKeyboardInputTracker(): boolean {\n  const { document } = useDOM();\n\n  const [isKeyboardInputActive, toggleKeyboardInput] = React.useState<boolean>(false);\n\n  const enableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(true);\n  }, []);\n\n  const handleKeydown = React.useCallback(\n    (e: KeyboardEvent) => {\n      if (pressedKey(e) === Keys.TAB) {\n        enableKeyboardInput();\n      }\n    },\n    [enableKeyboardInput],\n  );\n\n  const disableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(false);\n  }, []);\n\n  const eventOptions = {\n    passive: true,\n    capture: true,\n  };\n\n  useGlobalEventListener(document, 'keydown', handleKeydown, eventOptions);\n  useGlobalEventListener(document, 'mousedown', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, 'touchstart', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(\n    document,\n    ENABLE_KEYBOARD_INPUT_EVENT_NAME,\n    enableKeyboardInput,\n    eventOptions,\n  );\n  useGlobalEventListener(\n    document,\n    DISABLE_KEYBOARD_INPUT_EVENT_NAME,\n    disableKeyboardInput,\n    eventOptions,\n  );\n\n  return isKeyboardInputActive;\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,EAAEC,UAAU,QAAQ,sBAAsB;AACvD,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,sBAAsB,QAAQ,0BAA0B;AAEjE,OAAO,IAAMC,gCAAgC,GAAG,qBAAqB;AACrE,OAAO,IAAMC,iCAAiC,GAAG,sBAAsB;AAEvE,OAAO,SAASC,uBAAuBA,CAAA,EAAY;EACjD,IAAAC,OAAA,GAAqBL,MAAM,EAAE;IAArBM,QAAQ,GAAAD,OAAA,CAARC,QAAQ;EAEhB,IAAAC,eAAA,GAAqDV,KAAK,CAACW,QAAQ,CAAU,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA5EI,qBAAqB,GAAAF,gBAAA;IAAEG,mBAAmB,GAAAH,gBAAA;EAEjD,IAAMI,mBAAmB,GAAGhB,KAAK,CAACiB,WAAW,CAAC,YAAM;IAClDF,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,aAAa,GAAGlB,KAAK,CAACiB,WAAW,CACrC,UAACE,CAAgB,EAAK;IACpB,IAAIjB,UAAU,CAACiB,CAAC,CAAC,KAAKlB,IAAI,CAACmB,GAAG,EAAE;MAC9BJ,mBAAmB,EAAE;IACvB;EACF,CAAC,EACD,CAACA,mBAAmB,CAAC,CACtB;EAED,IAAMK,oBAAoB,GAAGrB,KAAK,CAACiB,WAAW,CAAC,YAAM;IACnDF,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMO,YAAY,GAAG;IACnBC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE;EACX,CAAC;EAEDpB,sBAAsB,CAACK,QAAQ,EAAE,SAAS,EAAES,aAAa,EAAEI,YAAY,CAAC;EACxElB,sBAAsB,CAACK,QAAQ,EAAE,WAAW,EAAEY,oBAAoB,EAAEC,YAAY,CAAC;EACjFlB,sBAAsB,CAACK,QAAQ,EAAE,YAAY,EAAEY,oBAAoB,EAAEC,YAAY,CAAC;EAClFlB,sBAAsB,CACpBK,QAAQ,EACRJ,gCAAgC,EAChCW,mBAAmB,EACnBM,YAAY,CACb;EACDlB,sBAAsB,CACpBK,QAAQ,EACRH,iCAAiC,EACjCe,oBAAoB,EACpBC,YAAY,CACb;EAED,OAAOR,qBAAqB;AAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}