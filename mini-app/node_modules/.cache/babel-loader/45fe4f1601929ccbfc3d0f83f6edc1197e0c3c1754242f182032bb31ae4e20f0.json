{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"style\", \"onFocus\", \"onKeyDown\", \"className\", \"fetching\", \"renderOption\", \"emptyText\", \"getRef\", \"getRootRef\", \"disabled\", \"placeholder\", \"tabIndex\", \"getOptionValue\", \"getOptionLabel\", \"showSelected\", \"getNewOptionData\", \"renderChip\", \"popupDirection\", \"creatable\", \"filterFn\", \"inputValue\", \"creatableText\", \"closeAfterSelect\", \"onChangeStart\", \"before\", \"options\", \"fixDropdownWidth\", \"forceDropdownPortal\"];\nimport * as React from 'react';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { ChipsInputBase, chipsInputDefaultProps } from '../ChipsInputBase/ChipsInputBase';\nimport { CustomSelectOption } from '../CustomSelectOption/CustomSelectOption';\nimport { useChipsSelect } from '../../hooks/useChipsSelect';\nimport { useDOM } from '../../lib/dom';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { defaultFilterFn } from '../../lib/select';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport { FormField } from '../FormField/FormField';\nimport { IconButton } from '../IconButton/IconButton';\nvar FOCUS_ACTION_NEXT = 'next';\nvar FOCUS_ACTION_PREV = 'prev';\nvar chipsSelectDefaultProps = _objectSpread(_objectSpread({}, chipsInputDefaultProps), {}, {\n  emptyText: 'Ничего не найдено',\n  creatableText: 'Создать значение',\n  onChangeStart: noop,\n  creatable: false,\n  fetching: false,\n  showSelected: true,\n  closeAfterSelect: true,\n  options: [],\n  filterFn: defaultFilterFn,\n  renderOption: function renderOption(props) {\n    return /*#__PURE__*/React.createElement(CustomSelectOption, props);\n  }\n});\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsSelect\n */\nexport var ChipsSelect = function ChipsSelect(props) {\n  var propsWithDefault = _objectSpread(_objectSpread({}, chipsSelectDefaultProps), props);\n  var style = propsWithDefault.style,\n    onFocus = propsWithDefault.onFocus,\n    onKeyDown = propsWithDefault.onKeyDown,\n    className = propsWithDefault.className,\n    fetching = propsWithDefault.fetching,\n    renderOption = propsWithDefault.renderOption,\n    emptyText = propsWithDefault.emptyText,\n    getRef = propsWithDefault.getRef,\n    getRootRef = propsWithDefault.getRootRef,\n    disabled = propsWithDefault.disabled,\n    placeholder = propsWithDefault.placeholder,\n    tabIndex = propsWithDefault.tabIndex,\n    getOptionValue = propsWithDefault.getOptionValue,\n    getOptionLabel = propsWithDefault.getOptionLabel,\n    showSelected = propsWithDefault.showSelected,\n    getNewOptionData = propsWithDefault.getNewOptionData,\n    renderChip = propsWithDefault.renderChip,\n    popupDirection = propsWithDefault.popupDirection,\n    creatable = propsWithDefault.creatable,\n    filterFn = propsWithDefault.filterFn,\n    inputValue = propsWithDefault.inputValue,\n    creatableText = propsWithDefault.creatableText,\n    closeAfterSelect = propsWithDefault.closeAfterSelect,\n    onChangeStart = propsWithDefault.onChangeStart,\n    before = propsWithDefault.before,\n    options = propsWithDefault.options,\n    fixDropdownWidth = propsWithDefault.fixDropdownWidth,\n    forceDropdownPortal = propsWithDefault.forceDropdownPortal,\n    restProps = _objectWithoutProperties(propsWithDefault, _excluded);\n  var _useDOM = useDOM(),\n    document = _useDOM.document;\n  var _React$useState = React.useState(undefined),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    popperPlacement = _React$useState2[0],\n    setPopperPlacement = _React$useState2[1];\n  var scrollBoxRef = React.useRef(null);\n  var rootRef = useExternRef(getRef);\n  var _useChipsSelect = useChipsSelect(propsWithDefault),\n    fieldValue = _useChipsSelect.fieldValue,\n    _useChipsSelect$selec = _useChipsSelect.selectedOptions,\n    selectedOptions = _useChipsSelect$selec === void 0 ? [] : _useChipsSelect$selec,\n    opened = _useChipsSelect.opened,\n    setOpened = _useChipsSelect.setOpened,\n    addOptionFromInput = _useChipsSelect.addOptionFromInput,\n    filteredOptions = _useChipsSelect.filteredOptions,\n    addOption = _useChipsSelect.addOption,\n    handleInputChange = _useChipsSelect.handleInputChange,\n    clearInput = _useChipsSelect.clearInput,\n    focusedOption = _useChipsSelect.focusedOption,\n    setFocusedOption = _useChipsSelect.setFocusedOption,\n    focusedOptionIndex = _useChipsSelect.focusedOptionIndex,\n    setFocusedOptionIndex = _useChipsSelect.setFocusedOptionIndex;\n  var showCreatable = Boolean(creatable && creatableText && !filteredOptions.length && fieldValue);\n  var handleFocus = function handleFocus(e) {\n    setOpened(true);\n    setFocusedOptionIndex(0);\n    onFocus(e);\n  };\n  var handleClickOutside = function handleClickOutside(e) {\n    var _rootRef$current;\n    if (e.target !== rootRef.current && !((_rootRef$current = rootRef.current) !== null && _rootRef$current !== void 0 && _rootRef$current.contains(e.target))) {\n      setOpened(false);\n    }\n  };\n  var chipsSelectOptions = React.useRef([]).current;\n  var scrollToElement = function scrollToElement(index) {\n    var center = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var dropdown = scrollBoxRef.current;\n    var item = chipsSelectOptions[index];\n    if (!item || !dropdown) {\n      return;\n    }\n    var dropdownHeight = dropdown.offsetHeight;\n    var scrollTop = dropdown.scrollTop;\n    var itemTop = item.offsetTop;\n    var itemHeight = item.offsetHeight;\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  };\n  var focusOptionByIndex = function focusOptionByIndex(index, oldIndex) {\n    var length = filteredOptions.length;\n    if (index < 0) {\n      index = length - 1;\n    } else if (index >= length) {\n      index = 0;\n    }\n    if (index === oldIndex) {\n      return;\n    }\n    scrollToElement(index);\n    setFocusedOptionIndex(index);\n  };\n  var focusOption = function focusOption(nextIndex, type) {\n    var index = typeof nextIndex !== 'number' ? -1 : nextIndex;\n    if (type === FOCUS_ACTION_NEXT) {\n      index = index + 1;\n    } else if (type === FOCUS_ACTION_PREV) {\n      index = index - 1;\n    }\n    if (focusedOptionIndex != null) {\n      focusOptionByIndex(index, focusedOptionIndex);\n    }\n  };\n  var handleKeyDown = function handleKeyDown(e) {\n    onKeyDown(e);\n    if (e.key === 'ArrowUp' && !e.defaultPrevented) {\n      e.preventDefault();\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_PREV);\n      }\n    }\n    if (e.key === 'ArrowDown' && !e.defaultPrevented) {\n      e.preventDefault();\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_NEXT);\n      }\n    }\n    if (e.key === 'Enter' && !e.defaultPrevented && opened && focusedOptionIndex != null) {\n      var _option = filteredOptions[focusedOptionIndex];\n      if (_option) {\n        onChangeStart(e, _option);\n        if (!e.defaultPrevented) {\n          addOption(_option);\n          setFocusedOptionIndex(null);\n          clearInput();\n          closeAfterSelect && setOpened(false);\n          e.preventDefault();\n        }\n      } else if (!creatable) {\n        e.preventDefault();\n      }\n    }\n    if (['Escape', 'Tab'].includes(e.key) && !e.defaultPrevented && opened) {\n      setOpened(false);\n    }\n  };\n  React.useEffect(function () {\n    if (focusedOptionIndex != null && filteredOptions[focusedOptionIndex]) {\n      setFocusedOption(filteredOptions[focusedOptionIndex]);\n    } else if (focusedOptionIndex === null || focusedOptionIndex === 0) {\n      setFocusedOption(null);\n    }\n  }, [focusedOptionIndex, filteredOptions, setFocusedOption]);\n  React.useEffect(function () {\n    var index = focusedOption ? filteredOptions.findIndex(function (_ref) {\n      var value = _ref.value;\n      return value === focusedOption.value;\n    }) : -1;\n    if (index === -1 && !!filteredOptions.length && !showCreatable && closeAfterSelect) {\n      setFocusedOption(filteredOptions[0]);\n    }\n  }, [filteredOptions, focusedOption, showCreatable, closeAfterSelect, setFocusedOption]);\n  useGlobalEventListener(document, 'click', handleClickOutside);\n  var renderChipWrapper = function renderChipWrapper(renderChipProps) {\n    if (renderChipProps === undefined) {\n      return null;\n    }\n    var onRemoveWrapper = function onRemoveWrapper(e, value) {\n      var _renderChipProps$onRe;\n      e === null || e === void 0 ? void 0 : e.preventDefault();\n      e === null || e === void 0 ? void 0 : e.stopPropagation();\n      (_renderChipProps$onRe = renderChipProps.onRemove) === null || _renderChipProps$onRe === void 0 ? void 0 : _renderChipProps$onRe.call(renderChipProps, e, value);\n    };\n    return renderChip(_objectSpread(_objectSpread({}, renderChipProps), {}, {\n      onRemove: onRemoveWrapper\n    }));\n  };\n  var isPopperDirectionTop = popperPlacement === null || popperPlacement === void 0 ? void 0 : popperPlacement.includes('top');\n  var onPlacementChange = React.useCallback(function (placement) {\n    setPopperPlacement(placement);\n  }, [setPopperPlacement]);\n  var onDropdownMouseLeave = React.useCallback(function () {\n    setFocusedOptionIndex(null);\n  }, [setFocusedOptionIndex]);\n  var observableRefs = React.useMemo(function () {\n    return [scrollBoxRef, rootRef];\n  }, [rootRef, scrollBoxRef]);\n  var toggleOpened = function toggleOpened() {\n    setOpened(function (prevOpened) {\n      return !prevOpened;\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormField, {\n    getRootRef: rootRef,\n    style: style,\n    className: classNames(\"vkuiChipsSelect\", opened && (isPopperDirectionTop ? \"vkuiChipsSelect--pop-up\" : \"vkuiChipsSelect--pop-down\"), className),\n    disabled: disabled,\n    role: \"application\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": restProps.readOnly,\n    after: /*#__PURE__*/React.createElement(IconButton, {\n      className: \"vkuiChipsSelect__dropdown\",\n      activeMode: \"\",\n      hoverMode: \"\"\n      // TODO: add label customization\n      ,\n\n      \"aria-label\": opened ? 'Скрыть' : 'Развернуть',\n      onClick: toggleOpened\n    }, /*#__PURE__*/React.createElement(DropdownIcon, {\n      className: \"vkuiChipsSelect__icon\",\n      opened: opened\n    })),\n    before: before\n  }, /*#__PURE__*/React.createElement(ChipsInputBase, _extends({}, restProps, {\n    tabIndex: tabIndex,\n    value: selectedOptions,\n    inputValue: fieldValue,\n    getNewOptionData: getNewOptionData,\n    getOptionLabel: getOptionLabel,\n    getOptionValue: getOptionValue,\n    renderChip: renderChipWrapper,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    placeholder: placeholder,\n    getRef: getRef,\n    disabled: disabled,\n    onInputChange: handleInputChange\n  }))), opened && /*#__PURE__*/React.createElement(CustomSelectDropdown, {\n    targetRef: rootRef,\n    placement: popupDirection,\n    scrollBoxRef: scrollBoxRef,\n    observableRefs: observableRefs,\n    onPlacementChange: onPlacementChange,\n    onMouseLeave: onDropdownMouseLeave,\n    fetching: fetching,\n    className: \"vkuiChipsSelect__options\",\n    sameWidth: fixDropdownWidth,\n    forcePortal: forceDropdownPortal\n  }, showCreatable && /*#__PURE__*/React.createElement(CustomSelectOption, {\n    hovered: focusedOptionIndex === 0,\n    onMouseDown: addOptionFromInput,\n    onMouseEnter: function onMouseEnter() {\n      return setFocusedOptionIndex(0);\n    }\n  }, creatableText), !(filteredOptions !== null && filteredOptions !== void 0 && filteredOptions.length) && !showCreatable && emptyText ? /*#__PURE__*/React.createElement(Footnote, {\n    className: \"vkuiChipsSelect__empty\"\n  }, emptyText) : filteredOptions.map(function (option, index) {\n    var label = getOptionLabel(option);\n    var hovered = focusedOption && getOptionValue(option) === getOptionValue(focusedOption);\n    var selected = selectedOptions.find(function (selectedOption) {\n      return getOptionValue(selectedOption) === getOptionValue(option);\n    });\n    var value = getOptionValue(option);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"\".concat(_typeof(value), \"-\").concat(value)\n    }, renderOption({\n      className: \"vkuiChipsSelect__option\",\n      option: option,\n      hovered: Boolean(hovered),\n      children: label,\n      selected: !!selected,\n      getRootRef: function getRootRef(e) {\n        if (e) {\n          return chipsSelectOptions[index] = e;\n        }\n        return undefined;\n      },\n      onMouseDown: function onMouseDown(e) {\n        onChangeStart === null || onChangeStart === void 0 ? void 0 : onChangeStart(e, option);\n        if (!e.defaultPrevented) {\n          closeAfterSelect && setOpened(false);\n          addOption(option);\n          clearInput();\n        }\n      },\n      onMouseEnter: function onMouseEnter() {\n        return setFocusedOptionIndex(index);\n      }\n    }));\n  })));\n};","map":{"version":3,"names":["React","DropdownIcon","classNames","noop","ChipsInputBase","chipsInputDefaultProps","CustomSelectOption","useChipsSelect","useDOM","Footnote","useExternRef","useGlobalEventListener","defaultFilterFn","CustomSelectDropdown","FormField","IconButton","FOCUS_ACTION_NEXT","FOCUS_ACTION_PREV","chipsSelectDefaultProps","_objectSpread","emptyText","creatableText","onChangeStart","creatable","fetching","showSelected","closeAfterSelect","options","filterFn","renderOption","props","createElement","ChipsSelect","propsWithDefault","style","onFocus","onKeyDown","className","getRef","getRootRef","disabled","placeholder","tabIndex","getOptionValue","getOptionLabel","getNewOptionData","renderChip","popupDirection","inputValue","before","fixDropdownWidth","forceDropdownPortal","restProps","_objectWithoutProperties","_excluded","_useDOM","document","_React$useState","useState","undefined","_React$useState2","_slicedToArray","popperPlacement","setPopperPlacement","scrollBoxRef","useRef","rootRef","_useChipsSelect","fieldValue","_useChipsSelect$selec","selectedOptions","opened","setOpened","addOptionFromInput","filteredOptions","addOption","handleInputChange","clearInput","focusedOption","setFocusedOption","focusedOptionIndex","setFocusedOptionIndex","showCreatable","Boolean","length","handleFocus","e","handleClickOutside","_rootRef$current","target","current","contains","chipsSelectOptions","scrollToElement","index","center","arguments","dropdown","item","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","focusOptionByIndex","oldIndex","focusOption","nextIndex","type","handleKeyDown","key","defaultPrevented","preventDefault","_option","includes","useEffect","findIndex","_ref","value","renderChipWrapper","renderChipProps","onRemoveWrapper","_renderChipProps$onRe","stopPropagation","onRemove","call","isPopperDirectionTop","onPlacementChange","useCallback","placement","onDropdownMouseLeave","observableRefs","useMemo","toggleOpened","prevOpened","Fragment","role","readOnly","after","activeMode","hoverMode","onClick","_extends","onInputChange","targetRef","onMouseLeave","sameWidth","forcePortal","hovered","onMouseDown","onMouseEnter","map","option","label","selected","find","selectedOption","concat","_typeof","children"],"sources":["E:\\lessonReactForm\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\ChipsSelect\\ChipsSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { ChipOption, ChipValue, RenderChip } from '../Chip/Chip';\nimport { ChipsInputProps } from '../ChipsInput/ChipsInput';\nimport { ChipsInputBase, chipsInputDefaultProps } from '../ChipsInputBase/ChipsInputBase';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { useChipsSelect } from '../../hooks/useChipsSelect';\nimport { useDOM } from '../../lib/dom';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { defaultFilterFn } from '../../lib/select';\nimport { Placement } from '../Popper/Popper';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport { FormField } from '../FormField/FormField';\nimport { IconButton } from '../IconButton/IconButton';\nimport styles from './ChipsSelect.module.css';\n\nexport interface ChipsSelectProps<Option extends ChipOption>\n  extends Omit<ChipsInputProps<Option>, 'after'> {\n  popupDirection?: 'top' | 'bottom';\n  options?: Option[];\n  filterFn?:\n    | false\n    | ((\n        value?: string,\n        option?: Option,\n        getOptionLabel?: Pick<ChipsInputProps<Option>, 'getOptionLabel'>['getOptionLabel'],\n      ) => boolean);\n  /**\n   * Возможность создавать чипы которых нет в списке (по enter или с помощью пункта в меню, см creatableText)\n   */\n  creatable?: boolean;\n  /**\n   * Отрисовка лоадера вместо списка опций в выпадающем списке\n   */\n  fetching?: boolean;\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Показывать или скрывать уже выбранные опции\n   */\n  showSelected?: boolean;\n  /**\n   * Текст для пункта создающего чипы при клике, так же отвечает за то будет ли показан этот пункт (показывается после того как в списке не отсанется опций)\n   */\n  creatableText?: string;\n  /**\n   * Текст который показывается если список опций пуст\n   */\n  emptyText?: string;\n  /**\n   * Событие срабатывающее перед onChange\n   */\n  onChangeStart?: (e: React.MouseEvent | React.KeyboardEvent, option: Option) => void;\n  /**\n   * Закрытие выпадающего списка после выбора элемента\n   */\n  closeAfterSelect?: boolean;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n}\n\ntype FocusActionType = 'next' | 'prev';\n\nconst FOCUS_ACTION_NEXT: FocusActionType = 'next';\nconst FOCUS_ACTION_PREV: FocusActionType = 'prev';\n\nconst chipsSelectDefaultProps: ChipsSelectProps<any> = {\n  ...chipsInputDefaultProps,\n  emptyText: 'Ничего не найдено',\n  creatableText: 'Создать значение',\n  onChangeStart: noop,\n  creatable: false,\n  fetching: false,\n  showSelected: true,\n  closeAfterSelect: true,\n  options: [],\n  filterFn: defaultFilterFn,\n  renderOption(props) {\n    return <CustomSelectOption {...props} />;\n  },\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsSelect\n */\nexport const ChipsSelect = <Option extends ChipOption>(props: ChipsSelectProps<Option>) => {\n  const propsWithDefault = { ...chipsSelectDefaultProps, ...props };\n  const {\n    style,\n    onFocus,\n    onKeyDown,\n    className,\n    fetching,\n    renderOption,\n    emptyText,\n    getRef,\n    getRootRef,\n    disabled,\n    placeholder,\n    tabIndex,\n    getOptionValue,\n    getOptionLabel,\n    showSelected,\n    getNewOptionData,\n    renderChip,\n    popupDirection,\n    creatable,\n    filterFn,\n    inputValue,\n    creatableText,\n    closeAfterSelect,\n    onChangeStart,\n    before,\n    options,\n    fixDropdownWidth,\n    forceDropdownPortal,\n    ...restProps\n  } = propsWithDefault;\n\n  const { document } = useDOM();\n\n  const [popperPlacement, setPopperPlacement] = React.useState<Placement | undefined>(undefined);\n\n  const scrollBoxRef = React.useRef<HTMLDivElement>(null);\n  const rootRef = useExternRef(getRef);\n  const {\n    fieldValue,\n    selectedOptions = [],\n    opened,\n    setOpened,\n    addOptionFromInput,\n    filteredOptions,\n    addOption,\n    handleInputChange,\n    clearInput,\n    focusedOption,\n    setFocusedOption,\n    focusedOptionIndex,\n    setFocusedOptionIndex,\n  } = useChipsSelect(propsWithDefault);\n\n  const showCreatable = Boolean(\n    creatable && creatableText && !filteredOptions.length && fieldValue,\n  );\n\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    setOpened(true);\n    setFocusedOptionIndex(0);\n    onFocus!(e);\n  };\n\n  const handleClickOutside = (e: MouseEvent) => {\n    if (e.target !== rootRef.current && !rootRef.current?.contains(e.target as Node)) {\n      setOpened(false);\n    }\n  };\n\n  const chipsSelectOptions = React.useRef<HTMLElement[]>([]).current;\n\n  const scrollToElement = (index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = chipsSelectOptions[index];\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  };\n\n  const focusOptionByIndex = (index: number, oldIndex: number) => {\n    const { length } = filteredOptions;\n\n    if (index < 0) {\n      index = length - 1;\n    } else if (index >= length) {\n      index = 0;\n    }\n\n    if (index === oldIndex) {\n      return;\n    }\n\n    scrollToElement(index);\n    setFocusedOptionIndex(index);\n  };\n\n  const focusOption = (nextIndex: number | null, type: FocusActionType) => {\n    let index = typeof nextIndex !== 'number' ? -1 : nextIndex;\n\n    if (type === FOCUS_ACTION_NEXT) {\n      index = index + 1;\n    } else if (type === FOCUS_ACTION_PREV) {\n      index = index - 1;\n    }\n\n    if (focusedOptionIndex != null) {\n      focusOptionByIndex(index, focusedOptionIndex);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown!(e);\n\n    if (e.key === 'ArrowUp' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_PREV);\n      }\n    }\n\n    if (e.key === 'ArrowDown' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_NEXT);\n      }\n    }\n\n    if (e.key === 'Enter' && !e.defaultPrevented && opened && focusedOptionIndex != null) {\n      const option = filteredOptions[focusedOptionIndex];\n\n      if (option) {\n        onChangeStart!(e, option);\n\n        if (!e.defaultPrevented) {\n          addOption(option);\n          setFocusedOptionIndex(null);\n          clearInput();\n          closeAfterSelect && setOpened(false);\n          e.preventDefault();\n        }\n      } else if (!creatable) {\n        e.preventDefault();\n      }\n    }\n\n    if (['Escape', 'Tab'].includes(e.key) && !e.defaultPrevented && opened) {\n      setOpened(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (focusedOptionIndex != null && filteredOptions[focusedOptionIndex]) {\n      setFocusedOption(filteredOptions[focusedOptionIndex]);\n    } else if (focusedOptionIndex === null || focusedOptionIndex === 0) {\n      setFocusedOption(null);\n    }\n  }, [focusedOptionIndex, filteredOptions, setFocusedOption]);\n\n  React.useEffect(() => {\n    const index = focusedOption\n      ? filteredOptions.findIndex(({ value }) => value === focusedOption.value)\n      : -1;\n\n    if (index === -1 && !!filteredOptions.length && !showCreatable && closeAfterSelect) {\n      setFocusedOption(filteredOptions[0]);\n    }\n  }, [filteredOptions, focusedOption, showCreatable, closeAfterSelect, setFocusedOption]);\n\n  useGlobalEventListener(document, 'click', handleClickOutside);\n\n  const renderChipWrapper = (renderChipProps: RenderChip<Option> | undefined) => {\n    if (renderChipProps === undefined) {\n      return null;\n    }\n    const onRemoveWrapper = (e: React.MouseEvent | undefined, value: ChipValue | undefined) => {\n      e?.preventDefault();\n      e?.stopPropagation();\n\n      renderChipProps.onRemove?.(e, value);\n    };\n\n    return renderChip!({\n      ...renderChipProps,\n      onRemove: onRemoveWrapper,\n    });\n  };\n\n  const isPopperDirectionTop = popperPlacement?.includes('top');\n\n  const onPlacementChange = React.useCallback(\n    (placement?: Placement) => {\n      setPopperPlacement(placement);\n    },\n    [setPopperPlacement],\n  );\n\n  const onDropdownMouseLeave = React.useCallback(() => {\n    setFocusedOptionIndex(null);\n  }, [setFocusedOptionIndex]);\n\n  const observableRefs = React.useMemo(() => [scrollBoxRef, rootRef], [rootRef, scrollBoxRef]);\n\n  const toggleOpened = () => {\n    setOpened((prevOpened) => !prevOpened);\n  };\n\n  return (\n    <>\n      <FormField\n        getRootRef={rootRef}\n        style={style}\n        className={classNames(\n          styles['ChipsSelect'],\n          opened &&\n            (isPopperDirectionTop\n              ? styles['ChipsSelect--pop-up']\n              : styles['ChipsSelect--pop-down']),\n          className,\n        )}\n        disabled={disabled}\n        role=\"application\"\n        aria-disabled={disabled}\n        aria-readonly={restProps.readOnly}\n        after={\n          <IconButton\n            className={styles['ChipsSelect__dropdown']}\n            activeMode=\"\"\n            hoverMode=\"\"\n            // TODO: add label customization\n            aria-label={opened ? 'Скрыть' : 'Развернуть'}\n            onClick={toggleOpened}\n          >\n            <DropdownIcon className={styles['ChipsSelect__icon']} opened={opened} />\n          </IconButton>\n        }\n        before={before}\n      >\n        <ChipsInputBase\n          {...restProps}\n          tabIndex={tabIndex}\n          value={selectedOptions}\n          inputValue={fieldValue}\n          getNewOptionData={getNewOptionData}\n          getOptionLabel={getOptionLabel}\n          getOptionValue={getOptionValue}\n          renderChip={renderChipWrapper}\n          onFocus={handleFocus}\n          onKeyDown={handleKeyDown}\n          placeholder={placeholder}\n          getRef={getRef}\n          disabled={disabled}\n          onInputChange={handleInputChange}\n        />\n      </FormField>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={rootRef}\n          placement={popupDirection}\n          scrollBoxRef={scrollBoxRef}\n          observableRefs={observableRefs}\n          onPlacementChange={onPlacementChange}\n          onMouseLeave={onDropdownMouseLeave}\n          fetching={fetching}\n          className={styles['ChipsSelect__options']}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n        >\n          {showCreatable && (\n            <CustomSelectOption\n              hovered={focusedOptionIndex === 0}\n              onMouseDown={addOptionFromInput}\n              onMouseEnter={() => setFocusedOptionIndex(0)}\n            >\n              {creatableText}\n            </CustomSelectOption>\n          )}\n          {!filteredOptions?.length && !showCreatable && emptyText ? (\n            <Footnote className={styles['ChipsSelect__empty']}>{emptyText}</Footnote>\n          ) : (\n            filteredOptions.map((option: Option, index: number) => {\n              const label = getOptionLabel!(option);\n              const hovered =\n                focusedOption && getOptionValue!(option) === getOptionValue!(focusedOption);\n              const selected = selectedOptions.find((selectedOption: Option) => {\n                return getOptionValue!(selectedOption) === getOptionValue!(option);\n              });\n              const value = getOptionValue!(option);\n\n              return (\n                <React.Fragment key={`${typeof value}-${value}`}>\n                  {renderOption!({\n                    className: styles['ChipsSelect__option'],\n                    option,\n                    hovered: Boolean(hovered),\n                    children: label,\n                    selected: !!selected,\n                    getRootRef: (e) => {\n                      if (e) {\n                        return (chipsSelectOptions[index] = e);\n                      }\n                      return undefined;\n                    },\n                    onMouseDown: (e: React.MouseEvent<HTMLDivElement>) => {\n                      onChangeStart?.(e, option);\n\n                      if (!e.defaultPrevented) {\n                        closeAfterSelect && setOpened(false);\n                        addOption(option);\n                        clearInput();\n                      }\n                    },\n                    onMouseEnter: () => setFocusedOptionIndex(index),\n                  })}\n                </React.Fragment>\n              );\n            })\n          )}\n        </CustomSelectDropdown>\n      )}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}